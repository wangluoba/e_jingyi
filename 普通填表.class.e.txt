.版本 2

.程序集 普通填表, , 公开
.程序集变量 集_网页文档, 对象
.程序集变量 集_窗口句柄, 整数型

.子程序 _初始化
    线程_初始化COM库 ()

.子程序 _销毁
    线程_取消COM库 ()

.子程序 初始化, 逻辑型, 公开, 使用网页填表时必须选初始化。成功返回真，失败返回假。
    .参数 浏览器句柄, 整数型, , 提供浏览器窗口句柄

    .如果真 (窗口_句柄是否有效 (浏览器句柄) ＝ 假)
        返回 (假)
    .如果真结束
    集_窗口句柄 ＝ 浏览器句柄
    网页_取网页文档对象 (集_窗口句柄, 集_网页文档)
    返回 (集_网页文档.是否为空 () ＝ 假)

.子程序 网页_取文档对象, 对象, 公开, 请先初始化后,再使用本命令
    返回 (集_网页文档)

.子程序 销毁, , 公开
    集_网页文档.清除 ()

.子程序 网页_取IE窗口句柄, 整数型, 公开
    .参数 窗口句柄, 整数型
    .局部变量 变量_00490125, 文本型
    .局部变量 变量_01490125, 整数型
    .局部变量 变量_02490125, 整数型

    变量_01490125 ＝ FindWindowExA (窗口句柄, 0, 0, 0)
    .判断循环首 (变量_01490125 ＞ 0)
        变量_00490125 ＝ 窗口_取类名 (变量_01490125)
        .如果真 (变量_00490125 ＝ “Internet Explorer_Server”)
            返回 (变量_01490125)
        .如果真结束
        变量_02490125 ＝ 网页_取IE窗口句柄 (变量_01490125)
        .如果真 (变量_02490125 ≠ 0)
            返回 (变量_02490125)
        .如果真结束
        变量_01490125 ＝ FindWindowExA (窗口句柄, 变量_01490125, 0, 0)
        处理事件 ()
    .判断循环尾 ()
    返回 (0)

.子程序 网页_取网页文档对象, 逻辑型, 公开, 通过浏览器句柄取网页文档对象
    .参数 浏览器句柄, 整数型
    .参数 文档对象, 对象, 参考, 返回的网页文档对象，只能提供变量
    .局部变量 变量_05490125, 文本型
    .局部变量 变量_06490125, 整数型
    .局部变量 变量_07490125, 整数型
    .局部变量 变量_08490125, 整数型
    .局部变量 变量_09490125, 对象
    .局部变量 变量_0A490125, 逻辑型
    .局部变量 变量_0B490125, 整数型
    .局部变量 变量_8E4E0125, 文本型

    变量_05490125 ＝ 窗口_取类名 (浏览器句柄)
    .如果真 (变量_05490125 ≠ “Internet Explorer_Server”)
        浏览器句柄 ＝ 网页_取IE窗口句柄 (浏览器句柄)
        .如果真 (浏览器句柄 ＝ 0)
            返回 (假)
        .如果真结束
        
    .如果真结束
    变量_08490125 ＝ RegisterWindowMessageA (“WM_HTML_GETOBJECT”)
    SendMessageTimeoutA (浏览器句柄, 变量_08490125, 0, 0, 2, 1000, 变量_06490125)
    变量_07490125 ＝ ObjectFromLresult (变量_06490125, { 32, 197, 111, 98, 30, 164, 207, 17, 167, 49, 0, 160, 201, 8, 38, 55 }, 0, 文档对象)
    .如果真 (变量_07490125 ＝ 0)
        返回 (真)
    .如果真结束
    返回 (假)

.子程序 控件_所有属性操作读, 整数型, 公开, 取指定控件的各种属性。成功返回指定控件的所有数量，失败返回0。
    .参数 大类型, 整数型, 可空, 0=单选框，1=复选框，2=文本框，3=多行文本框，4=按钮，5=高级按钮，6=图片按钮，7=图片，8=链接。9=title链接。10=组合框。11=DIV。12=ULLI。13=SPAN。
    .参数 元素类型, 文本型, 可空, 如：input,textarea,button
    .参数 控件类型, 文本型, 可空, 如：text|password|file分隔
    .参数 控件标题, 文本型, 参考 可空 数组
    .参数 控件内容, 文本型, 参考 可空 数组
    .参数 控件名称, 文本型, 参考 可空 数组
    .参数 控件ID, 文本型, 参考 可空 数组
    .参数 所属类型, 文本型, 参考 可空 数组
    .参数 链接地址, 文本型, 参考 可空 数组
    .参数 图片地址, 文本型, 参考 可空 数组
    .参数 图片宽度, 文本型, 参考 可空 数组
    .参数 图片高度, 文本型, 参考 可空 数组
    .参数 选中状态, 文本型, 参考 可空 数组
    .参数 引用代码, 文本型, 参考 可空 数组
    .参数 是否标记, 逻辑型, 可空
    .参数 title链接标题, 文本型, 参考 可空 数组
    .参数 title链接地址, 文本型, 参考 可空 数组
    .参数 返回的对象, 对象, 参考 可空 数组
    .局部变量 变量_DF610125, 整数型
    .局部变量 变量_E0610125, 对象
    .局部变量 变量_E1610125, 对象
    .局部变量 变量_E2610125, 文本型
    .局部变量 变量_E3610125, 文本型, , "0"
    .局部变量 变量_E4610125, 整数型
    .局部变量 变量_E5610125, 文本型, , "0"
    .局部变量 变量_E6610125, 整数型
    .局部变量 变量_E7610125, 整数型
    .局部变量 变量_E8610125, 整数型
    .局部变量 变量_E9610125, 文本型

    变量_E5610125 ＝ 分割文本 (元素类型, “|”, )
    变量_E6610125 ＝ 取数组成员数 (变量_E5610125)
    变量_E3610125 ＝ 分割文本 (控件类型, “|”, )
    变量_E4610125 ＝ 取数组成员数 (变量_E3610125)
    .如果真 (变量_E4610125 ＞ 0)
        .计次循环首 (变量_E6610125, 变量_E7610125)
            
            .如果真 (大类型 ＝ 13)
                变量_E0610125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, )
                变量_E1610125 ＝ 变量_E0610125.对象型方法 (“tags”, “span”)
                .计次循环首 (变量_E1610125.读数值属性 (“length”, ), 变量_DF610125)
                    加入成员 (所属类型, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“tagName”, ))
                    加入成员 (控件标题, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“innerText”, ))
                    加入成员 (控件名称, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“name”, ))
                    加入成员 (控件ID, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“ID”, ))
                    加入成员 (控件内容, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“title”, ))
                    变量_E9610125 ＝ 子文本替换 (变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“outerHTML”, ), #换行符, , , , 假)
                    加入成员 (引用代码, 变量_E9610125)
                    加入成员 (返回的对象, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1))
                .计次循环尾 ()
                到循环尾 ()
            .如果真结束
            
            .如果真 (大类型 ＝ 12)
                变量_E0610125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, )
                变量_E1610125 ＝ 变量_E0610125.对象型方法 (“tags”, “li”)
                .计次循环首 (变量_E1610125.读数值属性 (“length”, ), 变量_DF610125)
                    加入成员 (控件标题, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“innerText”, ))
                    加入成员 (控件ID, 变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“ID”, ))
                    变量_E9610125 ＝ 子文本替换 (变量_E1610125.读对象型属性 (“item”, 变量_DF610125 － 1).读文本属性 (“outerHTML”, ), #换行符, , , , 假)
                    加入成员 (引用代码, 变量_E9610125)
                .计次循环尾 ()
                到循环尾 ()
            .如果真结束
            
            变量_E0610125 ＝ 集_网页文档.对象型方法 (“getElementsByTagName”, 变量_E5610125 [变量_E7610125])
            .计次循环首 (变量_E0610125.读数值属性 (“length”, ), 变量_DF610125)
                变量_E1610125 ＝ 变量_E0610125.对象型方法 (“item”, 变量_DF610125 － 1)
                
                .如果真 (大类型 ＝ 9)
                    变量_E9610125 ＝ 变量_E1610125.读文本属性 (“title”, )
                    .如果真 (变量_E9610125 ≠ “”)
                        加入成员 (所属类型, 变量_E1610125.读文本属性 (“tagname”, ))
                        加入成员 (title链接标题, 变量_E9610125)
                        加入成员 (title链接地址, 变量_E1610125.读文本属性 (“href”, ))
                        加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                        加入成员 (返回的对象, 变量_E1610125)
                    .如果真结束
                    到循环尾 ()
                .如果真结束
                
                .如果 (变量_E5610125 [变量_E7610125] ＝ “a” 或 变量_E5610125 [变量_E7610125] ＝ “cite” 或 变量_E5610125 [变量_E7610125] ＝ “img” 或 变量_E5610125 [变量_E7610125] ＝ “div”)
                    变量_E2610125 ＝ 到小写 (变量_E1610125.读文本属性 (“tagName”, ))
                .否则
                    变量_E2610125 ＝ 到小写 (变量_E1610125.读文本属性 (“type”, ))
                .如果结束
                
                .计次循环首 (变量_E4610125, 变量_DF610125)
                    .判断开始 (大类型 ＝ 0)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“name”, “单选框” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“type”, ))
                            加入成员 (控件内容, 变量_E1610125.读文本属性 (“value”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (选中状态, 到文本 (变量_E1610125.读属性 (“checked”, ).取数值 () ＝ -1))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 1)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“name”, “复选框” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“type”, ))
                            加入成员 (控件内容, 变量_E1610125.读文本属性 (“value”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (选中状态, 到文本 (变量_E1610125.读属性 (“checked”, ).取数值 () ＝ -1))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 2)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“value”, “文本框” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“type”, ))
                            加入成员 (控件内容, 变量_E1610125.读文本属性 (“value”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 3)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“value”, “多行文本框” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“type”, ))
                            加入成员 (控件内容, 变量_E1610125.读文本属性 (“value”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 4)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“value”, “按钮” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“tagName”, ))
                            加入成员 (控件内容, 变量_E1610125.读文本属性 (“value”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 5)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“innertext”, “高级按钮” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“type”, ))
                            加入成员 (控件标题, 变量_E1610125.读文本属性 (“innertext”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 6)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            变量_E8610125 ＝ 变量_E8610125 ＋ 1
                            .如果真 (是否标记)
                                变量_E1610125.写属性 (“name”, “图片按钮” ＋ 到文本 (变量_E8610125))
                            .如果真结束
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“type”, ))
                            加入成员 (控件内容, 变量_E1610125.读文本属性 (“value”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (图片地址, 变量_E1610125.读文本属性 (“src”, ))
                            加入成员 (图片高度, 变量_E1610125.读文本属性 (“width”, ))
                            加入成员 (图片宽度, 变量_E1610125.读文本属性 (“height”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 7)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“tagname”, ))
                            加入成员 (控件标题, 变量_E1610125.读文本属性 (“innertext”, ))
                            加入成员 (链接地址, 变量_E1610125.读文本属性 (“href”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (title链接标题, 变量_E1610125.读文本属性 (“title”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 8)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“tagName”, ))
                            加入成员 (图片地址, 变量_E1610125.读文本属性 (“src”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (图片高度, 变量_E1610125.读文本属性 (“height”, ))
                            加入成员 (图片宽度, 变量_E1610125.读文本属性 (“width”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (title链接标题, 变量_E1610125.读文本属性 (“title”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 10)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“tagName”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .判断 (大类型 ＝ 11)
                        .如果真 (变量_E2610125 ＝ 变量_E3610125 [变量_DF610125])
                            加入成员 (所属类型, 变量_E1610125.读文本属性 (“tagName”, ))
                            加入成员 (控件名称, 变量_E1610125.读文本属性 (“name”, ))
                            加入成员 (控件标题, 变量_E1610125.读文本属性 (“innertext”, ))
                            加入成员 (控件ID, 变量_E1610125.读文本属性 (“ID”, ))
                            加入成员 (引用代码, 变量_E1610125.读文本属性 (“outerHTML”, ))
                            加入成员 (title链接标题, 变量_E1610125.读文本属性 (“title”, ))
                            加入成员 (返回的对象, 变量_E1610125)
                        .如果真结束
                        
                    .默认
                        
                    .判断结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
        .计次循环尾 ()
        
    .如果真结束
    .判断开始 (大类型 ＝ 12)
        返回 (取数组成员数 (控件标题))
    .判断 (大类型 ＝ 13)
        返回 (取数组成员数 (控件标题))
    .默认
        
    .判断结束
    返回 (取数组成员数 (所属类型))

.子程序 _内部_INPUT_取数量_复单, 整数型
    .参数 变量_13B00125, 文本型
    .参数 变量_14B00125, 文本型
    .参数 变量_15B00125, 逻辑型, 可空
    .局部变量 变量_16B00125, 对象
    .局部变量 变量_17B00125, 对象
    .局部变量 变量_18B00125, 文本型
    .局部变量 变量_19B00125, 整数型
    .局部变量 变量_1AB00125, 整数型
    .局部变量 变量_23B00125, 文本型

    变量_17B00125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “input”)
    .计次循环首 (变量_17B00125.读数值属性 (“length”, ), 变量_19B00125)
        变量_16B00125 ＝ 变量_17B00125.对象型方法 (“item”, 变量_19B00125 － 1)
        变量_18B00125 ＝ 变量_16B00125.读文本属性 (“type”, )
        .如果真 (寻找文本 (变量_13B00125, 变量_18B00125, , 假) ≠ -1)
            变量_1AB00125 ＝ 变量_1AB00125 ＋ 1
            .如果真 (变量_15B00125)
                变量_23B00125 ＝ 变量_16B00125.读文本属性 (“outerHTML”, ) ＋ “<font color=red>[复” ＋ 到文本 (变量_1AB00125) ＋ “]</font>”
                变量_16B00125.写属性 (“outerHTML”, 变量_23B00125)
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_1AB00125)

.子程序 _内部_INPUT_取数量, 整数型
    .参数 变量_7DAF0125, 文本型
    .参数 变量_83AF0125, 文本型
    .参数 变量_6AAF0125, 逻辑型, 可空
    .局部变量 变量_6DAF0125, 对象
    .局部变量 变量_6EAF0125, 对象
    .局部变量 变量_6FAF0125, 文本型
    .局部变量 变量_70AF0125, 整数型
    .局部变量 变量_71AF0125, 整数型

    变量_6EAF0125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “input”)
    .计次循环首 (变量_6EAF0125.读数值属性 (“length”, ), 变量_70AF0125)
        变量_6DAF0125 ＝ 变量_6EAF0125.对象型方法 (“item”, 变量_70AF0125 － 1)
        变量_6FAF0125 ＝ 变量_6DAF0125.读文本属性 (“type”, )
        .如果真 (寻找文本 (变量_7DAF0125, 变量_6FAF0125, , 假) ≠ -1)
            变量_71AF0125 ＝ 变量_71AF0125 ＋ 1
            .如果真 (变量_6AAF0125)
                变量_6DAF0125.写属性 (“value”, 变量_83AF0125 ＋ 到文本 (变量_71AF0125))
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    
    .判断开始 (寻找文本 (变量_7DAF0125, “button”, , 假) ≠ -1)
        变量_6EAF0125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “button”)
        .计次循环首 (变量_6EAF0125.读数值属性 (“length”, ), 变量_70AF0125)
            变量_6DAF0125 ＝ 变量_6EAF0125.对象型方法 (“item”, 变量_70AF0125 － 1)
            变量_6FAF0125 ＝ 变量_6DAF0125.读文本属性 (“type”, )
            .如果真 (寻找文本 (变量_7DAF0125, 变量_6FAF0125, , 假) ≠ -1)
                变量_71AF0125 ＝ 变量_71AF0125 ＋ 1
                .如果真 (变量_6AAF0125)
                    变量_6DAF0125.写属性 (“innerText”, 变量_83AF0125 ＋ 到文本 (变量_71AF0125))
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    返回 (变量_71AF0125)

.子程序 _内部_INPUT_取对象, 对象
    .参数 变量_48AF0125, 文本型
    .参数 变量_4BAF0125, 文本型
    .参数 变量_4CAF0125, 整数型, 可空
    .参数 变量_8FAF0125, 整数型, 参考 可空
    .局部变量 变量_53AF0125, 对象
    .局部变量 变量_4FAF0125, 对象
    .局部变量 变量_54AF0125, 文本型
    .局部变量 变量_50AF0125, 整数型
    .局部变量 变量_5CAF0125, 整数型

    变量_4FAF0125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “input”)
    变量_5CAF0125 ＝ 到数值 (变量_4BAF0125)
    .计次循环首 (变量_4FAF0125.读数值属性 (“length”, ), 变量_50AF0125)
        变量_53AF0125 ＝ 变量_4FAF0125.对象型方法 (“item”, 变量_50AF0125 － 1)
        变量_54AF0125 ＝ 变量_53AF0125.读文本属性 (“type”, )
        .如果真 (寻找文本 (变量_48AF0125, 变量_54AF0125, , 假) ≠ -1)
            变量_8FAF0125 ＝ 变量_8FAF0125 ＋ 1
            .判断开始 (变量_53AF0125.读文本属性 (“name”, ) ＝ 变量_4BAF0125)
                .判断开始 (变量_4CAF0125 ＞ 0)
                    变量_4CAF0125 ＝ 变量_4CAF0125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_53AF0125)
                .判断结束
                
            .判断 (变量_53AF0125.读文本属性 (“id”, ) ＝ 变量_4BAF0125)
                .判断开始 (变量_4CAF0125 ＞ 0)
                    变量_4CAF0125 ＝ 变量_4CAF0125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_53AF0125)
                .判断结束
                
            .判断 (变量_53AF0125.读文本属性 (“title”, ) ＝ 变量_4BAF0125)
                .判断开始 (变量_4CAF0125 ＞ 0)
                    变量_4CAF0125 ＝ 变量_4CAF0125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_53AF0125)
                .判断结束
                
            .判断 (变量_8FAF0125 ＝ 变量_5CAF0125)
                返回 (变量_53AF0125)
            .默认
                
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    .判断开始 (寻找文本 (变量_48AF0125, “button”, , 假) ≠ -1)
        变量_4FAF0125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “button”)
        .计次循环首 (变量_4FAF0125.读数值属性 (“length”, ), 变量_50AF0125)
            变量_53AF0125 ＝ 变量_4FAF0125.对象型方法 (“item”, 变量_50AF0125 － 1)
            变量_54AF0125 ＝ 变量_53AF0125.读文本属性 (“type”, )
            .如果真 (寻找文本 (变量_48AF0125, 变量_54AF0125, , 假) ≠ -1)
                变量_8FAF0125 ＝ 变量_8FAF0125 ＋ 1
                .判断开始 (变量_53AF0125.读文本属性 (“name”, ) ＝ 变量_4BAF0125)
                    .判断开始 (变量_4CAF0125 ＞ 0)
                        变量_4CAF0125 ＝ 变量_4CAF0125 － 1
                        到循环尾 ()
                    .默认
                        返回 (变量_53AF0125)
                    .判断结束
                    
                .判断 (变量_53AF0125.读文本属性 (“id”, ) ＝ 变量_4BAF0125)
                    .判断开始 (变量_4CAF0125 ＞ 0)
                        变量_4CAF0125 ＝ 变量_4CAF0125 － 1
                        到循环尾 ()
                    .默认
                        返回 (变量_53AF0125)
                    .判断结束
                    
                .判断 (变量_53AF0125.读文本属性 (“title”, ) ＝ 变量_4BAF0125)
                    .判断开始 (变量_4CAF0125 ＞ 0)
                        变量_4CAF0125 ＝ 变量_4CAF0125 － 1
                        到循环尾 ()
                    .默认
                        返回 (变量_53AF0125)
                    .判断结束
                    
                .判断 (变量_8FAF0125 ＝ 变量_5CAF0125)
                    返回 (变量_53AF0125)
                .默认
                    
                .判断结束
                
            .如果真结束
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    变量_8FAF0125 ＝ -1
    变量_53AF0125.清除 ()
    返回 (变量_53AF0125)

.子程序 _内部_IMG_取数量, 整数型
    .参数 变量_BFB00125, 文本型
    .参数 变量_C0B00125, 文本型
    .参数 变量_C1B00125, 逻辑型, 可空
    .参数 变量_F6B50125, 逻辑型, 可空
    .参数 变量_EEB00125, 文本型, 参考 可空 数组
    .参数 变量_EFB00125, 文本型, 参考 可空 数组
    .参数 变量_F0B00125, 文本型, 参考 可空 数组
    .参数 变量_EDB00125, 文本型, 参考 可空 数组
    .参数 变量_F1B00125, 文本型, 参考 可空 数组
    .参数 变量_F2B00125, 文本型, 参考 可空 数组
    .局部变量 变量_C2B00125, 对象
    .局部变量 变量_C3B00125, 对象
    .局部变量 变量_C4B00125, 文本型
    .局部变量 变量_C5B00125, 整数型
    .局部变量 变量_C6B00125, 整数型

    变量_C3B00125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “input”)
    .计次循环首 (变量_C3B00125.读数值属性 (“length”, ), 变量_C5B00125)
        变量_C2B00125 ＝ 变量_C3B00125.对象型方法 (“item”, 变量_C5B00125 － 1)
        变量_C4B00125 ＝ 变量_C2B00125.读文本属性 (“type”, )
        .如果真 (寻找文本 (变量_BFB00125, 变量_C4B00125, , 假) ≠ -1)
            变量_C6B00125 ＝ 变量_C6B00125 ＋ 1
            .如果真 (变量_C1B00125)
                变量_C2B00125.写属性 (“title”, 变量_C0B00125 ＋ 到文本 (变量_C6B00125))
            .如果真结束
            .如果真 (变量_F6B50125)
                加入成员 (变量_EEB00125, 变量_C2B00125.读文本属性 (“src”, ))
                加入成员 (变量_EFB00125, 变量_C2B00125.读文本属性 (“width”, ))
                加入成员 (变量_F0B00125, 变量_C2B00125.读文本属性 (“height”, ))
                加入成员 (变量_EDB00125, 变量_C2B00125.读文本属性 (“name”, ))
                加入成员 (变量_F1B00125, 变量_C2B00125.读文本属性 (“id”, ))
                加入成员 (变量_F2B00125, 变量_C2B00125.读文本属性 (“title”, ))
            .如果真结束
            
        .如果真结束
        
    .计次循环尾 ()
    .判断开始 (寻找文本 (变量_BFB00125, “image”, , 假) ≠ -1)
        变量_C3B00125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “img”)
        .计次循环首 (变量_C3B00125.读数值属性 (“length”, ), 变量_C5B00125)
            变量_C2B00125 ＝ 变量_C3B00125.对象型方法 (“item”, 变量_C5B00125 － 1)
            变量_C6B00125 ＝ 变量_C6B00125 ＋ 1
            .如果真 (变量_C1B00125)
                变量_C2B00125.写属性 (“title”, 变量_C0B00125 ＋ 到文本 (变量_C6B00125))
            .如果真结束
            .如果真 (变量_F6B50125)
                加入成员 (变量_EEB00125, 变量_C2B00125.读文本属性 (“src”, ))
                加入成员 (变量_EFB00125, 变量_C2B00125.读文本属性 (“width”, ))
                加入成员 (变量_F0B00125, 变量_C2B00125.读文本属性 (“height”, ))
                加入成员 (变量_EDB00125, 变量_C2B00125.读文本属性 (“name”, ))
                加入成员 (变量_F1B00125, 变量_C2B00125.读文本属性 (“id”, ))
                加入成员 (变量_F2B00125, 变量_C2B00125.读文本属性 (“title”, ))
            .如果真结束
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    返回 (变量_C6B00125)

.子程序 _内部_IMG_取对象, 对象
    .参数 变量_90B00125, 文本型
    .参数 变量_91B00125, 文本型
    .参数 变量_92B00125, 整数型, 可空
    .参数 变量_93B00125, 整数型, 参考 可空
    .局部变量 变量_94B00125, 对象
    .局部变量 变量_95B00125, 对象
    .局部变量 变量_96B00125, 文本型
    .局部变量 变量_97B00125, 整数型
    .局部变量 变量_98B00125, 整数型

    变量_95B00125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “input”)
    变量_98B00125 ＝ 到数值 (变量_91B00125)
    .计次循环首 (变量_95B00125.读数值属性 (“length”, ), 变量_97B00125)
        变量_94B00125 ＝ 变量_95B00125.对象型方法 (“item”, 变量_97B00125 － 1)
        变量_96B00125 ＝ 变量_94B00125.读文本属性 (“type”, )
        .如果真 (寻找文本 (变量_90B00125, 变量_96B00125, , 假) ≠ -1)
            变量_93B00125 ＝ 变量_93B00125 ＋ 1
            .判断开始 (寻找文本 (变量_94B00125.读文本属性 (“src”, ), 变量_91B00125, , 假) ≠ -1)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_94B00125.读文本属性 (“name”, ) ＝ 变量_91B00125)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_94B00125.读文本属性 (“id”, ) ＝ 变量_91B00125)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_94B00125.读文本属性 (“title”, ) ＝ 变量_91B00125)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_93B00125 ＝ 变量_98B00125)
                返回 (变量_94B00125)
            .默认
                
            .判断结束
            
        .如果真结束
        
    .计次循环尾 ()
    .判断开始 (寻找文本 (变量_90B00125, “image”, , 假) ≠ -1)
        变量_95B00125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “img”)
        .计次循环首 (变量_95B00125.读数值属性 (“length”, ), 变量_97B00125)
            变量_94B00125 ＝ 变量_95B00125.对象型方法 (“item”, 变量_97B00125 － 1)
            变量_93B00125 ＝ 变量_93B00125 ＋ 1
            .判断开始 (寻找文本 (变量_94B00125.读文本属性 (“src”, ), 变量_91B00125, , 假) ≠ -1)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_94B00125.读文本属性 (“name”, ) ＝ 变量_91B00125)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_94B00125.读文本属性 (“id”, ) ＝ 变量_91B00125)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_94B00125.读文本属性 (“title”, ) ＝ 变量_91B00125)
                .判断开始 (变量_92B00125 ＞ 0)
                    变量_92B00125 ＝ 变量_92B00125 － 1
                    到循环尾 ()
                .默认
                    返回 (变量_94B00125)
                .判断结束
                
            .判断 (变量_93B00125 ＝ 变量_98B00125)
                返回 (变量_94B00125)
            .默认
                
            .判断结束
            
        .计次循环尾 ()
    .默认
        
    .判断结束
    变量_93B00125 ＝ -1
    变量_94B00125.清除 ()
    返回 (变量_94B00125)

.子程序 _内部_DIV_取数量, 整数型
    .参数 变量_2AB10125, 文本型
    .参数 变量_2BB10125, 文本型
    .参数 变量_2CB10125, 逻辑型, 可空
    .局部变量 变量_2DB10125, 对象
    .局部变量 变量_2EB10125, 对象
    .局部变量 变量_2FB10125, 文本型
    .局部变量 变量_30B10125, 整数型
    .局部变量 变量_31B10125, 整数型

    变量_2EB10125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “div”)
    .计次循环首 (变量_2EB10125.读数值属性 (“length”, ), 变量_30B10125)
        变量_2DB10125 ＝ 变量_2EB10125.对象型方法 (“item”, 变量_30B10125 － 1)
        变量_31B10125 ＝ 变量_31B10125 ＋ 1
        .如果真 (变量_2CB10125)
            变量_2DB10125.方法 (“insertAdjacentHTML”, “afterBegin”, “<font color=red>Div” ＋ 到文本 (变量_31B10125) ＋ “</font>”)
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_31B10125)

.子程序 _内部_DIV_取对象, 对象
    .参数 变量_32B10125, 文本型
    .参数 变量_33B10125, 文本型
    .参数 变量_34B10125, 整数型, 可空
    .参数 变量_35B10125, 整数型, 参考 可空
    .局部变量 变量_36B10125, 对象
    .局部变量 变量_37B10125, 对象
    .局部变量 变量_38B10125, 文本型
    .局部变量 变量_39B10125, 整数型
    .局部变量 变量_3AB10125, 整数型

    变量_37B10125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “div”)
    变量_3AB10125 ＝ 到数值 (变量_33B10125)
    .计次循环首 (变量_37B10125.读数值属性 (“length”, ), 变量_39B10125)
        变量_36B10125 ＝ 变量_37B10125.对象型方法 (“item”, 变量_39B10125 － 1)
        变量_35B10125 ＝ 变量_35B10125 ＋ 1
        .判断开始 (变量_36B10125.读文本属性 (“className”, ) ＝ 变量_33B10125)
            .判断开始 (变量_34B10125 ＞ 0)
                变量_34B10125 ＝ 变量_34B10125 － 1
                到循环尾 ()
            .默认
                返回 (变量_36B10125)
            .判断结束
            
        .判断 (变量_36B10125.读文本属性 (“innerText”, ) ＝ 变量_33B10125)
            .判断开始 (变量_34B10125 ＞ 0)
                变量_34B10125 ＝ 变量_34B10125 － 1
                到循环尾 ()
            .默认
                返回 (变量_36B10125)
            .判断结束
            
        .判断 (变量_36B10125.读文本属性 (“name”, ) ＝ 变量_33B10125)
            .判断开始 (变量_34B10125 ＞ 0)
                变量_34B10125 ＝ 变量_34B10125 － 1
                到循环尾 ()
            .默认
                返回 (变量_36B10125)
            .判断结束
            
        .判断 (变量_36B10125.读文本属性 (“id”, ) ＝ 变量_33B10125)
            .判断开始 (变量_34B10125 ＞ 0)
                变量_34B10125 ＝ 变量_34B10125 － 1
                到循环尾 ()
            .默认
                返回 (变量_36B10125)
            .判断结束
            
        .判断 (变量_36B10125.读文本属性 (“title”, ) ＝ 变量_33B10125)
            .判断开始 (变量_34B10125 ＞ 0)
                变量_34B10125 ＝ 变量_34B10125 － 1
                到循环尾 ()
            .默认
                返回 (变量_36B10125)
            .判断结束
            
        .判断 (变量_35B10125 ＝ 变量_3AB10125)
            返回 (变量_36B10125)
        .默认
            
        .判断结束
        
        
    .计次循环尾 ()
    变量_35B10125 ＝ -1
    变量_36B10125.清除 ()
    返回 (变量_36B10125)

.子程序 _内部_SPAN_取数量, 整数型
    .参数 变量_81B30125, 文本型
    .参数 变量_82B30125, 文本型
    .参数 变量_83B30125, 逻辑型, 可空
    .局部变量 变量_84B30125, 对象
    .局部变量 变量_85B30125, 对象
    .局部变量 变量_86B30125, 文本型
    .局部变量 变量_87B30125, 整数型
    .局部变量 变量_88B30125, 整数型

    变量_85B30125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “span”)
    .计次循环首 (变量_85B30125.读数值属性 (“length”, ), 变量_87B30125)
        变量_84B30125 ＝ 变量_85B30125.对象型方法 (“item”, 变量_87B30125 － 1)
        变量_88B30125 ＝ 变量_88B30125 ＋ 1
        .如果真 (变量_83B30125)
            变量_84B30125.方法 (“insertAdjacentHTML”, “afterBegin”, “<font color=red>Span” ＋ 到文本 (变量_88B30125) ＋ “</font>”)
            
            
            
            
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_88B30125)

.子程序 _内部_SPAN_取对象, 对象
    .参数 变量_89B30125, 文本型
    .参数 变量_8AB30125, 文本型
    .参数 变量_8BB30125, 整数型, 可空
    .参数 变量_8CB30125, 整数型, 参考 可空
    .局部变量 变量_8DB30125, 对象
    .局部变量 变量_8EB30125, 对象
    .局部变量 变量_8FB30125, 文本型
    .局部变量 变量_90B30125, 整数型
    .局部变量 变量_91B30125, 整数型

    变量_8EB30125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “span”)
    变量_91B30125 ＝ 到数值 (变量_8AB30125)
    .计次循环首 (变量_8EB30125.读数值属性 (“length”, ), 变量_90B30125)
        变量_8DB30125 ＝ 变量_8EB30125.对象型方法 (“item”, 变量_90B30125 － 1)
        变量_8CB30125 ＝ 变量_8CB30125 ＋ 1
        .判断开始 (变量_8DB30125.读文本属性 (“className”, ) ＝ 变量_8AB30125)
            .判断开始 (变量_8BB30125 ＞ 0)
                变量_8BB30125 ＝ 变量_8BB30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8DB30125)
            .判断结束
            
        .判断 (变量_8DB30125.读文本属性 (“innerText”, ) ＝ 变量_8AB30125)
            .判断开始 (变量_8BB30125 ＞ 0)
                变量_8BB30125 ＝ 变量_8BB30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8DB30125)
            .判断结束
            
            
        .判断 (变量_8DB30125.读文本属性 (“name”, ) ＝ 变量_8AB30125)
            .判断开始 (变量_8BB30125 ＞ 0)
                变量_8BB30125 ＝ 变量_8BB30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8DB30125)
            .判断结束
            
        .判断 (变量_8DB30125.读文本属性 (“id”, ) ＝ 变量_8AB30125)
            .判断开始 (变量_8BB30125 ＞ 0)
                变量_8BB30125 ＝ 变量_8BB30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8DB30125)
            .判断结束
            
        .判断 (变量_8DB30125.读文本属性 (“title”, ) ＝ 变量_8AB30125)
            .判断开始 (变量_8BB30125 ＞ 0)
                变量_8BB30125 ＝ 变量_8BB30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8DB30125)
            .判断结束
            
        .判断 (变量_8CB30125 ＝ 变量_91B30125)
            返回 (变量_8DB30125)
        .默认
            
        .判断结束
        
    .计次循环尾 ()
    变量_8CB30125 ＝ -1
    变量_8DB30125.清除 ()
    返回 (变量_8DB30125)

.子程序 _内部_ULLI_取数量, 整数型
    .参数 变量_CCB30125, 文本型
    .参数 变量_CDB30125, 文本型
    .参数 变量_CEB30125, 逻辑型, 可空
    .局部变量 变量_CFB30125, 对象
    .局部变量 变量_D0B30125, 对象
    .局部变量 变量_D1B30125, 文本型
    .局部变量 变量_D2B30125, 整数型
    .局部变量 变量_D3B30125, 整数型

    变量_D0B30125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “li”)
    .计次循环首 (变量_D0B30125.读数值属性 (“length”, ), 变量_D2B30125)
        变量_CFB30125 ＝ 变量_D0B30125.对象型方法 (“item”, 变量_D2B30125 － 1)
        变量_D3B30125 ＝ 变量_D3B30125 ＋ 1
        .如果真 (变量_CEB30125)
            变量_CFB30125.方法 (“insertAdjacentHTML”, “afterBegin”, “<font color=red>ULli” ＋ 到文本 (变量_D3B30125) ＋ “</font>”)
            
            
            
            
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_D3B30125)

.子程序 _内部_ULLI_取对象, 对象
    .参数 变量_D4B30125, 文本型
    .参数 变量_D5B30125, 文本型
    .参数 变量_D6B30125, 整数型, 可空
    .参数 变量_D7B30125, 整数型, 参考 可空
    .局部变量 变量_D8B30125, 对象
    .局部变量 变量_D9B30125, 对象
    .局部变量 变量_DAB30125, 文本型
    .局部变量 变量_DBB30125, 整数型
    .局部变量 变量_DCB30125, 整数型

    变量_D9B30125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “li”)
    变量_DCB30125 ＝ 到数值 (变量_D5B30125)
    .计次循环首 (变量_D9B30125.读数值属性 (“length”, ), 变量_DBB30125)
        变量_D8B30125 ＝ 变量_D9B30125.对象型方法 (“item”, 变量_DBB30125 － 1)
        变量_D7B30125 ＝ 变量_D7B30125 ＋ 1
        .判断开始 (变量_D8B30125.读文本属性 (“innerText”, ) ＝ 变量_D5B30125)
            .判断开始 (变量_D6B30125 ＞ 0)
                变量_D6B30125 ＝ 变量_D6B30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_D8B30125)
            .判断结束
            
        .判断 (变量_D8B30125.读文本属性 (“className”, ) ＝ 变量_D5B30125)
            .判断开始 (变量_D6B30125 ＞ 0)
                变量_D6B30125 ＝ 变量_D6B30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_D8B30125)
            .判断结束
            
        .判断 (变量_D8B30125.读文本属性 (“id”, ) ＝ 变量_D5B30125)
            .判断开始 (变量_D6B30125 ＞ 0)
                变量_D6B30125 ＝ 变量_D6B30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_D8B30125)
            .判断结束
            
        .判断 (变量_D8B30125.读文本属性 (“title”, ) ＝ 变量_D5B30125)
            .判断开始 (变量_D6B30125 ＞ 0)
                变量_D6B30125 ＝ 变量_D6B30125 － 1
                到循环尾 ()
            .默认
                返回 (变量_D8B30125)
            .判断结束
            
        .判断 (变量_D7B30125 ＝ 变量_DCB30125)
            返回 (变量_D8B30125)
        .默认
            
        .判断结束
        
        
    .计次循环尾 ()
    变量_D7B30125 ＝ -1
    变量_D8B30125.清除 ()
    返回 (变量_D8B30125)

.子程序 _内部_TEXTAREA_取数量, 整数型
    .参数 变量_B8B40125, 文本型
    .参数 变量_B9B40125, 文本型
    .参数 变量_BAB40125, 逻辑型, 可空
    .局部变量 变量_BBB40125, 对象
    .局部变量 变量_BCB40125, 对象
    .局部变量 变量_BDB40125, 文本型
    .局部变量 变量_BEB40125, 整数型
    .局部变量 变量_BFB40125, 整数型

    变量_BCB40125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “textarea”)
    .计次循环首 (变量_BCB40125.读数值属性 (“length”, ), 变量_BEB40125)
        变量_BBB40125 ＝ 变量_BCB40125.对象型方法 (“item”, 变量_BEB40125 － 1)
        变量_BFB40125 ＝ 变量_BFB40125 ＋ 1
        .如果真 (变量_BAB40125)
            变量_BBB40125.方法 (“insertAdjacentHTML”, “afterBegin”, “<font color=red>ULli” ＋ 到文本 (变量_BFB40125) ＋ “</font>”)
            
            
            
            
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_BFB40125)

.子程序 _内部_TEXTAREA_取对象, 对象
    .参数 变量_C0B40125, 文本型
    .参数 变量_C1B40125, 文本型
    .参数 变量_C2B40125, 整数型, 可空
    .参数 变量_C3B40125, 整数型, 参考 可空
    .局部变量 变量_C4B40125, 对象
    .局部变量 变量_C5B40125, 对象
    .局部变量 变量_C6B40125, 文本型
    .局部变量 变量_C7B40125, 整数型
    .局部变量 变量_C8B40125, 整数型

    变量_C5B40125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “textarea”)
    变量_C8B40125 ＝ 到数值 (变量_C1B40125)
    .计次循环首 (变量_C5B40125.读数值属性 (“length”, ), 变量_C7B40125)
        变量_C4B40125 ＝ 变量_C5B40125.对象型方法 (“item”, 变量_C7B40125 － 1)
        变量_C3B40125 ＝ 变量_C3B40125 ＋ 1
        .判断开始 (变量_C4B40125.读文本属性 (“innerText”, ) ＝ 变量_C1B40125)
            .判断开始 (变量_C2B40125 ＞ 0)
                变量_C2B40125 ＝ 变量_C2B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_C4B40125)
            .判断结束
            
        .判断 (变量_C4B40125.读文本属性 (“className”, ) ＝ 变量_C1B40125)
            .判断开始 (变量_C2B40125 ＞ 0)
                变量_C2B40125 ＝ 变量_C2B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_C4B40125)
            .判断结束
            
        .判断 (变量_C4B40125.读文本属性 (“id”, ) ＝ 变量_C1B40125)
            .判断开始 (变量_C2B40125 ＞ 0)
                变量_C2B40125 ＝ 变量_C2B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_C4B40125)
            .判断结束
            
        .判断 (变量_C4B40125.读文本属性 (“title”, ) ＝ 变量_C1B40125)
            .判断开始 (变量_C2B40125 ＞ 0)
                变量_C2B40125 ＝ 变量_C2B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_C4B40125)
            .判断结束
            
        .判断 (变量_C4B40125.读文本属性 (“Name”, ) ＝ 变量_C1B40125)
            .判断开始 (变量_C2B40125 ＞ 0)
                变量_C2B40125 ＝ 变量_C2B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_C4B40125)
            .判断结束
            
        .判断 (变量_C3B40125 ＝ 变量_C8B40125)
            返回 (变量_C4B40125)
        .默认
            
        .判断结束
        
    .计次循环尾 ()
    变量_C3B40125 ＝ -1
    变量_C4B40125.清除 ()
    返回 (变量_C4B40125)

.子程序 _内部_A_取数量, 整数型
    .参数 变量_0AB40125, 文本型
    .参数 变量_0BB40125, 文本型
    .参数 变量_0CB40125, 逻辑型, 可空
    .参数 变量_87B50125, 逻辑型, 可空
    .参数 变量_83B50125, 文本型, 参考 可空 数组
    .参数 变量_84B50125, 文本型, 参考 可空 数组
    .参数 变量_85B50125, 文本型, 参考 可空 数组
    .参数 变量_86B50125, 文本型, 参考 可空 数组
    .局部变量 变量_0DB40125, 对象
    .局部变量 变量_0EB40125, 对象
    .局部变量 变量_0FB40125, 文本型
    .局部变量 变量_10B40125, 整数型
    .局部变量 变量_11B40125, 整数型

    变量_0EB40125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “a”)
    .如果 (变量_87B50125)
        .计次循环首 (变量_0EB40125.读数值属性 (“length”, ), 变量_10B40125)
            变量_0DB40125 ＝ 变量_0EB40125.对象型方法 (“item”, 变量_10B40125 － 1)
            加入成员 (变量_83B50125, 变量_0DB40125.读文本属性 (“href”, ))
            加入成员 (变量_84B50125, 变量_0DB40125.读文本属性 (“innerText”, ))
            加入成员 (变量_85B50125, 变量_0DB40125.读文本属性 (“name”, ))
            加入成员 (变量_86B50125, 变量_0DB40125.读文本属性 (“id”, ))
        .计次循环尾 ()
        
    .否则
        .计次循环首 (变量_0EB40125.读数值属性 (“length”, ), 变量_10B40125)
            变量_0DB40125 ＝ 变量_0EB40125.对象型方法 (“item”, 变量_10B40125 － 1)
            变量_11B40125 ＝ 变量_11B40125 ＋ 1
            .如果真 (变量_0CB40125)
                变量_0FB40125 ＝ 变量_0DB40125.读文本属性 (“innerHTML”, )
                变量_0DB40125.写属性 (“innerHTML”, 变量_0FB40125 ＋ “<font color=red>” ＋ 变量_0BB40125 ＋ 到文本 (变量_11B40125) ＋ “</font>”)
            .如果真结束
            
        .计次循环尾 ()
    .如果结束
    返回 (变量_0EB40125.读数值属性 (“length”, ))

.子程序 _内部_A_取对象, 对象
    .参数 变量_12B40125, 文本型
    .参数 变量_13B40125, 文本型
    .参数 变量_14B40125, 整数型, 可空
    .参数 变量_15B40125, 整数型, 参考 可空
    .局部变量 变量_16B40125, 对象
    .局部变量 变量_17B40125, 对象
    .局部变量 变量_18B40125, 文本型
    .局部变量 变量_19B40125, 整数型
    .局部变量 变量_1AB40125, 整数型

    变量_17B40125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “a”)
    变量_1AB40125 ＝ 到数值 (变量_13B40125)
    .计次循环首 (变量_17B40125.读数值属性 (“length”, ), 变量_19B40125)
        变量_16B40125 ＝ 变量_17B40125.对象型方法 (“item”, 变量_19B40125 － 1)
        变量_15B40125 ＝ 变量_15B40125 ＋ 1
        .判断开始 (变量_16B40125.读文本属性 (“href”, ) ＝ 变量_13B40125)
            .判断开始 (变量_14B40125 ＞ 0)
                变量_14B40125 ＝ 变量_14B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_16B40125)
            .判断结束
            
        .判断 (变量_16B40125.读文本属性 (“id”, ) ＝ 变量_13B40125)
            .判断开始 (变量_14B40125 ＞ 0)
                变量_14B40125 ＝ 变量_14B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_16B40125)
            .判断结束
            
        .判断 (变量_16B40125.读文本属性 (“title”, ) ＝ 变量_13B40125)
            .判断开始 (变量_14B40125 ＞ 0)
                变量_14B40125 ＝ 变量_14B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_16B40125)
            .判断结束
            
        .判断 (变量_16B40125.读文本属性 (“innerText”, ) ＝ 变量_13B40125)
            .判断开始 (变量_14B40125 ＞ 0)
                变量_14B40125 ＝ 变量_14B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_16B40125)
            .判断结束
            
        .判断 (变量_16B40125.读文本属性 (“className”, ) ＝ 变量_13B40125)
            .判断开始 (变量_14B40125 ＞ 0)
                变量_14B40125 ＝ 变量_14B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_16B40125)
            .判断结束
            
            
        .判断 (变量_15B40125 ＝ 变量_1AB40125)
            返回 (变量_16B40125)
        .默认
            
        .判断结束
        
        
    .计次循环尾 ()
    变量_15B40125 ＝ -1
    变量_16B40125.清除 ()
    返回 (变量_16B40125)

.子程序 _内部_CITE_取数量, 整数型
    .参数 变量_7FB40125, 文本型
    .参数 变量_80B40125, 文本型
    .参数 变量_81B40125, 逻辑型, 可空
    .局部变量 变量_82B40125, 对象
    .局部变量 变量_83B40125, 对象
    .局部变量 变量_84B40125, 文本型
    .局部变量 变量_85B40125, 整数型
    .局部变量 变量_86B40125, 整数型

    变量_83B40125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “cite”)
    .计次循环首 (变量_83B40125.读数值属性 (“length”, ), 变量_85B40125)
        变量_82B40125 ＝ 变量_83B40125.对象型方法 (“item”, 变量_85B40125 － 1)
        变量_86B40125 ＝ 变量_86B40125 ＋ 1
        .如果真 (变量_81B40125)
            变量_82B40125.方法 (“insertAdjacentHTML”, “afterBegin”, “<font color=red>ULli” ＋ 到文本 (变量_86B40125) ＋ “</font>”)
            
            
            
            
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_86B40125)

.子程序 _内部_CITE_取对象, 对象
    .参数 变量_87B40125, 文本型
    .参数 变量_88B40125, 文本型
    .参数 变量_89B40125, 整数型, 可空
    .参数 变量_8AB40125, 整数型, 参考 可空
    .局部变量 变量_8BB40125, 对象
    .局部变量 变量_8CB40125, 对象
    .局部变量 变量_8DB40125, 文本型
    .局部变量 变量_8EB40125, 整数型
    .局部变量 变量_8FB40125, 整数型

    变量_8CB40125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “cite”)
    变量_8FB40125 ＝ 到数值 (变量_88B40125)
    .计次循环首 (变量_8CB40125.读数值属性 (“length”, ), 变量_8EB40125)
        变量_8BB40125 ＝ 变量_8CB40125.对象型方法 (“item”, 变量_8EB40125 － 1)
        变量_8AB40125 ＝ 变量_8AB40125 ＋ 1
        .判断开始 (变量_8BB40125.读文本属性 (“innerText”, ) ＝ 变量_88B40125)
            .判断开始 (变量_89B40125 ＞ 0)
                变量_89B40125 ＝ 变量_89B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8BB40125)
            .判断结束
            
        .判断 (变量_8BB40125.读文本属性 (“className”, ) ＝ 变量_88B40125)
            .判断开始 (变量_89B40125 ＞ 0)
                变量_89B40125 ＝ 变量_89B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8BB40125)
            .判断结束
            
        .判断 (变量_8BB40125.读文本属性 (“id”, ) ＝ 变量_88B40125)
            .判断开始 (变量_89B40125 ＞ 0)
                变量_89B40125 ＝ 变量_89B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8BB40125)
            .判断结束
            
        .判断 (变量_8BB40125.读文本属性 (“title”, ) ＝ 变量_88B40125)
            .判断开始 (变量_89B40125 ＞ 0)
                变量_89B40125 ＝ 变量_89B40125 － 1
                到循环尾 ()
            .默认
                返回 (变量_8BB40125)
            .判断结束
            
        .判断 (变量_8AB40125 ＝ 变量_8FB40125)
            返回 (变量_8BB40125)
        .默认
            
        .判断结束
        
    .计次循环尾 ()
    变量_8AB40125 ＝ -1
    变量_8BB40125.清除 ()
    返回 (变量_8BB40125)

.子程序 控件_置标记, , 公开, 把网页上的控件填上标记。
    文本框_取数量 (真)
    多行文本框_取数量 (真)
    单选框_取数量 (真)
    复选框_取数量 (真)
    按钮_取数量 (真)
    组合框_取数量 (真)
    高级按钮_取数量 (真)
    图形按钮_取数量 (真)

.子程序 框架_取数量, 整数型, 公开, 返回框架的数量。
    .局部变量 变量_07440125, 对象
    .局部变量 变量_08440125, 对象
    .局部变量 变量_09440125, 对象
    .局部变量 变量_0A440125, 对象
    .局部变量 变量_0B440125, 对象
    .局部变量 变量_0C440125, 对象
    .局部变量 变量_0D440125, 对象
    .局部变量 变量_0E440125, 对象
    .局部变量 变量_0F440125, 整数型
    .局部变量 变量_10440125, 整数型
    .局部变量 变量_11440125, 整数型
    .局部变量 变量_13440125, 整数型
    .局部变量 变量_14440125, 整数型
    .局部变量 变量_15440125, 整数型
    .局部变量 变量_16440125, 整数型
    .局部变量 变量_17440125, 整数型

    变量_07440125 ＝ 集_网页文档.读对象型属性 (“frames”, )
    .如果真 (集_网页文档.是否为空 () ＝ 假)
        变量_17440125 ＝ 变量_17440125 ＋ 1
    .如果真结束
    变量_13440125 ＝ 变量_07440125.读数值属性 (“length”, )
    .计次循环首 (变量_13440125, 变量_0F440125)
        变量_0B440125 ＝ 变量_07440125.对象型方法 (“item”, 变量_0F440125 － 1).读对象型属性 (“document”, )
        变量_08440125 ＝ 变量_0B440125.读对象型属性 (“frames”, )
        变量_14440125 ＝ 变量_08440125.读数值属性 (“length”, )
        .计次循环首 (变量_14440125, 变量_10440125)
            变量_0C440125 ＝ 变量_08440125.对象型方法 (“item”, 变量_10440125 － 1).读对象型属性 (“document”, )
            变量_09440125 ＝ 变量_0C440125.读对象型属性 (“frames”, )
            变量_15440125 ＝ 变量_09440125.读数值属性 (“length”, )
            .计次循环首 (变量_15440125, 变量_11440125)
                变量_0D440125 ＝ 变量_09440125.对象型方法 (“item”, 变量_11440125 － 1).读对象型属性 (“document”, )
                变量_0A440125 ＝ 变量_0D440125.读对象型属性 (“frames”, )
                变量_17440125 ＝ 变量_17440125 ＋ 变量_0A440125.读数值属性 (“length”, )
                变量_17440125 ＝ 变量_17440125 ＋ 1
            .计次循环尾 ()
            变量_17440125 ＝ 变量_17440125 ＋ 1
        .计次循环尾 ()
        变量_17440125 ＝ 变量_17440125 ＋ 1
    .计次循环尾 ()
    返回 (变量_17440125)

.子程序 网页_跳转, , 公开, 在本窗口跳转到指定的网址
    .参数 网页地址, 文本型

    .如果真 (到小写 (取文本左边 (网页地址, 4)) ≠ “http”)
        网页地址 ＝ “http://” ＋ 网页地址
    .如果真结束
    集_网页文档.读对象型属性 (“parentWindow”, ).方法 (“navigate”, 网页地址)

.子程序 网页_跳转1, , 公开, 在本窗口跳转到指定的网址,如果 网页_跳转 失败，可试试本命令。
    .参数 网页地址, 文本型, , 要跳转的网站地址。

    .如果真 (到小写 (取文本左边 (网页地址, 4)) ≠ “http”)
        网页地址 ＝ “http://” ＋ 网页地址
    .如果真结束
    集_网页文档.写属性 (“location”, 网页地址)

.子程序 网页_缩放, 整数型, 公开, 放大或缩小网页视图。成功返回放大后的百分比。
    .参数 百分比, 整数型, , 如：110，就是放大百分之10。反则：如90，就是缩小到百分之90，100为恢复原大小。
    .局部变量 变量_74400125, 对象
    .局部变量 变量_75400125, 双精度小数型

    变量_74400125 ＝ 集_网页文档.读对象型属性 (“Body”, ).读对象型属性 (“Style”, )
    变量_75400125 ＝ 变量_74400125.读属性 (“Zoom”, ).取数值 ()
    变量_75400125 ＝ 百分比 ÷ 100
    变量_74400125.写属性 (“Zoom”, 变量_75400125)
    返回 (变量_75400125 × 100)

.子程序 网页_取文本, 文本型, 公开, 取网页的文本。
    返回 (编码_Unicode到Ansi (集_网页文档.读对象型属性 (“documentElement”, ).读属性 (“innerText”, ).取字节集 ()))
    

.子程序 网页_取源码, 文本型, 公开, 取网页的源码。
    返回 (编码_Unicode到Ansi (集_网页文档.读对象型属性 (“documentElement”, ).读属性 (“outerHTML”, ).取字节集 ()))
    

.子程序 网页_取标题, 文本型, 公开, 取网页的标题。
    返回 (集_网页文档.读文本属性 (“title”, ))

.子程序 网页_执行脚本, , 公开, 在当前网页上执行指定的脚本命令。
    .参数 脚本代码, 文本型, , 脚本代码。
    .参数 脚本类型, 整数型, 可空, 默认为JavaScript。 0 = JavaScript。1 = VBScript。

    .如果真 (脚本类型 ＝ 0)
        集_网页文档.读对象型属性 (“parentWindow”, ).方法 (“execScript”, 脚本代码, “JavaScript”)
    .如果真结束
    .如果真 (脚本类型 ＝ 1)
        集_网页文档.读对象型属性 (“parentWindow”, ).方法 (“execScript”, 脚本代码, “VBScript”)
    .如果真结束
    

.子程序 网页_解除网页限制, , 公开, 可解除网页右键限制和防止复制限制!
    .局部变量 变量_B1630125, 文本型

    变量_B1630125 ＝ “javascript:document.onsdragstart=document.onselectstart=document.oncontextmenu=function(){return true}”
    网页_执行脚本 (变量_B1630125, 0)
    变量_B1630125 ＝ “javascript:document.onselectstart = document.oncontextmenu = document.onmousedown = document.onkeydown = function(){return true;};”
    网页_执行脚本 (变量_B1630125, 0)

.子程序 网页_执行事件, 逻辑型, 公开, 执行某个网页元素相关的脚本方法。成功返回真，失败返回假。
    .参数 元素对象, 对象, , 元素的对象，如：文本框的，直接用  文本框_取对象() 即可
    .参数 事件类型, 文本型, , 以 #网页事件_  开头的常量

    返回 (元素对象.逻辑方法 (“FireEvent”, 事件类型, 元素对象.读属性 (事件类型, )))

.子程序 网页_刷新, , 公开, 刷新当前页面
    网页_执行脚本 (“window.location.reload()”, 0)

.子程序 网页_取属性, 文本型, 公开, 取网页的所种属性，如：网页标题，地址，编码，大小，等等。
    .参数 属性类型, 文本型, , 请提供以 #网页属性_ 开头的常量值

    返回 (集_网页文档.读文本属性 (属性类型, ))

.子程序 网页_置属性, 逻辑型, 公开, 设置网页文档的属性。
    .参数 属性类型, 文本型, , 请提供以“#网页属性_”开头的常量值
    .参数 待写入值, 文本型

    返回 (集_网页文档.写属性 (属性类型, 待写入值))

.子程序 网页_修改, 逻辑型, 公开, 成功返回真，失败返回假。
    .参数 新源码, 文本型

    返回 (集_网页文档.读对象型属性 (“body”, ).写属性 (“innerHTML”, 新源码))

.子程序 网页_取坐标元素, 对象, 公开, 通过坐标取网页上的元素，成功返回元素的对象。
    .参数 横坐标, 整数型, 可空, （请提供屏幕的横坐标）留空则取鼠标所在位置的元素。
    .参数 纵坐标, 整数型, 可空, （请提供屏幕的纵坐标）留空则取鼠标所在位置的元素。
    .参数 网页地址, 文本型, 可空, 用于装载网页地址的变量
    .参数 控件类型, 文本型, 可空, 用于装载控件类型的变量
    .参数 元素标题, 文本型, 可空, 用于装载元素标题的变量
    .参数 元素名称, 文本型, 可空, 用于装载元素名称的变量
    .参数 元素ID, 文本型, 可空, 用于装载元素ID的变量
    .参数 链接地址, 文本型, 可空, 用于装载链接地址的变量
    .参数 引用代码, 文本型, 可空, 用于装载引用代码的变量
    .局部变量 变量_33440125, 整数型
    .局部变量 变量_34440125, 对象
    .局部变量 变量_35440125, 精易_坐标
    .局部变量 变量_36440125, 精易_位置和大小
    .局部变量 变量_37440125, 对象

    .如果 (横坐标 ＝ 0 且 纵坐标 ＝ 0)
        变量_33440125 ＝ 窗口_取鼠标处窗口句柄 ()
        .如果真 (窗口_取类名 (变量_33440125) ＝ “Internet Explorer_Server”)
            变量_35440125 ＝ 鼠标_取位置 ()
            变量_36440125 ＝ 窗口_取位置和大小 (变量_33440125)
            网页_取网页文档对象 (变量_33440125, 变量_34440125)
            变量_37440125 ＝ 变量_34440125.对象型方法 (“elementFromPoint”, 变量_35440125.横 － 变量_36440125.左边, 变量_35440125.纵 － 变量_36440125.顶边)
            网页地址 ＝ 变量_34440125.读文本属性 (“url”, )
            控件类型 ＝ 变量_37440125.读文本属性 (“tagName”, )
            元素标题 ＝ 变量_37440125.读文本属性 (“innerText”, )
            元素名称 ＝ 变量_37440125.读文本属性 (“name”, )
            元素ID ＝ 变量_37440125.读文本属性 (“ID”, )
            链接地址 ＝ 变量_37440125.读文本属性 (“href”, )
            引用代码 ＝ 变量_37440125.读文本属性 (“outerHTML”, )
            返回 (变量_37440125)
        .如果真结束
        
    .否则
        变量_33440125 ＝ 窗口_取鼠标处窗口句柄 ()
        .如果真 (窗口_取类名 (变量_33440125) ＝ “Internet Explorer_Server”)
            变量_36440125 ＝ 窗口_取位置和大小 (变量_33440125)
            网页_取网页文档对象 (变量_33440125, 变量_34440125)
            变量_37440125 ＝ 变量_34440125.对象型方法 (“elementFromPoint”, 横坐标 － 变量_36440125.左边, 纵坐标 － 变量_36440125.顶边)
            网页地址 ＝ 变量_34440125.读文本属性 (“url”, )
            控件类型 ＝ 变量_37440125.读文本属性 (“tagName”, )
            元素标题 ＝ 变量_37440125.读文本属性 (“innerText”, )
            元素名称 ＝ 变量_37440125.读文本属性 (“name”, )
            元素ID ＝ 变量_37440125.读文本属性 (“ID”, )
            链接地址 ＝ 变量_37440125.读文本属性 (“href”, )
            引用代码 ＝ 变量_37440125.读文本属性 (“outerHTML”, )
            返回 (变量_37440125)
        .如果真结束
        
    .如果结束
    返回 (变量_37440125)

.子程序 网页_取元素坐标, 精易_坐标, 公开, 取指定元素对象的坐标。
    .参数 元素对象, 对象, , 可以通过“普通填表.按钮_取对象（）”方式,取得元素对象
    .局部变量 变量_3C440125, 精易_坐标

    变量_3C440125.横 ＝ 取元素横坐标 (元素对象)
    变量_3C440125.纵 ＝ 取元素纵坐标 (元素对象)
    返回 (变量_3C440125)

.子程序 取元素横坐标, 整数型
    .参数 变量_78C60125, 对象
    .局部变量 变量_79C60125, 整数型
    .局部变量 变量_7AC60125, 对象

    变量_79C60125 ＝ 变量_78C60125.读数值属性 (“offsetLeft”, )
    变量_7AC60125 ＝ 变量_78C60125.读对象型属性 (“offsetParent”, )
    .如果真 (变量_7AC60125.是否为空 () ＝ 假)
        变量_79C60125 ＝ 变量_79C60125 ＋ 取元素横坐标 (变量_7AC60125)
    .如果真结束
    返回 (变量_79C60125)
    
    
    
    
    
    

.子程序 取元素纵坐标, 整数型
    .参数 变量_7BC60125, 对象
    .局部变量 变量_7CC60125, 整数型
    .局部变量 变量_7DC60125, 对象

    变量_7CC60125 ＝ 变量_7BC60125.读数值属性 (“offsetTop”, )
    变量_7DC60125 ＝ 变量_7BC60125.读对象型属性 (“offsetParent”, )
    .如果真 (变量_7DC60125.是否为空 () ＝ 假)
        变量_7CC60125 ＝ 变量_7CC60125 ＋ 取元素纵坐标 (变量_7DC60125)
    .如果真结束
    返回 (变量_7CC60125)
    
    
    
    
    
    

.子程序 网页_取顶级域名, 文本型, 公开, 取网页的顶级域名。
    返回 (集_网页文档.读文本属性 (“domain”, ))

.子程序 网页_取页面地址, 文本型, 公开, 取网页的页面地址。
    返回 (集_网页文档.读文本属性 (“location”, ))

.子程序 网页_取编码类型, 文本型, 公开, 取网页的编码类型。如：GBK。
    返回 (集_网页文档.读文本属性 (“charset”, ))

.子程序 网页_取选中内容, 文本型, 公开, 取当前网页上选中的内容。
    .参数 类型, 整数型, 可空, 默认为0。0.文本。1.HTML代码。 
    .局部变量 变量_D7440125, 对象

    变量_D7440125 ＝ 集_网页文档.读对象型属性 (“selection”, ).对象型方法 (“createRange”, )
    .如果真 (变量_D7440125.是否为空 ())
        返回 (“”)
    .如果真结束
    .如果真 (类型 ＞ 0)
        返回 (变量_D7440125.读文本属性 (“htmlText”, ))
    .如果真结束
    返回 (变量_D7440125.读文本属性 (“Text”, ))

.子程序 网页_屏蔽信息框, , 公开, 直接无视网页上弹出来的信息框和对话框
    .局部变量 变量_D8440125, 对象

    变量_D8440125 ＝ 集_网页文档.读对象型属性 (“parentWindow”, )
    变量_D8440125.方法 (“execScript”, “function alert(){return;}”, “JScript”)
    变量_D8440125.方法 (“execScript”, “function confirm(){return;}”, “JScript”)
    变量_D8440125.方法 (“execScript”, “function prompt(){return;}”, “JScript”)
    变量_D8440125.方法 (“execScript”, “function showModalDialog(){return;}”, “JScript”)

.子程序 网页_取页面大小, 文本型, 公开, 取当前网页的大小。
    返回 (集_网页文档.读文本属性 (“fileSize”, ))

.子程序 网页_隐藏滚动条, , 公开
    .局部变量 变量_F5A80125, 对象

    变量_F5A80125 ＝ 集_网页文档.读对象型属性 (“parentWindow”, )
    变量_F5A80125.通用方法 (“execScript”, “var jie = document.createStyleSheet();jie.addRule('html','overflow:hidden;');”)

.子程序 网页_滚动条控制, , 公开, 控制浏览器滚动条上下滑动。
    .参数 滚动距离, 整数型, , 正数为下滚，如：50。负数为上滚，如果-50。
    .参数 滚动类型, 整数型, 可空, 可空：默认为0。0=纵，1=横
    .局部变量 变量_A2580125, 整数型

    .判断开始 (滚动类型 ＝ 0)
        变量_A2580125 ＝ 集_网页文档.读对象型属性 (“documentElement”, ).读数值属性 (“scrollTop”, ) ＋ 滚动距离
        集_网页文档.读对象型属性 (“documentElement”, ).写属性 (“scrollTop”, 变量_A2580125)
    .判断 (滚动类型 ＝ 1)
        变量_A2580125 ＝ 集_网页文档.读对象型属性 (“documentElement”, ).读数值属性 (“scrollLeft”, ) ＋ 滚动距离
        集_网页文档.读对象型属性 (“documentElement”, ).写属性 (“scrollLeft”, 变量_A2580125)
    .默认
        
    .判断结束
    

.子程序 网页_滚动条固定, , 公开, 控制浏览器滚动条上下滑动。
    .参数 横向位置, 整数型, , 横向位置
    .参数 纵向位置, 整数型, , 纵向位置

    集_网页文档.读对象型属性 (“documentElement”, ).写属性 (“scrollTop”, 纵向位置)
    集_网页文档.读对象型属性 (“documentElement”, ).写属性 (“scrollLeft”, 横向位置)

.子程序 网页_滚动条取位置, , 公开, 取滚动条横纵向位置。
    .参数 横向位置, 整数型, 参考 可空, 用于存放浏览器滚动横向的位置。
    .参数 纵向位置, 整数型, 参考 可空, 用于存放浏览器滚动纵向的位置。

    纵向位置 ＝ 到数值 (集_网页文档.读对象型属性 (“documentElement”, ).读文本属性 (“scrollTop”, ))
    横向位置 ＝ 到数值 (集_网页文档.读对象型属性 (“documentElement”, ).读文本属性 (“scrollLeft”, ))

.子程序 网页_滚动条取高宽, , 公开, 取出浏览器滚动条的高宽！
    .参数 滚动条高度, 整数型, 参考 可空, 用于存放浏览器滚动条高度的变量。
    .参数 滚动条宽度, 整数型, 参考 可空, 用于存放浏览器滚动条宽度的变量。

    滚动条高度 ＝ 到数值 (集_网页文档.读对象型属性 (“documentElement”, ).读文本属性 (“scrollHeight”, ))
    滚动条宽度 ＝ 到数值 (集_网页文档.读对象型属性 (“documentElement”, ).读文本属性 (“scrollWidth”, ))

.子程序 网页_替换选中内容, , 公开, 替换网页上选中的文本。
    .参数 替换为, 文本型, , 要替换为的文本。

    集_网页文档.读对象型属性 (“selection”, ).对象型方法 (“createRange”, ).方法 (“pasteHTML”, 替换为)

.子程序 网页_创建新网页, , 公开, 直接在Webbroswer或IES内写入一个完整的网页，创建前必须保证网页已打开。 
    .参数 新网页代码, 文本型, , 必须是完整的网页，即以<html>开头，以</html>结束。

    集_网页文档.方法 (“open”, )
    集_网页文档.方法 (“write”, 新网页代码)
    集_网页文档.方法 (“Close”, )

.子程序 网页_高亮关键字, , 公开
    .参数 关键字, 文本型, , 要高亮的网页关键字;
    .参数 文字颜色, 文本型, 可空, 可空:默认为红色;16进制的网页颜色;
    .参数 背景颜色, 文本型, 可空, 可空:默认为泥黄;16进制的网页颜色;
    .参数 是否加粗, 逻辑型, 可空, 可空:默认为假,不加粗,真=加粗;
    .局部变量 变量_4B610125, 对象
    .局部变量 变量_4C610125, 对象
    .局部变量 变量_4D610125, 文本型
    .局部变量 变量_4E610125, 文本型

    变量_4B610125 ＝ 集_网页文档.读对象型属性 (“body”, )
    .如果真 (文字颜色 ＝ “”)
        文字颜色 ＝ “ff0000”
    .如果真结束
    .如果真 (背景颜色 ＝ “”)
        背景颜色 ＝ “D6F20D”
    .如果真结束
    .判断开始 (是否加粗)
        变量_4D610125 ＝ “<B style='COLOR: #” ＋ 文字颜色 ＋ “; BACKGROUND-COLOR: #” ＋ 背景颜色 ＋ “'>”
        变量_4E610125 ＝ “</B>”
    .默认
        变量_4D610125 ＝ “<font style='COLOR: #” ＋ 文字颜色 ＋ “; BACKGROUND-COLOR: #” ＋ 背景颜色 ＋ “'>”
        变量_4E610125 ＝ “</font>”
    .判断结束
    .如果真 (变量_4B610125.是否为空 () ＝ 假)
        变量_4C610125 ＝ 变量_4B610125.对象型方法 (“createTextRange”, )
        .判断循环首 (变量_4C610125.逻辑方法 (“FindText”, 关键字))
            变量_4C610125.方法 (“pasteHTML”, 变量_4D610125 ＋ 变量_4C610125.读文本属性 (“Text”, ) ＋ 变量_4E610125)
            变量_4C610125.方法 (“MoveStart”, “character”, 1)
        .判断循环尾 ()
    .如果真结束
    

.子程序 文本框_取对象, 对象, 公开, 根据网页文本框的Name或ID或索引取回对应的对象。
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_INPUT_取对象 (“text|password|file|email”, 名称_ID_索引, 跳过次数, ))

.子程序 文本框_取数量, 整数型, 公开, 取网页上的文本框数量。成功返回文本框的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个文本框是写入标记文本。

    返回 (_内部_INPUT_取数量 (“text|password|file|email”, “文本框”, 是否标记))

.子程序 文本框_取内容, 文本型, 公开, 用元素ID、名称、索引。取指定的网页文本框中的内容;成功返回文本框的内容，失败返回空文本。
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (文本框_取对象 (名称_ID_索引, 跳过次数).读文本属性 (“value”, ))

.子程序 文本框_取索引, 整数型, 公开, 用文本框名称、ID、内容取出网页上指定的文本框索引，失败返回0。
    .参数 名称_ID, 文本型, , 网页文本框的文本框名称或ID
    .局部变量 变量_93AF0125, 整数型

    _内部_INPUT_取对象 (“text|password|file”, 名称_ID, , 变量_93AF0125)
    返回 (变量_93AF0125)

.子程序 文本框_取属性, 逻辑型, 公开, 取指定文本框的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 文本框内容, 文本型, 参考 可空, 用于装载文本框内容的变量。 
    .参数 文本框名称, 文本型, 参考 可空, 用于装载文本框名称的变量。 
    .参数 文本框ID, 文本型, 参考 可空, 用于装载文本框ID的变量。 
    .参数 文本框类型, 文本型, 参考 可空, 用于装载文本框类型的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ 文本框_取对象 (到文本 (控件索引))
    .如果真 (是否为空 (文本框内容) ＝ 假)
        文本框内容 ＝ 元素对象.读文本属性 (“value”, )
    .如果真结束
    .如果真 (是否为空 (文本框名称) ＝ 假)
        文本框名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    .如果真 (是否为空 (文本框ID) ＝ 假)
        文本框ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    .如果真 (是否为空 (文本框类型) ＝ 假)
        文本框类型 ＝ 元素对象.读文本属性 (“type”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 文本框_写内容, 逻辑型, 公开, 往指定的网页文本框写入指定的内容。成功返回真，失败返回假。
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
    .参数 欲写内的内容, 文本型, , 欲写内的内容
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (文本框_取对象 (名称_ID_索引, 跳过次数).写属性 (“value”, 欲写内的内容))

.子程序 文本框_置焦点, 逻辑型, 公开, 往指定的网页文本框置输入焦点
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_D2B40125, 对象

    变量_D2B40125 ＝ 文本框_取对象 (名称_ID_索引, 跳过次数)
    变量_D2B40125.方法 (“focus”, )
    返回 (变量_D2B40125.是否为空 () ＝ 假)

.子程序 文件框_写内容, , 公开, 往指定的【文件框】写入内容
    .参数 索引_名称_ID, 文本型, , 文本框的【索引_名称_ID】，索引从1开始
    .参数 欲写内的内容, 文本型, , 欲写内的内容
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样，可以用此参数。说明：跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_EE930125, 对象
    .局部变量 变量_EF930125, 类_APIHOOK

    变量_EF930125.安装 (“comdlg32.dll”, “GetOpenFileNameW”, &MyGetOpenFileNameA)
    全局变量_FC930105 ＝ 欲写内的内容
    变量_EE930125 ＝ 文本框_取对象 (索引_名称_ID, 跳过次数)
    变量_EE930125.方法 (“click”, )
    变量_EF930125.卸载 (“comdlg32.dll”, “GetOpenFileNameW”)

.子程序 多行文本框_取对象, 对象
    .参数 变量_CEB40125, 文本型
    .参数 变量_CFB40125, 整数型, 可空

    返回 (_内部_TEXTAREA_取对象 (“textarea”, 变量_CEB40125, 变量_CFB40125))

.子程序 多行文本框_置焦点, 逻辑型, 公开, 往指定的网页多行文本框置输入焦点
    .参数 名称_ID_索引, 文本型, , 网页多行文本框的多行文本框名称或ID或索引。从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_E8690125, 对象

    变量_E8690125 ＝ 多行文本框_取对象 (名称_ID_索引, 跳过次数)
    变量_E8690125.方法 (“focus”, )
    返回 (变量_E8690125.是否为空 () ＝ 假)

.子程序 多行文本框_置状态, 逻辑型, 公开, 设置多行文本框的可视状态
    .参数 名称_ID_索引, 文本型, , 网页多行文本框的名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (多行文本框_取对象 (名称_ID_索引, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 多行文本框_取数量, 整数型, 公开, 取网页上的多行文本框数量。成功返回多行文本框的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个多行文本框是写入标记文本。

    返回 (_内部_TEXTAREA_取数量 (“textarea”, “多行文本框”, 是否标记))

.子程序 多行文本框_取内容, 文本型, 公开, 用元素ID、名称、索引。取指定的网页多行文本框中的内容;成功返回多行文本框的内容，失败返回空文本。
    .参数 名称_ID_索引, 文本型, , 网页多行文本框的多行文本框名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (多行文本框_取对象 (名称_ID_索引, 跳过次数).读文本属性 (“value”, ))

.子程序 多行文本框_取索引, 整数型, 公开, 用多行文本框名称、ID、内容取出网页上指定的多行文本框索引，失败返回0。
    .参数 名称_ID_内容, 文本型, , 网页多行文本框的多行文本框名称或ID
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_DBB40125, 整数型

    _内部_TEXTAREA_取对象 (“textarea”, 名称_ID_内容, 跳过次数, 变量_DBB40125)
    返回 (变量_DBB40125)

.子程序 多行文本框_取属性, 逻辑型, 公开, 取指定多行文本框的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 多行文本框内容, 文本型, 参考 可空, 用于装载多行文本框 内容 的变量。 
    .参数 多行文本框名称, 文本型, 参考 可空, 用于装载多行文本框 名称 的变量。 
    .参数 多行文本框ID, 文本型, 参考 可空, 用于装载多行文本框 ID 的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ 多行文本框_取对象 (到文本 (控件索引), )
    .如果真 (是否为空 (多行文本框内容) ＝ 假)
        多行文本框内容 ＝ 元素对象.读文本属性 (“value”, )
    .如果真结束
    
    .如果真 (是否为空 (多行文本框名称) ＝ 假)
        多行文本框名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (多行文本框ID) ＝ 假)
        多行文本框ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 多行文本框_写内容, 逻辑型, 公开, 往指定的网页多行文本框写入指定的内容。成功返回真，失败返回假。
    .参数 名称_ID_索引, 文本型, , 网页多行文本框的多行文本框名称或ID或索引。从1开始。
    .参数 欲写内的内容, 文本型, , 欲写内的内容
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (多行文本框_取对象 (名称_ID_索引, 跳过次数).写属性 (“value”, 欲写内的内容))

.子程序 单选框_取对象, 对象, 公开, 获取到相应的元素对象
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的单选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_INPUT_取对象 (“radio”, 标题_名称_ID_索引, 跳过次数))

.子程序 单选框_取状态, 逻辑型, 公开, 判断指定的单选框是否选中，选中返回真，没选中返回假。
    .参数 标题_名称_ID_索引, 文本型
    .参数 跳过次数, 整数型, 可空, 网单选框_的索引。从1开始。

    返回 (单选框_取对象 (标题_名称_ID_索引, 跳过次数).读文本属性 (“checked”, ) ＝ “-1”)

.子程序 单选框_取数量, 整数型, 公开, 成功返回单选框的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个单选框是写入标记文本。

    返回 (_内部_INPUT_取数量_复单 (“radio”, “单选框”, 是否标记))

.子程序 单选框_取索引, 整数型, 公开, 用单选框名称或ID取出网页上指定的单选框索引，失败返回0 。
    .参数 标题_名称_ID, 文本型, , 网页单选框的单选框名称或ID
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_41B00125, 整数型

    _内部_INPUT_取对象 (“radio”, 标题_名称_ID, 跳过次数, 变量_41B00125)
    返回 (变量_41B00125)

.子程序 单选框_取属性, 逻辑型, 公开, 取指定单选框的各种属性。改变网页上指定的复选框状态，将它取消打勾。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 元素标题, 文本型, 参考 可空, 用于装载单选框内容的变量。 
    .参数 元素名称, 文本型, 参考 可空, 用于装载单选框名称的变量。 
    .参数 元素ID, 文本型, 参考 可空, 用于装载单选框ID的变量。 
    .参数 元素类型, 文本型, 参考 可空, 用于装载单选框类型的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ _内部_INPUT_取对象 (“radio”, 到文本 (控件索引))
    
    .如果真 (是否为空 (元素标题) ＝ 假)
        元素标题 ＝ 元素对象.读文本属性 (“title”, )
    .如果真结束
    
    .如果真 (是否为空 (元素名称) ＝ 假)
        元素名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (元素ID) ＝ 假)
        元素ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    .如果真 (是否为空 (元素类型) ＝ 假)
        元素类型 ＝ 元素对象.读文本属性 (“type”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 单选框_选择, 逻辑型, 公开, 改变网页上指定的单选框选择状态，将它选中。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页单选框的单选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。
    .局部变量 变量_45B00125, 对象

    变量_45B00125 ＝ 单选框_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_45B00125.写属性 (“checked”, “checked”)
    .如果真 (执行点击事件)
        网页_执行事件 (变量_45B00125, #网页事件_onmousedown)
    .如果真结束
    返回 (变量_45B00125.是否为空 () ＝ 假)

.子程序 单选框_取消选择, 逻辑型, 公开, 改变网页上指定的单选框选择状态，将它取消选中。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页单选框的单选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。
    .局部变量 变量_4FB00125, 对象

    变量_4FB00125 ＝ 单选框_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_4FB00125.写属性 (“checked”, “”)
    .如果真 (执行点击事件)
        网页_执行事件 (变量_4FB00125, #网页事件_onmousedown)
    .如果真结束
    返回 (变量_4FB00125.是否为空 () ＝ 假)

.子程序 单选框_置焦点, 逻辑型, 公开, 向指定的单选框置输入焦点
    .参数 标题_名称_ID_索引, 文本型, , 网页单选框的标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_24B50125, 对象

    变量_24B50125 ＝ 单选框_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_24B50125.方法 (“focus”, )
    返回 (变量_24B50125.是否为空 () ＝ 假)

.子程序 单选框_置状态, 逻辑型, 公开, 设置单选框的可视状态
    .参数 标题_名称_ID_索引, 文本型, , 网页单选框的标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (单选框_取对象 (标题_名称_ID_索引, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 复选框_取对象, 对象, 公开, 获取到相应的元素对象
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_INPUT_取对象 (“checkbox”, 标题_名称_ID_索引, 跳过次数))

.子程序 复选框_取状态, 逻辑型, 公开, 判断指定的复选框是否选中，选中返回真，没选中返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (复选框_取对象 (标题_名称_ID_索引, 跳过次数).读文本属性 (“checked”, ) ＝ “-1”)

.子程序 复选框_取数量, 整数型, 公开, 成功返回复选框的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个复选框是写入标记文本。

    返回 (_内部_INPUT_取数量_复单 (“checkbox”, “复选框”, 是否标记))

.子程序 复选框_取索引, 整数型, 公开, 用复选框名称或ID取出网页上指定的复选框索引，失败返回0 。
    .参数 标题_名称_ID, 文本型, , 网页复选框的复选框名称或ID
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_2AB00125, 整数型

    _内部_INPUT_取对象 (“checkbox”, 标题_名称_ID, 跳过次数, 变量_2AB00125)
    返回 (变量_2AB00125)

.子程序 复选框_取属性, 逻辑型, 公开, 取指定复选框的各种属性。改变网页上指定的复选框状态，将它取消打勾。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 元素标题, 文本型, 可空, 用于装载复选框内容的变量。 
    .参数 元素名称, 文本型, 可空, 用于装载复选框名称的变量。 
    .参数 元素ID, 文本型, 可空, 用于装载复选框ID的变量。 
    .参数 元素类型, 文本型, 可空, 用于装载复选框类型的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ _内部_INPUT_取对象 (“checkbox”, 到文本 (控件索引))
    
    .如果真 (是否为空 (元素标题) ＝ 假)
        元素标题 ＝ 元素对象.读文本属性 (“title”, )
    .如果真结束
    
    .如果真 (是否为空 (元素名称) ＝ 假)
        元素名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (元素ID) ＝ 假)
        元素ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    .如果真 (是否为空 (元素类型) ＝ 假)
        元素类型 ＝ 元素对象.读文本属性 (“type”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 复选框_选择, 逻辑型, 公开, 改变网页上指定的复选框选择状态，将它选中。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。
    .局部变量 变量_05B00125, 对象

    变量_05B00125 ＝ 复选框_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_05B00125.写属性 (“checked”, “checked”)
    .如果真 (执行点击事件)
        网页_执行事件 (变量_05B00125, #网页事件_onmousedown)
    .如果真结束
    返回 (变量_05B00125.是否为空 () ＝ 假)

.子程序 复选框_取消选择, 逻辑型, 公开, 改变网页上指定的复选框选择状态，将它取消选中。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 执行点击事件, 逻辑型, 可空, 执行鼠标单击事件，有些网页会判断你是否用过鼠标单击过。
    .局部变量 变量_FFAF0125, 对象

    变量_FFAF0125 ＝ 复选框_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_FFAF0125.写属性 (“checked”, “”)
    .如果真 (执行点击事件)
        网页_执行事件 (变量_FFAF0125, #网页事件_onmousedown)
    .如果真结束
    返回 (变量_FFAF0125.是否为空 () ＝ 假)

.子程序 复选框_置焦点, 逻辑型, 公开, 向指定的复选框置输入焦点
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_19B50125, 对象

    变量_19B50125 ＝ 复选框_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_19B50125.方法 (“focus”, )
    返回 (变量_19B50125.是否为空 () ＝ 假)

.子程序 复选框_置状态, 逻辑型, 公开, 设置复选框的可视状态
    .参数 标题_名称_ID_索引, 文本型, , 网页复选框的标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (复选框_取对象 (标题_名称_ID_索引, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 按钮_取对象, 对象, 公开, 获取到相应的元素对象
    .参数 标题_名称_ID_索引, 文本型, , 网页按钮的按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_INPUT_取对象 (“button|submit|reset”, 标题_名称_ID_索引, 跳过次数))

.子程序 按钮_取属性, 逻辑型, 公开, 取指定按钮的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 按钮标题, 文本型, 参考 可空, 用于装载按钮内容的变量。 
    .参数 按钮名称, 文本型, 参考 可空, 用于装载按钮名称的变量。 
    .参数 按钮ID, 文本型, 参考 可空, 用于装载按钮ID的变量。 
    .参数 按钮类型, 文本型, 参考 可空, 用于装载按钮类型的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ 按钮_取对象 (到文本 (控件索引), )
    .如果真 (是否为空 (按钮标题) ＝ 假)
        .判断开始 (元素对象.读文本属性 (“tagName”, ) ＝ “BUTTON”)
            按钮标题 ＝ 元素对象.读文本属性 (“innerText”, )
        .默认
            按钮标题 ＝ 元素对象.读文本属性 (“title”, )
        .判断结束
        
    .如果真结束
    .如果真 (是否为空 (按钮名称) ＝ 假)
        按钮名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (按钮ID) ＝ 假)
        按钮ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    .如果真 (是否为空 (按钮类型) ＝ 假)
        按钮类型 ＝ 元素对象.读文本属性 (“type”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 按钮_取数量, 整数型, 公开, 成功返回按钮的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个按钮是写入标记文本。

    返回 (_内部_INPUT_取数量 (“button|submit|reset”, “按钮”, 是否标记))

.子程序 按钮_取索引, 整数型, 公开, 用按钮名称或ID取出网页上指定的按钮索引，失败返回0 。
    .参数 标题_名称_ID, 文本型, , 网页按钮的按钮名称或ID
    .局部变量 变量_F1AF0125, 整数型

    _内部_INPUT_取对象 (“button|submit|reset”, 标题_名称_ID, , 变量_F1AF0125)
    返回 (变量_F1AF0125)

.子程序 按钮_置焦点, 逻辑型, 公开, 向指定的按钮置输入焦点
    .参数 标题_名称_ID_索引, 文本型, , 网页按钮的标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_29B50125, 对象

    变量_29B50125 ＝ 按钮_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_29B50125.方法 (“focus”, )
    返回 (变量_29B50125.是否为空 () ＝ 假)

.子程序 按钮_置状态, 逻辑型, 公开, 设置按钮的可视状态
    .参数 标题_名称_ID_索引, 文本型, , 网页按钮的标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (按钮_取对象 (标题_名称_ID_索引, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 按钮_点击, 逻辑型, 公开, 点击网页上的按钮。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页按钮的按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_CFAF0125, 对象

    变量_CFAF0125 ＝ 按钮_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_CFAF0125.方法 (“click”, )
    返回 (变量_CFAF0125.是否为空 () ＝ 假)

.子程序 高级按钮_取对象, 对象, 公开, 获取高级按钮的对象
    .参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的高级按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_CITE_取对象 (“cite”, 标题_名称_ID_索引, 跳过次数))

.子程序 高级按钮_取属性, 逻辑型, 公开, 取指定高级按钮的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 高级按钮标题, 文本型, 参考 可空, 用于装载高级按钮内容的变量。 
    .参数 高级按钮名称, 文本型, 参考 可空, 用于装载高级按钮名称的变量。 
    .参数 高级按钮ID, 文本型, 参考 可空, 用于装载高级按钮ID的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ 高级按钮_取对象 (到文本 (控件索引), )
    .如果真 (是否为空 (高级按钮标题) ＝ 假)
        高级按钮标题 ＝ 元素对象.读文本属性 (“innerText”, )
    .如果真结束
    
    .如果真 (是否为空 (高级按钮名称) ＝ 假)
        高级按钮名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (高级按钮ID) ＝ 假)
        高级按钮ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 高级按钮_取数量, 整数型, 公开, 成功返回高级按钮的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个高级按钮是写入标记文本。

    返回 (_内部_CITE_取数量 (“cite”, “高级按钮”, 是否标记))

.子程序 高级按钮_取索引, 整数型, 公开, 用高级按钮名称或ID取出网页上指定的高级按钮索引，失败返回0 。
    .参数 标题_名称_ID, 文本型, , 网页高级按钮的高级按钮名称或ID
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_A5B40125, 整数型

    _内部_CITE_取对象 (“cite”, 标题_名称_ID, 跳过次数, 变量_A5B40125)
    返回 (变量_A5B40125)

.子程序 高级按钮_点击, 逻辑型, 公开, 点击网页上的高级按钮。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的高级按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_9AB40125, 对象

    变量_9AB40125 ＝ 高级按钮_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_9AB40125.方法 (“click”, )
    返回 (变量_9AB40125.是否为空 () ＝ 假)

.子程序 高级按钮_取源码, 文本型, 公开, 获取高级按钮的源码
    .参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的高级按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (高级按钮_取对象 (标题_名称_ID_索引, 跳过次数).读文本属性 (“outerHTML”, ))

.子程序 高级按钮_置焦点, 逻辑型, 公开, 向指定的高级按钮置输入焦点
    .参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_2EB50125, 对象

    变量_2EB50125 ＝ 高级按钮_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_2EB50125.方法 (“focus”, )
    返回 (变量_2EB50125.是否为空 () ＝ 假)

.子程序 高级按钮_置状态, 逻辑型, 公开, 设置高级按钮的可视状态
    .参数 标题_名称_ID_索引, 文本型, , 网页高级按钮的标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (高级按钮_取对象 (标题_名称_ID_索引, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 图形按钮_取对象, 对象, 公开, 获取到相应的元素对象
    .参数 标题_名称_ID_索引, 文本型, , 网页图片按钮的图片按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_INPUT_取对象 (“image”, 标题_名称_ID_索引, 跳过次数))

.子程序 图形按钮_取属性, 逻辑型, 公开, 取指定图形按钮的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 图片按钮标题, 文本型, 参考 可空, 用于装载图片按钮内容的变量。 
    .参数 图片按钮名称, 文本型, 参考 可空, 用于装载图片按钮名称的变量。 
    .参数 图片按钮ID, 文本型, 参考 可空, 用于装载图片按钮ID的变量。 
    .参数 图片按钮类型, 文本型, 参考 可空, 用于装载图片按钮类型的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ 图形按钮_取对象 (到文本 (控件索引), )
    .如果真 (是否为空 (图片按钮标题) ＝ 假)
        图片按钮标题 ＝ 元素对象.读文本属性 (“title”, )
    .如果真结束
    
    .如果真 (是否为空 (图片按钮名称) ＝ 假)
        图片按钮名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (图片按钮ID) ＝ 假)
        图片按钮ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    .如果真 (是否为空 (图片按钮类型) ＝ 假)
        图片按钮类型 ＝ 元素对象.读文本属性 (“type”, )
    .如果真结束
    
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 图形按钮_取数量, 整数型, 公开, 成功返回图形按钮的数量。失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个图片按钮是写入标记文本。

    返回 (_内部_INPUT_取数量 (“image”, “图形按钮”, 是否标记))

.子程序 图形按钮_取索引, 整数型, 公开, 用图形按钮名称或ID取出网页上指定的图形按钮索引，失败返回0 。
    .参数 标题_名称_ID, 文本型, , 网页图片按钮的图片按钮名称或ID
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_64B40125, 整数型

    _内部_INPUT_取对象 (“image”, 标题_名称_ID, 跳过次数, 变量_64B40125)
    返回 (变量_64B40125)

.子程序 图形按钮_点击, 逻辑型, 公开, 点击网页上的图形按钮。成功返回真，失败返回假。
    .参数 标题_名称_ID_索引, 文本型, , 网页图片按钮的图片按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_5AB40125, 对象

    变量_5AB40125 ＝ 图形按钮_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_5AB40125.方法 (“click”, )
    返回 (变量_5AB40125.是否为空 () ＝ 假)

.子程序 图形按钮_取源码, 文本型, 公开, 获取指定图形按钮的源码
    .参数 标题_名称_ID_索引, 文本型, , 网页图片按钮的图片按钮标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (图形按钮_取对象 (标题_名称_ID_索引, 跳过次数).读文本属性 (“outerHTML”, ))

.子程序 图形按钮_置焦点, 逻辑型, 公开, 向指定的图形按钮置输入焦点
    .参数 标题_名称_ID_索引, 文本型, , 网页图形按钮的复选框标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_33B50125, 对象

    变量_33B50125 ＝ 图形按钮_取对象 (标题_名称_ID_索引, 跳过次数)
    变量_33B50125.方法 (“focus”, )
    返回 (变量_33B50125.是否为空 () ＝ 假)

.子程序 链接_取对象, 对象, 公开, 获取链接的元素对象
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_A_取对象 (“a”, 地址_ID_索引_标题, 跳过次数))

.子程序 链接_取数量, 整数型, 公开, 取网页上的超级链接数目,成功返回链接数目，否则返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个按钮是写入标记文本。

    返回 (_内部_A_取数量 (“a”, “链”, 是否标记))

.子程序 链接_取属性, 逻辑型, 公开, 取指定链接的各种属性。成功返回真。失败返回假。 
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 链接标题, 文本型, 可空, 用于装载 链接内容 的变量。 
    .参数 链接地址, 文本型, 可空, 用于装载 链接类型 的变量。 
    .参数 元素名称, 文本型, 可空, 用于装载 元素名称 的变量。
    .参数 元素ID, 文本型, 可空, 用于装载 元素ID 的变量。
    .参数 元素对象, 对象, 参考 可空, 用于装载 元素对象 的变量。 

    元素对象 ＝ 链接_取对象 (到文本 (控件索引), )
    .如果真 (是否为空 (链接标题) ＝ 假)
        链接标题 ＝ 元素对象.读文本属性 (“innerText”, )
    .如果真结束
    
    .如果真 (是否为空 (链接地址) ＝ 假)
        链接地址 ＝ 元素对象.读文本属性 (“href”, )
    .如果真结束
    
    .如果真 (是否为空 (元素ID) ＝ 假)
        元素ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    .如果真 (是否为空 (元素名称) ＝ 假)
        元素名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 链接_取索引, 整数型, 公开, 用链接名称或ID取出网页上指定的链接索引，失败返回0 。
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_3DB40125, 整数型

    _内部_A_取对象 (“a”, 地址_ID_索引_标题, 跳过次数, 变量_3DB40125)
    返回 (变量_3DB40125)

.子程序 链接_点击, 逻辑型, 公开, 点击网页上的链接。成功返回真。失败返回假。 
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 点击后在本窗口打开, 逻辑型, 可空, 可空。点击链接后,在本窗口内打开点击的链接地址
    .局部变量 变量_28B40125, 对象

    变量_28B40125 ＝ 链接_取对象 (地址_ID_索引_标题, 跳过次数)
    变量_28B40125.写属性 (“target”, 选择 (点击后在本窗口打开, “_self”, “_blank”))
    变量_28B40125.方法 (“click”, )
    返回 (变量_28B40125.是否为空 () ＝ 假)

.子程序 链接_取源码, 文本型, 公开, 获取指定链接的源码。
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (链接_取对象 (地址_ID_索引_标题, 跳过次数).读文本属性 (“outerHTML”, ))

.子程序 链接_取标题, 文本型, 公开, 获取指定链接的标题。
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (链接_取对象 (地址_ID_索引_标题, 跳过次数).读文本属性 (“innerText”, ))

.子程序 链接_置焦点, 逻辑型, 公开, 向指定的链接置输入焦点
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_38B50125, 对象

    变量_38B50125 ＝ 链接_取对象 (地址_ID_索引_标题, 跳过次数)
    变量_38B50125.方法 (“focus”, )
    返回 (变量_38B50125.是否为空 () ＝ 假)

.子程序 链接_置状态, 逻辑型, 公开, 设置链接的可视状态
    .参数 地址_ID_索引_标题, 文本型, , 网页链接的标题、地址、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (链接_取对象 (地址_ID_索引_标题, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 链接_枚举, 整数型, 公开, 枚举出所有超级链接，成功返回链接数量，失败返回0。
    .参数 标题数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 标题数组
    .参数 地址数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 地址数组
    .参数 元素名称数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 元素名称数组
    .参数 元素ID数组, 文本型, 参考 可空 数组, 可空。请提供一个 文本型 的数组变量，用于存放 元素ID数组

    返回 (_内部_A_取数量 (“a”, “链”, , 真, 地址数组, 标题数组, 元素名称数组, 元素ID数组))

.子程序 网页_验证码同步, 字节集, 公开, 直接同步网页上验证码回来，并且可以对图片进行格式转换
    .参数 验证码地址, 文本型, , 如果验证码地址包含?号,只需要填写问号之前的地址(包括?号)
    .参数 返回格式, 整数型, 可空, 可空。默认不转换   1=bmp　2=jpg　3=gif　4=tiff　5=png
    .局部变量 变量_EE670125, 对象
    .局部变量 变量_86C20125, 字节集

    变量_EE670125 ＝ 集_网页文档.读对象型属性 (“body”, ).对象型方法 (“createControlRange”, )
    变量_EE670125.方法 (“add”, 图片_取对象 (验证码地址))
    .如果真 (取反 (变量_EE670125.逻辑方法 (“execCommand”, “copy”, 假, 0)))
        返回 ({ })
    .如果真结束
    变量_86C20125 ＝ 方法_取回验证码 ()
    .如果真 (返回格式 ≠ 0)
        图片_转换 (变量_86C20125, 返回格式, , 变量_86C20125)
    .如果真结束
    返回 (变量_86C20125)

.子程序 方法_取回验证码, 字节集
    .局部变量 变量_33680125, 整数型
    .局部变量 变量_34680125, 自定义_9B680141
    .局部变量 变量_35680125, 整数型
    .局部变量 变量_36680125, 整数型
    .局部变量 变量_37680125, 字节集
    .局部变量 变量_38680125, 自定义_7D4D0141
    .局部变量 变量_39680125, 整数型

    OpenClipboard (0)
    变量_33680125 ＝ GetClipboardData (2)
    .如果真 (变量_33680125 ＝ 0)
        CloseClipboard ()
        返回 ({ })
    .如果真结束
    .如果真 (GetObjectA (变量_33680125, 28, 变量_38680125) ＝ 0)
        CloseClipboard ()
        返回 ({ })
    .如果真结束
    变量_34680125.成员_9C680135 ＝ 40
    变量_34680125.成员_9D680135 ＝ 变量_38680125.成员_914D0135
    变量_34680125.成员_9E680135 ＝ 变量_38680125.成员_924D0135
    变量_34680125.成员_9F680135 ＝ 1
    变量_34680125.成员_A0680135 ＝ 24
    变量_34680125.成员_A1680135 ＝ 0
    变量_34680125.成员_A2680135 ＝ (变量_38680125.成员_914D0135 × 24 ＋ 31) ÷ 8 × 变量_38680125.成员_924D0135
    变量_34680125.成员_A3680135 ＝ 0
    变量_34680125.成员_A4680135 ＝ 0
    变量_34680125.成员_A5680135 ＝ 0
    变量_34680125.成员_A6680135 ＝ 0
    变量_39680125 ＝ CreateCompatibleDC (0)
    变量_37680125 ＝ 取空白字节集 (变量_34680125.成员_A2680135)
    变量_35680125 ＝ lstrcpyn_字节集 (变量_37680125, 变量_37680125, 0)
    DLL_GetDIBits (变量_39680125, 变量_33680125, 0, 变量_34680125.成员_9E680135, 变量_35680125, 变量_34680125, 0)
    DeleteDC (变量_39680125)
    EmptyClipboard ()
    CloseClipboard ()
    变量_37680125 ＝ 到字节集 (“BM”) ＋ 整数_到字节集 (变量_34680125.成员_A2680135 ＋ 54) ＋ 取空白字节集 (4) ＋ { 54, 0, 0, 0, 40, 0, 0, 0 } ＋ 整数_到字节集 (变量_38680125.成员_914D0135) ＋ 整数_到字节集 (变量_38680125.成员_924D0135) ＋ { 1, 0, 24, 0 } ＋ 取空白字节集 (4) ＋ 整数_到字节集 (变量_34680125.成员_A2680135) ＋ 取空白字节集 (16) ＋ 指针到字节集 (变量_35680125, 变量_34680125.成员_A2680135)
    返回 (变量_37680125)

.子程序 图片_点击, 逻辑型, 公开, 点击网页上带有链接的图片。
    .参数 索引_地址_ID_title, 文本型, 可空, 可以为“索引_地址_ID_title”。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_B9B00125, 对象

    变量_B9B00125 ＝ _内部_IMG_取对象 (“image”, 索引_地址_ID_title, 跳过次数)
    变量_B9B00125.方法 (“click”, )
    返回 (变量_B9B00125.是否为空 () ＝ 假)

.子程序 图片_取对象, 对象, 公开, 获取指定图片的对象
    .参数 索引_地址_ID_title, 文本型, , 网页图片的“索引_地址_ID_title”。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_IMG_取对象 (“image”, 索引_地址_ID_title, 跳过次数))

.子程序 图片_枚举, 整数型, 公开, 枚举当前网页上的所有图片地址和图片标题，返回图片的数目，失败返回0 。
    .参数 地址数组, 文本型, 参考 可空 数组, 用于存放 图片地址 数组的变量。
    .参数 图片宽度, 文本型, 参考 可空 数组, 用于存放 图片宽度 数组的变量。
    .参数 图片高度, 文本型, 参考 可空 数组, 用于存放 图片高度 数组的变量。
    .参数 图片名称, 文本型, 参考 可空 数组, 用于存放 图片名称 数组的变量。
    .参数 图片ID, 文本型, 参考 可空 数组, 用于存放 图片ID 数组的变量。
    .参数 图片标题, 文本型, 参考 可空 数组, 用于存放 图片标题 数组的变量。

    返回 (_内部_IMG_取数量 (“image”, “图片”, , 真, 地址数组, 图片宽度, 图片高度, 图片名称, 图片ID, 图片标题))

.子程序 图片_取数量, 整数型, 公开, 取网页上的图片数目,成功点击返回图片数目，否则返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个图片上是写入标记文本，把鼠标放在上面即可看到。

    返回 (_内部_IMG_取数量 (“image”, “图片”, 是否标记))

.子程序 图片_取属性, 逻辑型, 公开, 取指定图片的地址。失败返回空文本。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 图片地址, 文本型, 可空
    .参数 图片宽度, 文本型, 可空, 用于装载图片宽度的变量。
    .参数 图片高度, 文本型, 可空, 用于装载图片高度的变量。
    .参数 图片标题, 文本型, 可空, 用于装载图片标题的变量。
    .参数 图片名称, 文本型, 可空, 用于装载图片名称的变量。
    .参数 图片ID, 文本型, 可空, 用于装载图片ID的变量。
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ _内部_IMG_取对象 (“image”, 到文本 (控件索引), )
    .如果真 (是否为空 (图片地址) ＝ 假)
        图片地址 ＝ 元素对象.读文本属性 (“src”, )
    .如果真结束
    
    .如果真 (是否为空 (图片宽度) ＝ 假)
        图片宽度 ＝ 元素对象.读文本属性 (“width”, )
    .如果真结束
    
    .如果真 (是否为空 (图片高度) ＝ 假)
        图片高度 ＝ 元素对象.读文本属性 (“height”, )
    .如果真结束
    
    .如果真 (是否为空 (图片标题) ＝ 假)
        图片标题 ＝ 元素对象.读文本属性 (“title”, )
    .如果真结束
    
    .如果真 (是否为空 (图片名称) ＝ 假)
        图片名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    
    .如果真 (是否为空 (图片ID) ＝ 假)
        图片ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 图片_取索引, 整数型, 公开, 用图片地址取出网页上指定的图片索引，失败返回0 。
    .参数 地址_名称_ID_title, 文本型, , 网页图片的图片 地址_ID
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_E6B00125, 整数型

    _内部_IMG_取对象 (“image”, 地址_名称_ID_title, 跳过次数, 变量_E6B00125)
    返回 (变量_E6B00125)

.子程序 图片_置状态, 逻辑型, 公开, 设置链接的可视状态
    .参数 索引_地址_ID_title, 文本型, , 网页图片的“索引_地址_ID_title”。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (图片_取对象 (索引_地址_ID_title, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 组合框_操作, 逻辑型
    .参数 变量_A3430125, 整数型, 可空
    .参数 变量_A4430125, 整数型, 可空
    .参数 变量_A5430125, 整数型, 可空
    .参数 变量_A6430125, 整数型, 参考 可空
    .参数 变量_A7430125, 文本型, 可空
    .参数 变量_A8430125, 文本型, 可空
    .参数 变量_A9430125, 文本型, 可空
    .参数 变量_AA430125, 文本型, 可空
    .参数 变量_AB430125, 整数型, 参考 可空
    .参数 变量_AC430125, 逻辑型, 可空
    .参数 变量_AD430125, 整数型, 参考 可空
    .参数 变量_AF430125, 文本型, 可空
    .参数 变量_B0430125, 对象, 参考 可空
    .局部变量 变量_B4430125, 整数型
    .局部变量 变量_B5430125, 对象
    .局部变量 变量_B7430125, 整数型
    .局部变量 变量_B8430125, 文本型, , "0"
    .局部变量 变量_B9430125, 整数型
    .局部变量 变量_BA430125, 逻辑型
    .局部变量 变量_BB430125, 整数型

    变量_B8430125 ＝ 分割文本 (“select-one|select”, “|”, )
    变量_B9430125 ＝ 取数组成员数 (变量_B8430125)
    .如果真 (变量_B9430125 ＞ 0)
        
        变量_B5430125 ＝ 集_网页文档.读对象型属性 (“body”, ).读对象型属性 (“all”, ).对象型方法 (“tags”, “select”)
        .计次循环首 (变量_B5430125.读数值属性 (“length”, ), 变量_B4430125)
            变量_B0430125 ＝ 变量_B5430125.对象型方法 (“item”, 变量_B4430125 － 1)
            变量_B7430125 ＝ 变量_B7430125 ＋ 1
            .如果真 (变量_A4430125 ＝ 10)
                .如果真 (变量_AC430125)
                    变量_B0430125.写属性 (“selectedIndex”, 0)
                    变量_B0430125.对象型方法 (“item”, 0).写属性 (“text”, “组合框” ＋ 到文本 (变量_B7430125))
                .如果真结束
                到循环尾 ()
            .如果真结束
            .如果真 (变量_A3430125 ＝ 变量_B7430125)
                .判断开始 (变量_A4430125 ＝ 0)
                    变量_A6430125 ＝ 变量_B0430125.读数值属性 (“length”, )
                    返回 (真)
                .判断 (变量_A4430125 ＝ 1)
                    变量_A7430125 ＝ 变量_B0430125.对象型方法 (“item”, 变量_A5430125 － 1).读文本属性 (“text”, )
                    返回 (真)
                .判断 (变量_A4430125 ＝ 2)
                    返回 (变量_B0430125.对象型方法 (“item”, 变量_A5430125 － 1).写属性 (“text”, 变量_A8430125))
                .判断 (变量_A4430125 ＝ 3)
                    变量_A9430125 ＝ 变量_B0430125.对象型方法 (“item”, 变量_A5430125 － 1).读文本属性 (“value”, )
                    返回 (真)
                .判断 (变量_A4430125 ＝ 4)
                    返回 (变量_B0430125.对象型方法 (“item”, 变量_A5430125 － 1).写属性 (“value”, 变量_AA430125))
                .判断 (变量_A4430125 ＝ 5)
                    变量_AD430125 ＝ 变量_B0430125.读数值属性 (“selectedIndex”, )
                    返回 (真)
                .判断 (变量_A4430125 ＝ 6)
                    处理事件 ()
                    延时 (10)
                    变量_BA430125 ＝ 变量_B0430125.写属性 (“selectedIndex”, 变量_A5430125 － 1)
                    变量_B0430125.方法 (“fireEvent”, “onchange”)
                    返回 (变量_BA430125)
                .判断 (变量_A4430125 ＝ 7)
                    变量_A6430125 ＝ 变量_B0430125.读数值属性 (“length”, )
                    .计次循环首 (变量_A6430125, 变量_BB430125)
                        .如果真 (变量_B0430125.对象型方法 (“item”, 变量_BB430125 － 1).读文本属性 (“text”, ) ＝ 变量_AF430125)
                            处理事件 ()
                            延时 (10)
                            变量_BA430125 ＝ 变量_B0430125.写属性 (“selectedIndex”, 变量_BB430125 － 1)
                            变量_B0430125.方法 (“fireEvent”, “onchange”)
                            返回 (变量_BA430125)
                        .如果真结束
                        
                    .计次循环尾 ()
                .默认
                    
                .判断结束
                
            .如果真结束
            
        .计次循环尾 ()
    .如果真结束
    变量_AB430125 ＝ 变量_B7430125
    返回 (假)

.子程序 组合框_取所有属性, 整数型, 公开, 取出组合框的全部属性。成功返回组合框数量。失败返回0。
    .参数 组合框项目数, 整数型, 参考 可空 数组, 用于装载组合框项目数的变量。
    .参数 所属类型, 文本型, 参考 可空 数组, 用于装载所属类型的变量。
    .参数 控件名称, 文本型, 参考 可空 数组, 用于装载控件名称的变量。
    .参数 控件ID, 文本型, 参考 可空 数组, 用于装载控件ID的变量。
    .参数 引用代码, 文本型, 参考 可空 数组, 用于装载引用代码的变量。
    .参数 是否标记, 逻辑型, 可空, 是否把每个组合框做上标记。
    .局部变量 变量_34420125, 对象, , "0"
    .局部变量 变量_35420125, 整数型
    .局部变量 变量_36420125, 整数型
    .局部变量 变量_37420125, 整数型
    .局部变量 变量_38420125, 对象
    .局部变量 变量_39420125, 对象
    .局部变量 变量_3A420125, 整数型
    .局部变量 变量_3B420125, 文本型, , "0"
    .局部变量 变量_3C420125, 整数型
    .局部变量 变量_3D420125, 逻辑型
    .局部变量 变量_3E420125, 整数型

    变量_3B420125 ＝ 分割文本 (“select-one|select”, “|”, )
    变量_3C420125 ＝ 取数组成员数 (变量_3B420125)
    .如果真 (变量_3C420125 ＞ 0)
        变量_38420125 ＝ 集_网页文档.读对象型属性 (“getElementsByTagName”, “select”)
        .计次循环首 (变量_38420125.读数值属性 (“length”, ), 变量_37420125)
            变量_39420125 ＝ 变量_38420125.对象型方法 (“item”, 变量_37420125 － 1)
            变量_3A420125 ＝ 变量_3A420125 ＋ 1
            加入成员 (所属类型, 变量_39420125.读文本属性 (“type”, ))
            加入成员 (控件名称, 变量_39420125.读文本属性 (“name”, ))
            加入成员 (控件ID, 变量_39420125.读文本属性 (“ID”, ))
            加入成员 (组合框项目数, 变量_39420125.读数值属性 (“length”, ))
            加入成员 (引用代码, 变量_39420125.读文本属性 (“outerHTML”, ))
            .如果真 (是否标记)
                变量_39420125.写属性 (“selectedIndex”, 0)
                变量_39420125.对象型方法 (“item”, 0).写属性 (“text”, “组合框” ＋ 到文本 (变量_3A420125))
            .如果真结束
            
        .计次循环尾 ()
        
        
    .如果真结束
    返回 (变量_3A420125)

.子程序 组合框_取数量, 整数型, 公开, 取网页上的组合框数目,成功点击返回图片数目，否则返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个组合框是写入标记文本。
    .局部变量 变量_89410125, 整数型

    组合框_操作 (, 10, , , , , , , 变量_89410125, 是否标记)
    返回 (变量_89410125)

.子程序 组合框_取项目数, 整数型, 公开, 取指定组合框的项目数。成功返回项目数目，失败返回0。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .局部变量 变量_8B410125, 整数型

    组合框_操作 (组合框索引, 0, , 变量_8B410125)
    返回 (变量_8B410125)

.子程序 组合框_取项目文本, 文本型, 公开, 取指定组合框的项目文本。成功返回项目文本，失败返回空文本。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 项目索引, 整数型, , 项目索引,从0开始。
    .局部变量 变量_8E410125, 文本型

    组合框_操作 (组合框索引, 1, 项目索引, , 变量_8E410125, , , , , , , , )
    返回 (变量_8E410125)

.子程序 组合框_置项目文本, 逻辑型, 公开, 修改指定组合框的项目文本。成功返回真，失败返回假。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 项目索引, 整数型, , 项目索引,从0开始。
    .参数 项目文本, 文本型, , 要写入的项目文本。

    返回 (组合框_操作 (组合框索引, 2, 项目索引, , , 项目文本, , , , , , , ))

.子程序 组合框_取项目数值, 文本型, 公开, 取指定组合框的项目数值。成功返回项目数值，失败返回空文本。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 项目索引, 整数型, , 项目索引,从0开始。
    .局部变量 变量_94410125, 文本型

    组合框_操作 (组合框索引, 3, 项目索引, , , , 变量_94410125, , , )
    返回 (变量_94410125)

.子程序 组合框_置项目数值, 逻辑型, 公开, 修改指定组合框的项目数值。成功返回真，失败返回假。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 项目索引, 整数型, , 项目索引,从0开始。
    .参数 项目数值, 文本型, , 要写入的项目数值。

    返回 (组合框_操作 (组合框索引, 4, 项目索引, , , , , 项目数值, , , ))

.子程序 组合框_取现行选中项, 整数型, 公开, 取指定组合框的现行选中项。成功返回项目索引，失败返回0。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .局部变量 变量_99410125, 整数型

    组合框_操作 (组合框索引, 5, , , , , , , , , 变量_99410125)
    返回 (变量_99410125)

.子程序 组合框_置现行选中项, 逻辑型, 公开, 按索引修改指定组合框的现行选中项。成功返回真，失败返回假。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 项目索引, 整数型, , 项目索引,从0开始。

    返回 (组合框_操作 (组合框索引, 6, 项目索引))

.子程序 组合框_按项目文本选择, 逻辑型, 公开, 按项目文本修改指定组合框的现行选中项。成功返回真，失败返回假。
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 项目文本, 文本型, , 要选择的项目文本。如果组合框里有个2008的项目，直接写2008就OK了。

    返回 (组合框_操作 (组合框索引, 7, , , , , , , , , , 项目文本))

.子程序 组合框_置焦点, 逻辑型, 公开, 向指定的组合框置输入焦点
    .参数 组合框索引, 整数型, , 索引从1开始。
    .局部变量 变量_3CB50125, 对象

    组合框_操作 (组合框索引, , , , , , , , , , , , 变量_3CB50125)
    变量_3CB50125.方法 (“focus”, )
    返回 (变量_3CB50125.是否为空 () ＝ 假)

.子程序 组合框_置状态, 逻辑型, 公开, 设置组合框的可视状态
    .参数 组合框索引, 整数型, , 索引从1开始。
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏
    .局部变量 变量_F1B50125, 对象

    组合框_操作 (组合框索引, , , , , , , , , , , , 变量_F1B50125)
    返回 (变量_F1B50125.读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 表格_初始化, 文本型
    .参数 变量_665F0125, 整数型
    .参数 变量_675F0125, 整数型, 可空
    .参数 变量_685F0125, 整数型, 可空
    .参数 变量_695F0125, 整数型, 可空
    .参数 变量_6A5F0125, 文本型, 可空
    .局部变量 变量_6B5F0125, 对象
    .局部变量 变量_6C5F0125, 对象
    .局部变量 变量_6D5F0125, 整数型

    变量_6B5F0125 ＝ 集_网页文档.读对象型属性 (“body”, ).对象型方法 (“all”, )
    变量_6C5F0125 ＝ 变量_6B5F0125.对象型方法 (“tags”, “table”)
    .判断开始 (变量_665F0125 ＝ 0)
        返回 (到文本 (变量_6C5F0125.读数值属性 (“length”, )))
    .判断 (变量_665F0125 ＝ 1)
        返回 (变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).读文本属性 (“outerText”, ))
    .判断 (变量_665F0125 ＝ 2)
        返回 (变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).读文本属性 (“outerHTML”, ))
    .判断 (变量_665F0125 ＝ 3)
        返回 (到文本 (变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).读对象型属性 (“cells”, ).读数值属性 (“length”, )))
    .判断 (变量_665F0125 ＝ 4)
        返回 (到文本 (变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).读对象型属性 (“rows”, ).读数值属性 (“length”, )))
    .判断 (变量_665F0125 ＝ 5)
        变量_6B5F0125 ＝ 变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).读对象型属性 (“rows”, )
        返回 (到文本 (变量_6B5F0125.对象型方法 (“item”, 变量_685F0125 － 1).读对象型属性 (“cells”, ).读数值属性 (“length”, )))
    .判断 (变量_665F0125 ＝ 6)
        变量_6B5F0125 ＝ 变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).对象型方法 (“rows”, )
        变量_6B5F0125 ＝ 变量_6B5F0125.对象型方法 (“item”, 变量_685F0125 － 1).读对象型属性 (“cells”, )
        返回 (变量_6B5F0125.对象型方法 (“item”, 变量_695F0125 － 1).读文本属性 (“outerText”, ))
    .判断 (变量_665F0125 ＝ 7)
        变量_6B5F0125 ＝ 变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).对象型方法 (“rows”, )
        变量_6B5F0125 ＝ 变量_6B5F0125.对象型方法 (“item”, 变量_685F0125 － 1).读对象型属性 (“cells”, )
        返回 (变量_6B5F0125.对象型方法 (“item”, 变量_695F0125 － 1).读文本属性 (“outerHTML”, ))
    .判断 (变量_665F0125 ＝ 8)
        变量_6B5F0125 ＝ 变量_6C5F0125.对象型方法 (“item”, 变量_675F0125 － 1).对象型方法 (“rows”, )
        变量_6B5F0125 ＝ 变量_6B5F0125.对象型方法 (“item”, 变量_685F0125 － 1).读对象型属性 (“cells”, )
        返回 (到文本 (变量_6B5F0125.对象型方法 (“item”, 变量_695F0125 － 1).写属性 (“innerText”, 变量_6A5F0125)))
    .默认
        
    .判断结束
    返回 (“0”)

.子程序 表格_取数量, 整数型, 公开, 取得当前网页内的表格(table)的数目
    返回 (到数值 (表格_初始化 (0)))

.子程序 表格_取文本, 文本型, 公开, 取出指定表格内的所有单元格的文本
    .参数 表格索引, 整数型, , 表格索引从1开始

    返回 (表格_初始化 (1, 表格索引))

.子程序 表格_取源码, 文本型, 公开, 取出指定表格内的所有单元格的源码
    .参数 表格索引, 整数型, , 表格索引从1开始

    返回 (表格_初始化 (2, 表格索引))

.子程序 表格_取行数, 整数型, 公开, 取出指定表格内的行数
    .参数 表格索引, 整数型, , 表格索引从1开始

    返回 (到数值 (表格_初始化 (4, 表格索引)))

.子程序 表格_取列数, 整数型, 公开, 取出指定表格内的列数
    .参数 表格索引, 整数型, , 表格索引从1开始
    .参数 行数索引, 整数型, , 要取出列数的行索引

    返回 (到数值 (表格_初始化 (5, 表格索引, 行数索引, )))

.子程序 表格_取单元格文本, 文本型, 公开, 取指定单元格的文本
    .参数 表格索引, 整数型, , 表格索引从1开始
    .参数 行索引, 整数型, , 行索引从1开始
    .参数 列索引, 整数型, , 列索引从1开始

    返回 (表格_初始化 (6, 表格索引, 行索引, 列索引))

.子程序 表格_置单元格文本, 文本型, 公开, 取指定单元格的文本
    .参数 表格索引, 整数型, , 表格索引从1开始
    .参数 行索引, 整数型, , 行索引从1开始
    .参数 列索引, 整数型, , 列索引从1开始
    .参数 要置入的单元格文本, 文本型, 可空, 要置入的单元格文本

    返回 (表格_初始化 (8, 表格索引, 行索引, 列索引, 要置入的单元格文本))

.子程序 表格_取单元格源码, 文本型, 公开, 取指定单元格的源码
    .参数 表格索引, 整数型, , 表格索引从1开始
    .参数 行索引, 整数型, , 行索引从1开始
    .参数 列索引, 整数型, , 列索引从1开始

    返回 (表格_初始化 (7, 表格索引, 行索引, 列索引))

.子程序 表格_取单元格数量, 整数型, 公开, 取出指定表格内的所有单元格数量
    .参数 表格索引, 整数型, , 表格索引从1开始

    返回 (到数值 (表格_初始化 (3, 表格索引)))

.子程序 表单_取对象, 对象, 公开, 获取到表单的元素对象
    .参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引
    .参数 元素索引, 整数型, 参考 可空, 请提供一个整数型的变量，用于存放该表单的 元素索引
    .局部变量 变量_EDB40125, 对象
    .局部变量 变量_F4B40125, 对象
    .局部变量 变量_F3B40125, 整数型

    变量_EDB40125 ＝ 集_网页文档.读对象型属性 (“forms”, )
    .计次循环首 (变量_EDB40125.读数值属性 (“length”, ), 变量_F3B40125)
        变量_F4B40125 ＝ 变量_EDB40125.对象型方法 (“item”, 变量_F3B40125 － 1)
        元素索引 ＝ 元素索引 ＋ 1
        .如果真 (变量_F4B40125.读文本属性 (“name”, ) ＝ 名称_ID_索引)
            返回 (变量_F4B40125)
        .如果真结束
        .如果真 (变量_F4B40125.读文本属性 (“id”, ) ＝ 名称_ID_索引)
            返回 (变量_F4B40125)
        .如果真结束
        .如果真 (元素索引 ＝ 到整数 (名称_ID_索引))
            返回 (变量_F4B40125)
        .如果真结束
        
    .计次循环尾 ()
    元素索引 ＝ -1
    变量_F4B40125.清除 ()
    返回 (变量_F4B40125)

.子程序 表单_提交, 逻辑型, 公开, 有时候登陆网站的时候取不到登陆按钮的元素名称或ID的时候，可以用表单来提交。
    .参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引
    .局部变量 变量_B9410125, 对象

    变量_B9410125 ＝ 表单_取对象 (名称_ID_索引)
    变量_B9410125.方法 (“submit”, )
    返回 (变量_B9410125.是否为空 () ＝ 假)

.子程序 表单_取索引, 整数型, 公开, 用表单的名称、ID取出相对应的索引，失败返回-1
    .参数 名称_ID, 文本型, , 用表单的名称、ID取出相对应的索引
    .局部变量 变量_F7B40125, 整数型

    表单_取对象 (名称_ID, 变量_F7B40125)
    返回 (变量_F7B40125)

.子程序 表单_取源码, 文本型, 公开, 获取指定表单的源码
    .参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引

    返回 (表单_取对象 (名称_ID_索引).读文本属性 (“outerHTML”, ))

.子程序 表单_取数量, 整数型, 公开, 取回当前网页上的表单数目。
    返回 (集_网页文档.读对象型属性 (“forms”, ).读数值属性 (“length”, ))

.子程序 表单_取信息, 逻辑型, 公开, 通过表单的索引取回表单ID。
    .参数 名称_ID_索引, 文本型, , 可以为：表单的元素名称、ID或索引
    .参数 提交方式, 文本型, 可空, 请提供一个文本型的变量，用于存放该表单的 提交方式
    .参数 提交地址, 文本型, 可空, 请提供一个文本型的变量，用于存放该表单的 提交地址
    .局部变量 变量_01B50125, 对象

    变量_01B50125 ＝ 表单_取对象 (名称_ID_索引)
    .如果真 (是否为空 (提交方式) ＝ 假)
        提交方式 ＝ 变量_01B50125.读文本属性 (“method”, )
    .如果真结束
    
    .如果真 (是否为空 (提交地址) ＝ 假)
        提交地址 ＝ 变量_01B50125.读文本属性 (“action”, )
    .如果真结束
    
    返回 (变量_01B50125.是否为空 () ＝ 假)

.子程序 隐藏表单_取对象, 对象, 公开, 根据网页隐藏表单的Name或ID或索引取回对应的对象。
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_INPUT_取对象 (“hidden”, 名称_ID_索引, 跳过次数))

.子程序 隐藏表单_取数量, 整数型, 公开, 获取网页上的隐藏表单数量。成功返回隐藏表单的数量。失败返回0。
    返回 (_内部_INPUT_取数量 (“hidden”, “隐藏表单”, 假))

.子程序 隐藏表单_取内容, 文本型, 公开, 获取取指定的网页隐藏表单中的内容，成功返回隐藏表单的内容，失败返回空文本。
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (隐藏表单_取对象 (名称_ID_索引, 跳过次数).读文本属性 (“value”, ))

.子程序 隐藏表单_取索引, 整数型, 公开, 用隐藏表单“名称_ID”取出网页上指定的隐藏表单索引，失败返回0。
    .参数 名称_ID, 文本型, , 网页文本框的文本框名称或ID
    .局部变量 变量_6DB00125, 整数型

    _内部_INPUT_取对象 (“hidden”, 名称_ID, , 变量_6DB00125)
    返回 (变量_6DB00125)

.子程序 隐藏表单_取属性, 逻辑型, 公开, 取指定隐藏表单的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 隐藏表单内容, 文本型, 参考 可空, 用于装载隐藏表单内容的变量。 
    .参数 隐藏表单名称, 文本型, 参考 可空, 用于装载隐藏表单名称的变量。 
    .参数 隐藏表单ID, 文本型, 参考 可空, 用于装载隐藏表单ID的变量。 
    .参数 隐藏表单类型, 文本型, 参考 可空, 用于装载隐藏表单类型的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ 隐藏表单_取对象 (到文本 (控件索引))
    .如果真 (是否为空 (隐藏表单内容) ＝ 假)
        隐藏表单内容 ＝ 元素对象.读文本属性 (“value”, )
    .如果真结束
    .如果真 (是否为空 (隐藏表单名称) ＝ 假)
        隐藏表单名称 ＝ 元素对象.读文本属性 (“name”, )
    .如果真结束
    .如果真 (是否为空 (隐藏表单ID) ＝ 假)
        隐藏表单ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    .如果真 (是否为空 (隐藏表单类型) ＝ 假)
        隐藏表单类型 ＝ 元素对象.读文本属性 (“type”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 隐藏表单_写内容, 逻辑型, 公开, 往指定的网页隐藏表单写入指定的内容。成功返回真，失败返回假。
    .参数 名称_ID_索引, 文本型, , 网页文本框的文本框名称或ID或索引。从1开始。
    .参数 欲写内的内容, 文本型, , 欲写内的内容
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (隐藏表单_取对象 (名称_ID_索引, 跳过次数).写属性 (“value”, 欲写内的内容))

.子程序 DIV_取对象, 对象, 公开, 获取到相应的元素对象
    .参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_DIV_取对象 (“DIV”, 标题_索引_ID_名称, 跳过次数))

.子程序 DIV_取数量, 整数型, 公开, 取网页上的超级DIV数目,成功返回DIV数目，否则返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个DIV里是写入标记文本。

    返回 (_内部_DIV_取数量 (“DIV”, “DIV”, 是否标记))

.子程序 DIV_取属性, 逻辑型, 公开, 取指定DIV的各种属性。成功返回真。失败返回假。 
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 元素类名, 文本型, 可空, 用于装载DIV内容的变量。 
    .参数 元素标题, 文本型, 可空, 用于装载DIV内容的变量。 
    .参数 元素ID, 文本型, 可空
    .参数 元素对象, 对象, 参考 可空, 用于装载元素对象的变量。 

    元素对象 ＝ DIV_取对象 (到文本 (控件索引))
    .如果真 (是否为空 (元素类名) ＝ 假)
        元素类名 ＝ 元素对象.读文本属性 (“className”, )
    .如果真结束
    
    .如果真 (是否为空 (元素标题) ＝ 假)
        元素标题 ＝ 元素对象.读文本属性 (“title”, )
    .如果真结束
    
    .如果真 (是否为空 (元素ID) ＝ 假)
        元素ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 DIV_取内容, 文本型, 公开, 获取指定DIV的内容
    .参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_DIV_取对象 (“DIV”, 标题_索引_ID_名称, 跳过次数).读文本属性 (“innerHTML”, ))

.子程序 DIV_写内容, 逻辑型, 公开, 往指定的DIV里写内容
    .参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
    .参数 欲写入的内容, 文本型, , 欲写入的内容，支持HTML代码
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_DIV_取对象 (“DIV”, 标题_索引_ID_名称, 跳过次数).写属性 (“innerHTML”, 欲写入的内容))

.子程序 DIV_取源码, 文本型, 公开, 获取指定DIV的源码
    .参数 标题_索引_ID_名称, 文本型, , 网页DIV的DIV标题、名称、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_DIV_取对象 (“DIV”, 标题_索引_ID_名称, 跳过次数).读文本属性 (“outerHTML”, ))

.子程序 DIV_取索引, 整数型, 公开, 通过DIV的“title标题_ID_名称_ClassName”获取他的索引，失败返回0 。
    .参数 title标题_ID_名称_ClassName, 文本型, , 网页DIV的“title标题_ID_名称_ClassName”
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_5CB10125, 整数型

    _内部_DIV_取对象 (“DIV”, title标题_ID_名称_ClassName, 跳过次数, 变量_5CB10125)
    返回 (变量_5CB10125)

.子程序 DIV_点击, 逻辑型, 公开, 点击网页上的DIV。成功返回真。失败返回假。 
    .参数 标题_索引_ID_Class, 文本型, , 网页DIV的DIV标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_5DB10125, 对象

    变量_5DB10125 ＝ DIV_取对象 (标题_索引_ID_Class, 跳过次数)
    变量_5DB10125.方法 (“click”, )
    返回 (变量_5DB10125.是否为空 () ＝ 假)

.子程序 DIV_置状态, 逻辑型, 公开, 设置DIV的可视状态
    .参数 标题_索引_ID_Class, 文本型, , 网页DIV的DIV标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (DIV_取对象 (标题_索引_ID_Class, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 ULLI_取数量, 整数型, 公开, 成功返回控件数量，失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个DIV里是写入标记文本。

    返回 (_内部_ULLI_取数量 (“li”, “ULLI”, 是否标记))

.子程序 ULLI_取索引, 整数型, 公开, 成功返回控件索引，失败返回0。
    .参数 标题_ID_ClassName, 文本型
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_F2B30125, 整数型

    _内部_ULLI_取对象 (“li”, 标题_ID_ClassName, 跳过次数, 变量_F2B30125)
    返回 (变量_F2B30125)

.子程序 ULLI_选择, 逻辑型, 公开, 成功返回真。失败返回假。
    .参数 标题_ID_ClassName, 文本型, , 可以为控件的标题、ID和索引。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_DEB30125, 对象

    变量_DEB30125 ＝ _内部_ULLI_取对象 (“li”, 标题_ID_ClassName, 跳过次数)
    变量_DEB30125.方法 (“click”, )
    返回 (变量_DEB30125.是否为空 () ＝ 假)

.子程序 ULLI_取源码, 文本型, 公开, 获取指定ULLI的源码
    .参数 标题_ID_ClassName, 文本型, , 可以为控件的标题、ID和索引。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_ULLI_取对象 (“li”, 标题_ID_ClassName, 跳过次数).读文本属性 (#网页属性_网页源码, ))

.子程序 SPAN_取对象, 对象, 公开, 获取SPAN的元素对象
    .参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (_内部_SPAN_取对象 (“SPAN”, 标题_索引_ID_Class, 跳过次数))

.子程序 SPAN_点击, 逻辑型, 公开, 点击网页上的SPAN。成功返回真。失败返回假。 
    .参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_93B30125, 对象

    变量_93B30125 ＝ SPAN_取对象 (标题_索引_ID_Class, 跳过次数)
    变量_93B30125.方法 (“click”, )
    返回 (变量_93B30125.是否为空 () ＝ 假)

.子程序 SPAN_取数量, 整数型, 公开, 成功返回控件数量，失败返回0。
    .参数 是否标记, 逻辑型, 可空, 是否在每个DIV里是写入标记文本。

    返回 (_内部_SPAN_取数量 (“SPAN”, “SPAN”, 是否标记))

.子程序 SPAN_取索引, 整数型, 公开, 成功返回到文本(到文本(控件索引))，失败返回0。
    .参数 标题_ID_Class, 文本型
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .局部变量 变量_A7B30125, 整数型

    _内部_SPAN_取对象 (“SPAN”, 标题_ID_Class, 跳过次数, 变量_A7B30125)
    返回 (变量_A7B30125)

.子程序 SPAN_取属性, 逻辑型, 公开, 取指定SPAN的各种属性。成功返回真，失败返回假。
    .参数 控件索引, 整数型, , 网页控件的索引。从1开始。
    .参数 元素标题, 文本型, 可空, 用于装载SPAN 元素标题 的变量。 
    .参数 元素类名, 文本型, 可空, 用于装载SPAN 元素类名 的变量。 
    .参数 元素内容, 文本型, 可空, 用于装载SPAN 元素内容 的变量。 
    .参数 元素ID, 文本型, 可空, 用于装载SPAN 元素ID 的变量。 
    .参数 元素对象, 对象, 参考 可空, 用于装载SPAN 元素对象 的变量。 

    元素对象 ＝ SPAN_取对象 (到文本 (控件索引), )
    .如果真 (是否为空 (元素标题) ＝ 假)
        元素标题 ＝ 元素对象.读文本属性 (“title”, )
    .如果真结束
    
    .如果真 (是否为空 (元素类名) ＝ 假)
        元素类名 ＝ 元素对象.读文本属性 (“className”, )
    .如果真结束
    
    .如果真 (是否为空 (元素内容) ＝ 假)
        元素内容 ＝ 元素对象.读文本属性 (“innerText”, )
    .如果真结束
    
    .如果真 (是否为空 (元素ID) ＝ 假)
        元素ID ＝ 元素对象.读文本属性 (“id”, )
    .如果真结束
    
    返回 (元素对象.是否为空 () ＝ 假)

.子程序 SPAN_取内容, 文本型, 公开, 获取指定SPAN的内容
    .参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (SPAN_取对象 (标题_索引_ID_Class, 跳过次数).读文本属性 (“innerHTML”, ))

.子程序 SPAN_取源码, 文本型, 公开, 获取指定SPAN的源码
    .参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (SPAN_取对象 (标题_索引_ID_Class, 跳过次数).读文本属性 (“outerHTML”, ))

.子程序 SPAN_写内容, 逻辑型, 公开, 往指定SPAN里写内容
    .参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
    .参数 欲写入的内容, 文本型, , 欲写入的内容，支持HTML代码
    .参数 跳过次数, 整数型, 可空, 如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”

    返回 (SPAN_取对象 (标题_索引_ID_Class, 跳过次数).写属性 (“innerHTML”, 欲写入的内容))

.子程序 SPAN_置状态, 逻辑型, 公开, 设置SPAN的可视状态
    .参数 标题_索引_ID_Class, 文本型, , 网页SPAN的SPAN标题、类名、ID、索引。索引从1开始。
    .参数 跳过次数, 整数型, 可空, 可空。如果元素名称一样,可以用此参数;说明:跳过的次数，如果为0还是为不跳过，只有“是否跳过参数为真”且“跳过次数大于0的时候才会跳过”
    .参数 隐藏, 逻辑型, 可空, 可空。默认为假。假=可视，真=隐藏

    返回 (SPAN_取对象 (标题_索引_ID_Class, 跳过次数).读对象型属性 (“style”, ).写属性 (“display”, 选择 (隐藏, “none”, “”)))

.子程序 网页_屏蔽安全警报, , 公开, 只对IE6有效。用于屏蔽HTTPS网页操作时弹出的安全警告信息框，感谢坛友【易之易】提供
    .参数 屏蔽与解除, 整数型, 可空, 可空，默认为［屏蔽安全警报提示］。1=显示安全警报提示
    .局部变量 变量_E3930125, 注册表操作

    变量_E3930125.写DWORD值 (“HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings”, “WarnOnHTTPSToHTTPRedirect”, 屏蔽与解除)
    变量_E3930125.写DWORD值 (“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings”, “WarnOnHTTPSToHTTPRedirect”, 屏蔽与解除)

.子程序 网页_枚举子句柄, 逻辑型
    .参数 变量_D42D0125, 整数型
    .参数 变量_D52D0125, 整数型, 参考 数组
    .局部变量 变量_D62D0125, 整数型
    .局部变量 变量_D72D0125, 文本型

    变量_D62D0125 ＝ FindWindowExA (变量_D42D0125, 0, 0, 0)
    .判断循环首 (变量_D62D0125 ≠ 0)
        变量_D72D0125 ＝ 窗口_取类名 (变量_D62D0125)
        .如果真 (变量_D72D0125 ＝ “Internet Explorer_Server”)
            加入成员 (变量_D52D0125, 变量_D62D0125)
        .如果真结束
        网页_枚举子句柄 (变量_D62D0125, 变量_D52D0125)
        变量_D62D0125 ＝ FindWindowExA (变量_D42D0125, 变量_D62D0125, 0, 0)
    .判断循环尾 ()
    返回 (取数组成员数 (变量_D52D0125) ≠ 0)

.子程序 取元素代码, 文本型
    .参数 变量_12190125, 对象

    返回 (变量_12190125.读文本属性 (“innerHTML”, ))

.子程序 写超文本流
    .参数 变量_162E0125, 文本型

    集_网页文档.方法 (“open”, )
    集_网页文档.方法 (“write”, 变量_162E0125)
    集_网页文档.方法 (“Close”, )

.子程序 取元素集合, 对象
    .参数 变量_172E0125, 文本型

    返回 (集_网页文档.对象型方法 (“getElementsByTagName”, 变量_172E0125))

.子程序 取元素文本, 文本型
    .参数 变量_13190125, 对象

    返回 (变量_13190125.读文本属性 (“innerText”, ))

.子程序 置元素代码, 逻辑型
    .参数 变量_032E0125, 对象
    .参数 变量_042E0125, 文本型

    返回 (变量_032E0125.写属性 (“innerHTML”, 变量_042E0125))

.子程序 置元素文本, 逻辑型
    .参数 变量_052E0125, 对象
    .参数 变量_062E0125, 文本型

    返回 (变量_052E0125.写属性 (“innerText”, 变量_062E0125))

.子程序 显示弹出窗口, 对象
    .参数 变量_3E190125, 整数型
    .参数 变量_3F190125, 整数型
    .参数 变量_40190125, 整数型
    .参数 变量_41190125, 整数型
    .参数 变量_42190125, 文本型
    .参数 变量_43190125, 整数型, 可空
    .参数 变量_44190125, 整数型, 可空
    .参数 变量_45190125, 整数型, 可空
    .参数 变量_46190125, 对象, 可空
    .局部变量 变量_47190125, 对象
    .局部变量 变量_48190125, 对象

    变量_47190125 ＝ 集_网页文档.读对象型属性 (“parentWindow”, ).对象型方法 (“createPopup”, )
    变量_48190125 ＝ 变量_47190125.读对象型属性 (“document”, ).读对象型属性 (“body”, )
    .如果真 (是否为空 (变量_43190125))
        变量_43190125 ＝ #白色
    .如果真结束
    .如果真 (是否为空 (变量_44190125))
        变量_44190125 ＝ 1
    .如果真结束
    .如果真 (是否为空 (变量_45190125))
        变量_45190125 ＝ #浅灰
    .如果真结束
    变量_48190125.读对象型属性 (“style”, ).写属性 (“backgroundColor”, 运算_颜色转换 (变量_43190125))
    变量_48190125.读对象型属性 (“style”, ).写属性 (“border”, “solid ” ＋ 运算_颜色转换 (变量_45190125) ＋ 到文本 (变量_44190125) ＋ “px”)
    变量_48190125.写属性 (“innerHTML”, 变量_42190125)
    .如果 (是否为空 (变量_46190125))
        变量_47190125.方法 (“show”, 变量_3E190125, 变量_3F190125, 变量_40190125, 变量_41190125)
    .否则
        变量_47190125.方法 (“show”, 变量_3E190125, 变量_3F190125, 变量_40190125, 变量_41190125, 变量_46190125)
    .如果结束
    返回 (变量_47190125)

.子程序 隐藏弹出窗口
    .参数 变量_49190125, 对象

    变量_49190125.方法 (“hide”, )

.子程序 置元素引用代码, 逻辑型
    .参数 变量_252E0125, 对象
    .参数 变量_262E0125, 文本型

    返回 (变量_252E0125.写属性 (“outerHTML”, 变量_262E0125))

.子程序 置元素引用文本, 逻辑型
    .参数 变量_272E0125, 对象
    .参数 变量_282E0125, 文本型

    返回 (变量_272E0125.写属性 (“outerText”, 变量_282E0125))

.子程序 取元素引用代码, 文本型
    .参数 变量_212E0125, 对象

    返回 (变量_212E0125.读文本属性 (“outerHTML”, ))

.子程序 取元素引用文本, 文本型
    .参数 变量_222E0125, 对象

    返回 (变量_222E0125.读文本属性 (“outerText”, ))

.子程序 就绪判断_文本关键字, 逻辑型, 公开, 通过【网页文本】关键字判断网页是否载入就绪,如果是就绪并且找到关键字,返回真,否则返回假
    .参数 浏览器窗口句柄, 整数型
    .参数 欲判断的关键字, 文本型
    .参数 超时返回, 整数型, 可空, 可空,单位为毫秒,默认为等待5000毫秒
    .参数 网页文档对象, 对象, 可空, 如果此参数不为空,将以此参数为主。第1个参数可以直接填0
    .局部变量 变量_DE710125, 文本型
    .局部变量 变量_1F730125, 整数型

    .如果真 (是否为空 (超时返回))
        超时返回 ＝ 5000
    .如果真结束
    变量_1F730125 ＝ 取启动时间 ()
    .判断循环首 (真)
        .如果真 (窗口_句柄是否有效 (浏览器窗口句柄) ＝ 假)
            返回 (假)
        .如果真结束
        程序_延时 (300)
        .如果 (是否为空 (网页文档对象))
            初始化 (浏览器窗口句柄)
            变量_DE710125 ＝ 网页_取文本 ()
        .否则
            变量_DE710125 ＝ 编码_Unicode到Ansi (网页文档对象.读对象型属性 (“documentElement”, ).读属性 (“innerText”, ).取字节集 ())
            
        .如果结束
        .判断开始 (寻找文本 (变量_DE710125, 欲判断的关键字, , 假) ≠ -1)
            返回 (真)
        .判断 (取启动时间 () － 变量_1F730125 ＞ 超时返回)
            返回 (假)
        .默认
            
        .判断结束
        
    .判断循环尾 ()
    返回 (假)

.子程序 就绪判断_源码关键字, 逻辑型, 公开, 通过【源码文本】关键字判断网页是否载入就绪,如果是就绪并且找到关键字,返回真,否则返回假
    .参数 浏览器窗口句柄, 整数型
    .参数 欲判断的关键字, 文本型
    .参数 是否区分大小写, 逻辑型, 可空
    .参数 超时返回, 整数型, 可空, 可空,单位为毫秒,默认为等待5000毫秒
    .参数 网页文档对象, 对象, 可空, 如果此参数不为空,将以此参数为主。第1个参数可以直接填0
    .局部变量 变量_26730125, 文本型
    .局部变量 变量_27730125, 整数型

    变量_27730125 ＝ 取启动时间 ()
    .如果真 (是否为空 (超时返回))
        超时返回 ＝ 5000
    .如果真结束
    .判断循环首 (真)
        .如果真 (窗口_句柄是否有效 (浏览器窗口句柄) ＝ 假)
            返回 (假)
        .如果真结束
        程序_延时 (300)
        .如果 (是否为空 (网页文档对象))
            初始化 (浏览器窗口句柄)
            变量_26730125 ＝ 网页_取源码 ()
        .否则
            变量_26730125 ＝ 编码_Unicode到Ansi (网页文档对象.读对象型属性 (“documentElement”, ).读属性 (“outerHTML”, ).取字节集 ())
            
        .如果结束
        .判断开始 (寻找文本 (变量_26730125, 欲判断的关键字, , 是否区分大小写) ≠ -1)
            返回 (真)
        .判断 (取启动时间 () － 变量_27730125 ＞ 超时返回)
            返回 (假)
        .默认
            
        .判断结束
        
    .判断循环尾 ()
    返回 (假)
    

