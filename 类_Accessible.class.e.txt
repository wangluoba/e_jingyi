.版本 2

.程序集 类_Accessible, , 公开, 感谢会员【酷宝贝】提供Accessible接口
.程序集变量 m_parent, 对象
.程序集变量 m_self, 对象
.程序集变量 m_id, 整数型

.子程序 _初始化
    

.子程序 _销毁
    

.子程序 创建自窗口句柄, 逻辑型, 公开, 从指定窗口句柄处获取自绘对象
    .参数 参数_窗口句柄, 整数型, , 目标自绘窗口句柄
    .局部变量 变量_5E7B0225, 整数型
    .局部变量 变量_5F7B0225, 整数型

    m_self.清除 ()
    m_parent.清除 ()
    m_id ＝ 0
    变量_5F7B0225 ＝ _取对象指针的地址 (m_self)
    变量_5E7B0225 ＝ AccessibleObjectFromWindow (参数_窗口句柄, #OBJID_WINDOW, #图片资源_FB090328, 变量_5F7B0225)
    返回 (变量_5E7B0225 ＝ 0)

.子程序 创建自屏幕坐标, 逻辑型, 公开, 从桌面坐标处获取自绘窗口对象
    .参数 参数_X, 整数型, , 桌面X坐标
    .参数 参数_Y, 整数型, , 桌面Y坐标
    .局部变量 变量_627B0225, 整数型
    .局部变量 变量_637B0225, 整数型
    .局部变量 变量_647B0225, 变体型

    m_self.清除 ()
    m_parent.清除 ()
    m_id ＝ 0
    变量_637B0225 ＝ _取对象指针的地址 (m_self)
    变量_627B0225 ＝ AccessibleObjectFromPoint (参数_X, 参数_Y, 变量_637B0225, 变量_647B0225)
    .如果真 (变量_627B0225 ≠ 0)
        返回 (假)
    .如果真结束
    
    m_id ＝ 变量_647B0225.取数值 ()
    .如果真 (m_id ≠ 0)
        m_parent ＝ m_self
        m_self.清除 ()
    .如果真结束
    返回 (真)

.子程序 创建自对象, , 公开, 内部使用，从指定对象获取自绘窗口对象
    .参数 参数_对象, 对象

    m_self.清除 ()
    m_parent.清除 ()
    m_id ＝ 0
    m_self ＝ 参数_对象

.子程序 创建自ID, , 公开, 内部使用，用从指定ID获取自绘窗口对象
    .参数 参数_ID, 整数型
    .参数 参数_父对象, 对象

    m_self.清除 ()
    m_parent.清除 ()
    m_id ＝ 参数_ID
    m_parent ＝ 参数_父对象

.子程序 到变体型, 变体型, 公开
    .局部变量 变量_687B0225, 变体型

    .如果 (m_id ＝ 0)
        变量_687B0225.赋值 (m_self, )
    .否则
        变量_687B0225.赋值 (m_id, )
    .如果结束
    返回 (变量_687B0225)

.子程序 是否空, 逻辑型, 公开
    .如果 (m_id ≠ 0)
        返回 (m_parent.是否为空 ())
    .否则
        返回 (m_self.是否为空 ())
    .如果结束
    

.子程序 取ID, 整数型, 公开
    返回 (m_id)

.子程序 取父元素, 逻辑型, 公开, accParent
    .参数 参数_父元素, 类_Accessible, 参考

    .如果 (m_id ≠ 0)
        参数_父元素.创建自对象 (m_parent)
    .否则
        参数_父元素.创建自对象 (m_self.读对象型属性 (“accParent”, ))
    .如果结束
    返回 (取反 (参数_父元素.是否空 ()))
    

.子程序 取子元素总数, 整数型, 公开, accChildCount
    返回 (m_self.读数值属性 (“accChildCount”, ))
    

.子程序 取子元素, 逻辑型, 公开, accChild
    .参数 参数_索引, 整数型, , 索引从1开始
    .参数 参数_子元素, 类_Accessible, 参考
    .局部变量 变量_6C7B0225, 对象
    .局部变量 变量_6D7B0225, 变体型, , "1"
    .局部变量 变量_6E7B0225, 整数型
    .局部变量 变量_6F7B0225, 整数型

    变量_6F7B0225 ＝ AccessibleChildren (_取对象指针 (m_self), 参数_索引 － 1, 1, 变量_6D7B0225, 变量_6E7B0225)
    .如果真 (变量_6F7B0225 ＝ 0 且 变量_6E7B0225 ＝ 1)
        .如果 (变量_6D7B0225 [1].取类型 () ＝ #变体类型.数值型)
            变量_6C7B0225 ＝ m_self.读对象型属性 (“accChild”, 变量_6D7B0225 [1])
        .否则
            变量_6C7B0225 ＝ 变量_6D7B0225 [1].取对象 ()
        .如果结束
        
        .如果 (变量_6C7B0225.是否为空 ())
            参数_子元素.创建自ID (变量_6D7B0225 [1].取数值 (), m_self)
        .否则
            参数_子元素.创建自对象 (变量_6C7B0225)
        .如果结束
        
    .如果真结束
    返回 (取反 (参数_子元素.是否空 ()))

.子程序 枚举子元素, 整数型, 公开, 从指定节点对象枚举下级全部子元素
    .参数 参数_子元素组, 类_Accessible, 参考 数组
    .局部变量 变量_717B0225, 对象
    .局部变量 变量_727B0225, 变体型, , "0"
    .局部变量 变量_737B0225, 整数型
    .局部变量 变量_747B0225, 整数型
    .局部变量 变量_757B0225, 整数型
    .局部变量 变量_767B0225, 整数型

    变量_767B0225 ＝ 取子元素总数 ()
    .如果真 (变量_767B0225 ＝ 0)
        返回 (0)
    .如果真结束
    重定义数组 (变量_727B0225, 假, 变量_767B0225)
    变量_747B0225 ＝ AccessibleChildren (_取对象指针 (m_self), 0, 变量_767B0225, 变量_727B0225, 变量_737B0225)
    .如果真 (变量_747B0225 ≠ 0)
        返回 (0)
    .如果真结束
    重定义数组 (参数_子元素组, 假, 变量_767B0225)
    .计次循环首 (变量_767B0225, 变量_757B0225)
        .如果 (变量_727B0225 [变量_757B0225].取类型 () ＝ #变体类型.数值型)
            变量_717B0225 ＝ m_self.读对象型属性 (“accChild”, 变量_727B0225 [变量_757B0225])
        .否则
            变量_717B0225 ＝ 变量_727B0225 [变量_757B0225].取对象 ()
        .如果结束
        
        .如果 (变量_717B0225.是否为空 ())
            参数_子元素组 [变量_757B0225].创建自ID (变量_727B0225 [变量_757B0225].取数值 (), m_self)
        .否则
            参数_子元素组 [变量_757B0225].创建自对象 (变量_717B0225)
        .如果结束
        
    .计次循环尾 ()
    返回 (变量_767B0225)
    

.子程序 取名称, 文本型, 公开, accName
    .局部变量 变量_777B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_777B0225.赋值 (m_id, )
        返回 (m_parent.读文本属性 (“accName”, 变量_777B0225))
    .否则
        变量_777B0225.赋值 (0, )
        返回 (m_self.读文本属性 (“accName”, 变量_777B0225))
    .如果结束
    

.子程序 置名称, 逻辑型, 公开, accName
    .参数 参数_名称, 文本型
    .局部变量 变量_797B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_797B0225.赋值 (m_id, )
        返回 (m_parent.写属性 (“accName”, 变量_797B0225, 参数_名称))
    .否则
        变量_797B0225.赋值 (0, )
        返回 (m_self.写属性 (“accName”, 变量_797B0225, 参数_名称))
    .如果结束
    

.子程序 取值, 文本型, 公开, accValue
    .局部变量 变量_7A7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_7A7B0225.赋值 (m_id, )
        返回 (m_parent.读文本属性 (“accValue”, 变量_7A7B0225))
    .否则
        变量_7A7B0225.赋值 (0, )
        返回 (m_self.读文本属性 (“accValue”, 变量_7A7B0225))
    .如果结束
    

.子程序 赋值, 逻辑型, 公开, accValue
    .参数 参数_值, 文本型
    .局部变量 变量_7C7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_7C7B0225.赋值 (m_id, )
        返回 (m_parent.写属性 (“accValue”, 变量_7C7B0225, 参数_值))
    .否则
        变量_7C7B0225.赋值 (0, )
        返回 (m_self.写属性 (“accValue”, 变量_7C7B0225, 参数_值))
    .如果结束
    

.子程序 取描述, 文本型, 公开, accDescription
    .局部变量 变量_7D7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_7D7B0225.赋值 (m_id, )
        返回 (m_parent.读文本属性 (“accDescription”, 变量_7D7B0225))
    .否则
        变量_7D7B0225.赋值 (0, )
        返回 (m_self.读文本属性 (“accDescription”, 变量_7D7B0225))
    .如果结束
    

.子程序 取角色, 整数型, 公开, accRole 返回 #ROLE_SYSTEM_ 常量之一
    .局部变量 变量_7E7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_7E7B0225.赋值 (m_id, )
        返回 (m_parent.读数值属性 (“accRole”, 变量_7E7B0225))
    .否则
        变量_7E7B0225.赋值 (0, )
        返回 (m_self.读数值属性 (“accRole”, 变量_7E7B0225))
    .如果结束
    

.子程序 取角色文本, 文本型, 公开, accRole 
    .局部变量 变量_7F7B0225, 变体型
    .局部变量 变量_807B0225, 整数型
    .局部变量 变量_817B0225, 文本型
    .局部变量 变量_827B0225, 整数型

    .如果 (m_id ≠ 0)
        变量_7F7B0225.赋值 (m_id, )
        变量_807B0225 ＝ m_parent.读数值属性 (“accRole”, 变量_7F7B0225)
    .否则
        变量_7F7B0225.赋值 (0, )
        变量_807B0225 ＝ m_self.读数值属性 (“accRole”, 变量_7F7B0225)
    .如果结束
    变量_827B0225 ＝ GetRoleText_int (变量_807B0225, 0, 0) ＋ 1
    变量_817B0225 ＝ 取空白文本 (变量_827B0225)
    GetRoleText (变量_807B0225, 变量_817B0225, 变量_827B0225)
    返回 (变量_817B0225)

.子程序 取状态, 整数型, 公开, accState 返回 #STATE_SYSTEM_ 常量组合
    .局部变量 变量_837B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_837B0225.赋值 (m_id, )
        返回 (m_parent.读数值属性 (“accState”, 变量_837B0225))
    .否则
        变量_837B0225.赋值 (0, )
        返回 (m_self.读数值属性 (“accState”, 变量_837B0225))
    .如果结束
    

.子程序 取状态文本, 文本型, 公开, GetStateText 
    .局部变量 变量_847B0225, 变体型
    .局部变量 变量_857B0225, 整数型
    .局部变量 变量_867B0225, 整数型
    .局部变量 变量_877B0225, 文本型
    .局部变量 变量_887B0225, 文本型
    .局部变量 变量_897B0225, 整数型

    .如果 (m_id ≠ 0)
        变量_847B0225.赋值 (m_id, )
        变量_857B0225 ＝ m_parent.读数值属性 (“accState”, 变量_847B0225)
    .否则
        变量_847B0225.赋值 (0, )
        变量_857B0225 ＝ m_self.读数值属性 (“accState”, 变量_847B0225)
    .如果结束
    
    .如果真 (变量_857B0225 ＝ #STATE_SYSTEM_NORMAL)
        变量_897B0225 ＝ GetStateText_int (变量_857B0225, 0, 0) ＋ 1
        变量_887B0225 ＝ 取空白文本 (变量_897B0225)
        GetStateText (变量_857B0225, 变量_887B0225, 变量_897B0225)
        返回 (变量_887B0225)
    .如果真结束
    
    变量_867B0225 ＝ #STATE_SYSTEM_UNAVAILABLE
    .循环判断首 ()
        .如果真 (位与 (变量_857B0225, 变量_867B0225) ≠ 0)
            变量_897B0225 ＝ GetStateText_int (变量_867B0225, 0, 0) ＋ 1
            变量_887B0225 ＝ 取空白文本 (变量_897B0225)
            GetStateText (变量_867B0225, 变量_887B0225, 变量_897B0225)
            变量_877B0225 ＝ 变量_877B0225 ＋ 变量_887B0225 ＋ “,”
        .如果真结束
        变量_867B0225 ＝ 左移 (变量_867B0225, 1)
    .循环判断尾 (变量_867B0225 ≤ #STATE_SYSTEM_ALERT_HIGH)
    返回 (变量_877B0225)
    

.子程序 取帮助, 文本型, 公开, accHelp
    .局部变量 变量_8A7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_8A7B0225.赋值 (m_id, )
        返回 (m_parent.读文本属性 (“accHelp”, 变量_8A7B0225))
    .否则
        变量_8A7B0225.赋值 (0, )
        返回 (m_self.读文本属性 (“accHelp”, 变量_8A7B0225))
    .如果结束
    

.子程序 取帮助主题, 整数型, 公开, accHelpTopic
    .局部变量 变量_8B7B0225, 变体型
    .局部变量 变量_8C7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_8B7B0225.赋值 (m_id, )
        返回 (m_parent.读数值属性 (“accHelpTopic”, 变量_8C7B0225, 变量_8B7B0225))
    .否则
        变量_8B7B0225.赋值 (0, )
        返回 (m_self.读数值属性 (“accHelpTopic”, 变量_8C7B0225, 变量_8B7B0225))
    .如果结束
    

.子程序 取快捷键, 文本型, 公开, accKeyboardShortcut
    .局部变量 变量_8D7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_8D7B0225.赋值 (m_id, )
        返回 (m_parent.读文本属性 (“accKeyboardShortcut”, 变量_8D7B0225))
    .否则
        变量_8D7B0225.赋值 (0, )
        返回 (m_self.读文本属性 (“accKeyboardShortcut”, 变量_8D7B0225))
    .如果结束
    

.子程序 取默认动作, 文本型, 公开, accDefaultAction
    .局部变量 变量_8E7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_8E7B0225.赋值 (m_id, )
        返回 (m_parent.读文本属性 (“accDefaultAction”, 变量_8E7B0225))
    .否则
        变量_8E7B0225.赋值 (0, )
        返回 (m_self.读文本属性 (“accDefaultAction”, 变量_8E7B0225))
    .如果结束
    

.子程序 取焦点元素, 逻辑型, 公开, accFocus
    .参数 参数_焦点元素, 类_Accessible, 参考
    .局部变量 变量_907B0225, 变体型

    .如果 (m_id ＝ 0)
        变量_907B0225 ＝ m_self.读属性 (“accFocus”, )
        .如果真 (变量_907B0225.取类型 () ＝ #变体类型.空)
            返回 (假)
        .如果真结束
        .如果 (变量_907B0225.取类型 () ＝ #变体类型.数值型)
            参数_焦点元素.创建自ID (变量_907B0225.取数值 (), m_self)
        .否则
            参数_焦点元素.创建自对象 (变量_907B0225.取对象 ())
        .如果结束
        
    .否则
        变量_907B0225 ＝ m_parent.读属性 (“accFocus”, )
        .如果真 (变量_907B0225.取类型 () ＝ #变体类型.空)
            返回 (假)
        .如果真结束
        .如果 (变量_907B0225.取类型 () ＝ #变体类型.数值型)
            参数_焦点元素.创建自ID (变量_907B0225.取数值 (), m_parent)
        .否则
            参数_焦点元素.创建自对象 (变量_907B0225.取对象 ())
        .如果结束
        
    .如果结束
    
    返回 (取反 (参数_焦点元素.是否空 ()))
    

.子程序 取选择元素, 逻辑型, 公开, accSelection
    .参数 参数_选择元素, 类_Accessible, 参考
    .局部变量 变量_927B0225, 变体型

    .如果 (m_id ＝ 0)
        变量_927B0225 ＝ m_self.读属性 (“accSelection”, )
        .如果真 (变量_927B0225.取类型 () ＝ #变体类型.空)
            返回 (假)
        .如果真结束
        .如果 (变量_927B0225.取类型 () ＝ #变体类型.数值型)
            参数_选择元素.创建自ID (变量_927B0225.取数值 (), m_self)
        .否则
            参数_选择元素.创建自对象 (变量_927B0225.取对象 ())
        .如果结束
        
    .否则
        变量_927B0225 ＝ m_parent.读属性 (“accSelection”, )
        .如果真 (变量_927B0225.取类型 () ＝ #变体类型.空)
            返回 (假)
        .如果真结束
        .如果 (变量_927B0225.取类型 () ＝ #变体类型.数值型)
            参数_选择元素.创建自ID (变量_927B0225.取数值 (), m_parent)
        .否则
            参数_选择元素.创建自对象 (变量_927B0225.取对象 ())
        .如果结束
        
    .如果结束
    
    返回 (取反 (参数_选择元素.是否空 ()))
    

.子程序 选择元素, , 公开, accSelect
    .参数 参数_标志, 整数型, , #SELFLAG_ 常量组合
    .参数 参数_被选择元素, 类_Accessible, 可空, 如果为空则表示自身被选择
    .局部变量 变量_957B0225, 变体型

    .如果 (是否为空 (参数_被选择元素))
        变量_957B0225.赋值 (0, )
    .否则
        变量_957B0225 ＝ 参数_被选择元素.到变体型 ()
    .如果结束
    
    .如果 (m_id ＝ 0)
        m_self.方法 (“accSelect”, 参数_标志, 变量_957B0225)
    .否则
        m_parent.方法 (“accSelect”, 参数_标志, 变量_957B0225)
    .如果结束
    

.子程序 取位置, , 公开, accLocation
    .参数 参数_左边, 整数型, 参考
    .参数 参数_顶边, 整数型, 参考
    .参数 参数_宽度, 整数型, 参考
    .参数 参数_高度, 整数型, 参考
    .局部变量 变量_9A7B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_9A7B0225.赋值 (m_id, )
        m_parent.方法 (“accLocation”, 参数_左边, 参数_顶边, 参数_宽度, 参数_高度, 变量_9A7B0225)
    .否则
        变量_9A7B0225.赋值 (0, )
        m_self.方法 (“accLocation”, 参数_左边, 参数_顶边, 参数_宽度, 参数_高度, 变量_9A7B0225)
    .如果结束
    

.子程序 导航, 逻辑型, 公开, accNavigate
    .参数 参数_标志, 整数型, , #NAVDIR_ 常量之一
    .参数 参数_开始元素, 类_Accessible, 可空
    .参数 参数_返回元素, 类_Accessible, 参考
    .局部变量 变量_9E7B0225, 变体型
    .局部变量 变量_9F7B0225, 变体型

    变量_9E7B0225 ＝ 参数_开始元素.到变体型 ()
    .如果 (m_id ≠ 0)
        变量_9F7B0225 ＝ m_parent.通用方法 (“accNavigate”, 参数_标志, 变量_9E7B0225)
        .如果 (变量_9F7B0225.取类型 () ＝ #变体类型.数值型)
            参数_返回元素.创建自ID (变量_9F7B0225.取数值 (), m_parent)
        .否则
            参数_返回元素.创建自对象 (变量_9F7B0225.取对象 ())
        .如果结束
        
    .否则
        变量_9F7B0225 ＝ m_self.通用方法 (“accNavigate”, 参数_标志, 变量_9E7B0225)
        .如果 (变量_9F7B0225.取类型 () ＝ #变体类型.数值型)
            参数_返回元素.创建自ID (变量_9F7B0225.取数值 (), m_self)
        .否则
            参数_返回元素.创建自对象 (变量_9F7B0225.取对象 ())
        .如果结束
        
    .如果结束
    返回 (取反 (参数_返回元素.是否空 ()))
    

.子程序 命中测试, 逻辑型, 公开, accHitTest
    .参数 参数_左边, 整数型
    .参数 参数_顶边, 整数型
    .参数 参数_元素, 类_Accessible, 参考
    .局部变量 变量_A37B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_A37B0225 ＝ m_parent.通用方法 (“accHitTest”, 参数_左边, 参数_顶边)
    .否则
        变量_A37B0225 ＝ m_self.通用方法 (“accHitTest”, 参数_左边, 参数_顶边)
    .如果结束
    
    .如果真 (变量_A37B0225.取类型 () ＝ #变体类型.空)
        返回 (假)
    .如果真结束
    
    .如果真 (变量_A37B0225.取类型 () ＝ #变体类型.数值型)
        .如果 (变量_A37B0225.取数值 () ＝ 0)
            参数_元素.创建自对象 (m_self)
        .否则
            参数_元素.创建自ID (变量_A37B0225.取数值 (), m_self)
        .如果结束
        返回 (真)
    .如果真结束
    
    .如果真 (变量_A37B0225.取类型 () ＝ #变体类型.对象型)
        参数_元素.创建自对象 (变量_A37B0225.取对象 ())
        返回 (真)
    .如果真结束
    返回 (假)
    
    

.子程序 执行默认动作, , 公开, accDoDefaultAction
    .局部变量 变量_A47B0225, 变体型

    .如果 (m_id ≠ 0)
        变量_A47B0225.赋值 (m_id, )
        m_parent.方法 (“accDoDefaultAction”, 变量_A47B0225)
    .否则
        变量_A47B0225.赋值 (0, )
        m_self.方法 (“accDoDefaultAction”, 变量_A47B0225)
    .如果结束
    

.子程序 取窗口句柄, 整数型, 公开
    .局部变量 变量_A57B0225, 整数型
    .局部变量 变量_A67B0225, 整数型

    .如果 (m_id ≠ 0)
        变量_A57B0225 ＝ _取对象指针 (m_parent)
    .否则
        变量_A57B0225 ＝ _取对象指针 (m_self)
    .如果结束
    .如果真 (SEH_安装简单SEH ())
        WindowFromAccessibleObject (变量_A57B0225, 变量_A67B0225)
        SEH_删除简单SEH ()
    .如果真结束
    返回 (变量_A67B0225)

.子程序 获取对象, , 公开
    .参数 参_对象m_parent, 对象, 参考
    .参数 参_对象m_self, 对象, 参考

    参_对象m_parent ＝ m_parent
    参_对象m_self ＝ m_self
    

