.版本 2

.程序集 COM
.子程序 COM_bstr_t, 整数型, 公开
    .参数 _bstr_t, 文本型

    返回 (DLL_SysAllocString (编码_Ansi到Unicode (_bstr_t)))

.子程序 COM_QueryInterface, 整数型, 公开
    .参数 this_, 整数型
    .参数 refiid_, 整数型
    .参数 pvoid_, 整数型, 参考
    .局部变量 变量_60D40125, 整数型

    变量_60D40125 ＝ 0
    置入代码 (#图片资源_69D40128)
    返回 (0)

.子程序 COM_AddRef, 整数型, 公开
    .参数 this_, 整数型
    .局部变量 变量_62D40125, 整数型

    变量_62D40125 ＝ 1
    置入代码 (#图片资源_69D40128)
    返回 (0)

.子程序 COM_Release, 整数型, 公开
    .参数 this_, 整数型
    .局部变量 变量_64D40125, 整数型

    变量_64D40125 ＝ 2
    置入代码 (#图片资源_69D40128)
    返回 (0)

.子程序 _GetMethodAddr, 整数型
    .参数 变量_81D40125, 整数型
    .参数 变量_82D40125, 整数型
    .局部变量 变量_83D40125, 整数型

    变量_83D40125 ＝ 取字节集数据 (指针到字节集 (变量_81D40125, 4), #整数型, )
    变量_83D40125 ＝ 变量_83D40125 ＋ 变量_82D40125 × 4
    变量_83D40125 ＝ 取字节集数据 (指针到字节集 (变量_83D40125, 4), #整数型, )
    返回 (变量_83D40125)

.子程序 COM_调用COM方法, 整数型, 公开
    .参数 pThis, 整数型
    .参数 Index, 整数型, , 索引从1开始
    .参数 arg1, 整数型, 可空
    .参数 arg2, 整数型, 可空
    .参数 arg3, 整数型, 可空
    .参数 arg4, 整数型, 可空
    .参数 arg5, 整数型, 可空
    .参数 arg6, 整数型, 可空
    .参数 arg7, 整数型, 可空
    .参数 arg8, 整数型, 可空
    .参数 arg9, 整数型, 可空
    .参数 arg10, 整数型, 可空
    .局部变量 变量_7CD40125, 整数型, , "0"

    加入成员 (变量_7CD40125, pThis)
    .计次循环首 (1, )
        .如果 (是否为空 (arg1))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg1)
        .如果结束
        .如果 (是否为空 (arg2))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg2)
        .如果结束
        .如果 (是否为空 (arg3))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg3)
        .如果结束
        .如果 (是否为空 (arg4))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg4)
        .如果结束
        .如果 (是否为空 (arg5))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg5)
        .如果结束
        .如果 (是否为空 (arg6))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg6)
        .如果结束
        .如果 (是否为空 (arg7))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg7)
        .如果结束
        .如果 (是否为空 (arg8))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg8)
        .如果结束
        .如果 (是否为空 (arg9))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg9)
        .如果结束
        .如果 (是否为空 (arg10))
            跳出循环 ()
        .否则
            加入成员 (变量_7CD40125, arg10)
        .如果结束
        
    .计次循环尾 ()
    返回 (CallWindowProcA (取指针_字节集型 (#图片资源_3BD40128), _GetMethodAddr (pThis, Index), 取数据_通用型_数组 (变量_7CD40125), 取数组成员数 (变量_7CD40125), 0))

.子程序 COM_StringToCLSID, GUID, 公开
    .参数 参数_文本, 文本型
    .局部变量 变量_44B00225, GUID

    DLL_CLSIDFromString3 (编码_Ansi到Unicode (参数_文本, ), 变量_44B00225)
    返回 (变量_44B00225)
    

.子程序 COM_StringtoIID, GUID, 公开, 把COM中的接口名转换成接口标识GUID结构
    .参数 接口类型, 文本型
    .局部变量 变量_92D40125, GUID
    .局部变量 变量_93D40125, 整数型

    变量_93D40125 ＝ DLL_IIDFromString (编码_Ansi到Unicode (接口类型), 变量_92D40125)
    返回 (变量_92D40125)

.子程序 取对象指针, 整数型, 公开
    .参数 对象数据, 对象
    .局部变量 变量_94E00125, 整数型

    CopyMemory_objcet2int (变量_94E00125, 对象数据, 4)
    返回 (变量_94E00125)

.子程序 取变体型指针, 整数型, 公开
    .参数 变体型, 变体型

    返回 (lstrcat_int2variant (变体型, 0))

.子程序 COM_连接命名空间, 整数型, 公开, 成功返回一个IWbemServices类指针，失败返回零。
    .参数 名字空间, 文本型, , 如“root\CIMV2”
    .局部变量 变量_1EE60125, GUID
    .局部变量 变量_1FE60125, GUID
    .局部变量 变量_20E60125, 整数型
    .局部变量 变量_31E60125, 整数型
    .局部变量 变量_32E60125, 整数型
    .局部变量 变量_EBE90125, 整数型

    CoInitialize (#NULL)
    DLL_CoInitializeSecurity (0, -1, 0, 0, 0, 3, 0, 0, 0)
    变量_1EE60125 ＝ COM_StringToCLSID (“{4590f811-1d3a-11d0-891f-00aa004b2e24}”)
    变量_1FE60125 ＝ COM_StringtoIID (“{dc12a687-737f-11cf-884d-00aa004b2e24}”)
    变量_20E60125 ＝ DLL_CoCreateInstance2 (变量_1EE60125, 0, 1, 变量_1FE60125, 变量_31E60125)
    .如果真 (变量_20E60125 ＝ 0)
        变量_EBE90125 ＝ COM_bstr_t (名字空间)
        变量_20E60125 ＝ IWbemLocator_ConnectServer (变量_31E60125, 变量_EBE90125, 0, 0, 0, 0, 0, 0, 变量_32E60125)
        DLL_SysFreeString (变量_EBE90125)
        .如果 (变量_20E60125 ＝ 0)
            变量_20E60125 ＝ DLL_CoSetProxyBlanket (变量_32E60125, 10, 0, 0, 3, 3, 0, 0)
            COM_Release (变量_31E60125)
            返回 (变量_32E60125)
        .否则
            输出调试文本 (“Windows Management Instrumentation 服务已禁用，请启动后重试！”)
        .如果结束
        
    .如果真结束
    CoUninitialize ()
    返回 (0)

.子程序 IWbemLocator_ConnectServer, 整数型
    .参数 变量_67E90125, 整数型
    .参数 变量_5EE90125, 整数型
    .参数 变量_5FE90125, 整数型
    .参数 变量_60E90125, 整数型
    .参数 变量_61E90125, 整数型
    .参数 变量_62E90125, 整数型
    .参数 变量_63E90125, 整数型
    .参数 变量_64E90125, 整数型
    .参数 变量_65E90125, 整数型, 参考
    .局部变量 变量_66E90125, 整数型

    变量_66E90125 ＝ 3
    置入代码 ({ 139, 69, 8, 139, 0, 107, 77, 252, 4, 3, 193, 131, 196, 4, 93, 255, 32 })
    返回 (0)

.子程序 IEnumVARIANT_Next, 整数型
    .参数 变量_37E60125, 整数型
    .参数 变量_38E60125, 整数型
    .参数 变量_39E60125, 整数型
    .参数 变量_3AE60125, 整数型, 参考
    .局部变量 变量_3BE60125, 整数型

    变量_3BE60125 ＝ 3
    置入代码 ({ 139, 69, 8, 139, 0, 107, 77, 252, 4, 3, 193, 131, 196, 4, 93, 255, 32 })
    返回 (0)

.子程序 IWbemServices_ExecQuery, 整数型
    .参数 变量_3CE60125, 整数型
    .参数 变量_3DE60125, 整数型
    .参数 变量_3EE60125, 整数型
    .参数 变量_3FE60125, 整数型
    .参数 变量_40E60125, 整数型
    .参数 变量_41E60125, 整数型, 参考
    .局部变量 变量_42E60125, 整数型

    变量_42E60125 ＝ 20
    置入代码 ({ 139, 69, 8, 139, 0, 107, 77, 252, 4, 3, 193, 131, 196, 4, 93, 255, 32 })
    返回 (0)

.子程序 IEnumWbemClassObject_Next, 整数型
    .参数 变量_43E60125, 整数型
    .参数 变量_44E60125, 整数型
    .参数 变量_45E60125, 整数型
    .参数 变量_46E60125, 整数型, 参考
    .参数 变量_47E60125, 整数型, 参考
    .局部变量 变量_48E60125, 整数型

    变量_48E60125 ＝ 4
    置入代码 ({ 139, 69, 8, 139, 0, 107, 77, 252, 4, 3, 193, 131, 196, 4, 93, 255, 32 })
    返回 (0)

.子程序 IWbemClassObject_Get, 整数型
    .参数 变量_49E60125, 整数型
    .参数 变量_4AE60125, 整数型
    .参数 变量_4BE60125, 整数型
    .参数 变量_4CE60125, 整数型
    .参数 变量_4DE60125, 整数型, 参考
    .参数 变量_4EE60125, 整数型, 参考
    .局部变量 变量_4FE60125, 整数型

    变量_4FE60125 ＝ 4
    置入代码 ({ 139, 69, 8, 139, 0, 107, 77, 252, 4, 3, 193, 131, 196, 4, 93, 255, 32 })
    返回 (0)

.子程序 查询类属性, 变体型
    .参数 变量_51E60125, 文本型
    .参数 变量_52E60125, 文本型
    .局部变量 变量_53E60125, 整数型
    .局部变量 变量_54E60125, 整数型
    .局部变量 变量_55E60125, 整数型
    .局部变量 变量_56E60125, 整数型
    .局部变量 变量_57E60125, 变体型
    .局部变量 变量_58E60125, 整数型
    .局部变量 变量_F3E90125, 整数型
    .局部变量 变量_F4E90125, 整数型
    .局部变量 变量_F5E90125, 整数型

    变量_53E60125 ＝ COM_连接命名空间 (“root\CIMV2”)
    .如果真 (变量_53E60125 ＞ 0)
        变量_F3E90125 ＝ COM_bstr_t (“WQL”)
        变量_F4E90125 ＝ COM_bstr_t (变量_51E60125)
        变量_54E60125 ＝ IWbemServices_ExecQuery (变量_53E60125, 变量_F3E90125, 变量_F4E90125, 位或 (32, 16), 0, 变量_56E60125)
        .如果真 (变量_54E60125 ＝ 0)
            .循环判断首 ()
                变量_54E60125 ＝ IEnumWbemClassObject_Next (变量_56E60125, 2000, 1, 变量_55E60125, 变量_58E60125)
                .如果真 (变量_54E60125 ＝ 0)
                    变量_F5E90125 ＝ COM_bstr_t (变量_52E60125)
                    变量_54E60125 ＝ IWbemClassObject_Get (变量_55E60125, 变量_F5E90125, 0, 取变体型指针 (变量_57E60125), 0, 0)
                    DLL_SysFreeString (变量_F5E90125)
                    COM_Release (变量_55E60125)
                .如果真结束
                
            .循环判断尾 (变量_58E60125 ＝ 1)
            COM_Release (变量_56E60125)
        .如果真结束
        COM_Release (变量_53E60125)
        DLL_SysFreeString (变量_F3E90125)
        DLL_SysFreeString (变量_F4E90125)
    .如果真结束
    返回 (变量_57E60125)

