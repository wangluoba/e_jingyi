.版本 2

.程序集 集_rar解压缩
.程序集变量 类变量_1C5C0215, 文本型

.子程序 rar_初始化, 逻辑型, 公开, 使用解压缩前先调用一次该命令初始化获取rar.exe所在路径，成功初始化返回真，失败返回假。
    .参数 rar所在路径, 文本型, 可空, 请传入完整路径，如果传入为空，则检测当前目录是否存在rar.exe文件，若不存在，则返回假。该文件可以在此地址下载：http://ec.125.la/source/plugin/plugin1/upload/rar.exe
    .参数 rar主程序文件名, 文本型, 可空, 默认文件名为“rar.exe”，如果你想自定义文件名可以传入内容，比如传入“myrar.exe”，同时修改主程序的文件名，否则留空即可。
    .局部变量 变量_F1D30225, 文本型

    rar主程序文件名 ＝ 删首尾空 (rar主程序文件名)
    .如果真 (是否为空 (rar主程序文件名) 或 rar主程序文件名 ＝ “”)
        rar主程序文件名 ＝ “rar.exe”
    .如果真结束
    
    rar所在路径 ＝ 删首尾空 (rar所在路径)
    .如果 (是否为空 (rar所在路径) 或 rar所在路径 ＝ “”)
        .如果 (文件是否存在 (取运行目录 () ＋ “\” ＋ rar主程序文件名))
            类变量_1C5C0215 ＝ 取运行目录 () ＋ “\” ＋ rar主程序文件名
            返回 (真)
        .否则
            变量_F1D30225 ＝ 程序_取安装目录 (“WinRAR.exe”)
            .如果真 (变量_F1D30225 ≠ “” 且 文件是否存在 (变量_F1D30225 ＋ rar主程序文件名))
                类变量_1C5C0215 ＝ 变量_F1D30225 ＋ rar主程序文件名
                返回 (真)
            .如果真结束
            
        .如果结束
        
    .否则
        类变量_1C5C0215 ＝ rar所在路径
        .如果真 (文件是否存在 (类变量_1C5C0215))
            返回 (真)
        .如果真结束
        
    .如果结束
    
    
    类变量_1C5C0215 ＝ “”
    返回 (假)

.子程序 rar_压缩, 文本型, 公开, 压缩文件或文件夹，若成功返回空文本，失败则返回错误提示。
    .参数 被压缩的文件, 文本型, , 文件或文件夹都可以
    .参数 压缩到的路径, 文本型, , 全路径和rar/zip文件名，填入完整的路径，该路径所在文件夹必须存在，否则会失败
    .参数 压缩密码, 文本型, 可空, 设置压缩密码
    .参数 注释地址, 文本型, 可空, 注释文本文件的完整路径，以txt结尾
    .参数 是否等待, 逻辑型, 可空, 默认为假，不等待，为真则为等待压缩完毕
    .参数 是否显示压缩过程, 逻辑型, 可空, 默认为假，不显示
    .参数 压缩程度, 整数型, 可空, 范围为1-5,1的压缩程度最小，5压缩程度最大，但时间最久。默认为3，如果传值不正确也为3
    .局部变量 变量_265C0225, 整数型
    .局部变量 变量_275C0225, 整数型, , "5"
    .局部变量 变量_285C0225, 整数型

    .如果真 (类变量_1C5C0215 ＝ “”)
        返回 (“rar路径不存在，请确认是否初始化成功”)
    .如果真结束
    
    .如果真 (是否为空 (压缩程度))
        压缩程度 ＝ 3
    .如果真结束
    
    .如果真 (压缩程度 ＜ 1 或 压缩程度 ＞ 5)
        压缩程度 ＝ 3
    .如果真结束
    
    .如果真 (是否为空 (是否显示压缩过程))
        是否显示压缩过程 ＝ 假
    .如果真结束
    
    .判断开始 (是否显示压缩过程 ＝ 真)
        变量_265C0225 ＝ #显示rar窗口
    .默认
        变量_265C0225 ＝ #隐藏rar窗口
    .判断结束
    
    .判断开始 (压缩密码 ＝ “”)
        .判断开始 (注释地址 ＝ “”)
            
            运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ a -m” ＋ 到文本 (压缩程度) ＋ “ -ep1 -scul -r0 -iext -o+ ” ＋ #引号 ＋ 压缩到的路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 被压缩的文件 ＋ #引号, 是否等待, 变量_265C0225)
        .默认
            
            运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ a -m” ＋ 到文本 (压缩程度) ＋ “ -ep1 -scul -r0 -iext -o+ -z” ＋ #引号 ＋ 注释地址 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 压缩到的路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 被压缩的文件 ＋ #引号, 是否等待, 变量_265C0225)
        .判断结束
        
        
    .判断 (注释地址 ＝ “”)
        
        运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ a -m” ＋ 到文本 (压缩程度) ＋ “ -ep1 -scul -r0 -iext -o+ ” ＋ #引号 ＋ 压缩到的路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 被压缩的文件 ＋ #引号 ＋ “ -p” ＋ 压缩密码, 是否等待, 变量_265C0225)
    .默认
        
        
        运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ a -m” ＋ 到文本 (压缩程度) ＋ “ -ep1 -scul -r0 -iext -o+ -z” ＋ #引号 ＋ 注释地址 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 压缩到的路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 被压缩的文件 ＋ #引号 ＋ “ -p” ＋ 压缩密码, 是否等待, 变量_265C0225)
        
    .判断结束
    返回 (“”)
    
    

.子程序 rar_解压, 文本型, 公开, 解压压缩包，成功返回空文本，失败返回错误提示。
    .参数 压缩文件完整路径, 文本型, , 全路径带上rar/zip文件名
    .参数 解压到的文件夹, 文本型, , 文件夹全路径
    .参数 解压密码, 文本型, 可空, 压缩时设定的解压密码
    .参数 是否覆盖已存在的文件, 逻辑型, 可空, 默认为假
    .参数 是否等待, 逻辑型, 可空, 是否等待解压完毕，默认为假，为真则解压完成后才运行后面的代码
    .参数 是否显示解压过程, 逻辑型, 可空, 默认为假，不显示
    .局部变量 变量_2F5C0225, 整数型

    .如果真 (类变量_1C5C0215 ＝ “”)
        返回 (“rar路径不存在，请确认是否初始化成功”)
    .如果真结束
    
    .如果真 (是否为空 (是否覆盖已存在的文件))
        是否覆盖已存在的文件 ＝ 假
    .如果真结束
    .如果真 (是否为空 (是否显示解压过程))
        是否显示解压过程 ＝ 假
    .如果真结束
    
    .判断开始 (是否显示解压过程 ＝ 真)
        变量_2F5C0225 ＝ #显示rar窗口
    .默认
        变量_2F5C0225 ＝ #隐藏rar窗口
    .判断结束
    
    
    .判断开始 (解压密码 ＝ “”)
        .判断开始 (是否覆盖已存在的文件 ＝ 假)
            
            运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ x -iext -ow -o- ” ＋ #引号 ＋ 压缩文件完整路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 解压到的文件夹 ＋ #引号, 是否等待, 变量_2F5C0225)
        .默认
            
            运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ x -iext -ow -o+ ” ＋ #引号 ＋ 压缩文件完整路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 解压到的文件夹 ＋ #引号, 是否等待, 变量_2F5C0225)
        .判断结束
        
    .判断 (是否覆盖已存在的文件 ＝ 假)
        
        运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ x -iext -ow -o- ” ＋ #引号 ＋ 压缩文件完整路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 解压到的文件夹 ＋ #引号 ＋ “ -p” ＋ 解压密码, 是否等待, 变量_2F5C0225)
    .默认
        
        运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ x -iext -ow -o+ ” ＋ #引号 ＋ 压缩文件完整路径 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 解压到的文件夹 ＋ #引号 ＋ “ -p” ＋ 解压密码, 是否等待, 变量_2F5C0225)
    .判断结束
    
    返回 (“”)

.子程序 rar_添加文件注释, 文本型, 公开, 给已经压缩好的压缩文件添加注释 成功返回空文本，失败返回错误提示。
    .参数 压缩文件完整路径, 文本型, , 压缩文件全路径，rar/zip
    .参数 注释文件地址, 文本型, , 以txt结尾的完整路径
    .参数 是否等待, 逻辑型, 可空, 默认为假，不等待
    .参数 是否显示过程, 逻辑型, 可空, 默认为假，不显示
    .局部变量 变量_345C0225, 整数型

    .如果真 (类变量_1C5C0215 ＝ “”)
        返回 (“rar路径不存在，请确认是否初始化成功”)
    .如果真结束
    
    .如果真 (是否为空 (是否显示过程))
        是否显示过程 ＝ 假
    .如果真结束
    
    .判断开始 (是否显示过程 ＝ 真)
        变量_345C0225 ＝ #显示rar窗口
    .默认
        变量_345C0225 ＝ #隐藏rar窗口
    .判断结束
    
    运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ c ” ＋ #引号 ＋ 压缩文件完整路径 ＋ #引号 ＋ “ -z” ＋ #引号 ＋ 注释文件地址 ＋ #引号, 是否等待, 变量_345C0225)
    返回 (“”)

.子程序 rar_删除压缩包内的文件, 文本型, 公开, 删除压缩包里面的文件，成功返回空文本，失败返回错误提示。
    .参数 压缩文件, 文本型, , 压缩文件全路径 rar/zip
    .参数 要删除的文件名, 文本型, , 文件名不能带路径，但是要带后缀，如果是最后一个文件，那么整个压缩包会被删除
    .参数 是否等待, 逻辑型, 可空, 默认为假，不等待
    .参数 是否显示过程, 逻辑型, 可空, 默认为假，不显示
    .局部变量 变量_395C0225, 整数型

    .如果真 (类变量_1C5C0215 ＝ “”)
        返回 (“rar路径不存在，请确认是否初始化成功”)
    .如果真结束
    
    .如果真 (是否为空 (是否显示过程))
        是否显示过程 ＝ 假
    .如果真结束
    
    .判断开始 (是否显示过程 ＝ 真)
        变量_395C0225 ＝ #显示rar窗口
    .默认
        变量_395C0225 ＝ #隐藏rar窗口
    .判断结束
    
    运行 (#引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ d ” ＋ #引号 ＋ 压缩文件 ＋ #引号 ＋ “ ” ＋ #引号 ＋ 要删除的文件名 ＋ #引号, 是否等待, 变量_395C0225)
    返回 (“”)

.子程序 rar_测试文件, 逻辑型, 公开, 测试压缩包密码是否正确
    .参数 压缩文件, 文本型
    .参数 密码, 文本型, 可空
    .局部变量 变量_61D30225, 文本型
    .局部变量 变量_65D30225, 文本型
    .局部变量 变量_3CCA0225, 文本型

    变量_61D30225 ＝ 文件_取目录 (类变量_1C5C0215)
    .如果真 (密码 ≠ “”)
        变量_65D30225 ＝ “ -p” ＋ 密码
    .如果真结束
    变量_3CCA0225 ＝ 系统_取DOS执行结果 (“cd ” ＋ #引号 ＋ 变量_61D30225 ＋ #引号 ＋ “&” ＋ #引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ t ” ＋ #引号 ＋ 压缩文件 ＋ #引号 ＋ 变量_65D30225)
    返回 (倒找文本 (变量_3CCA0225, “全部成功”, , 真) ＞ -1)

.子程序 rar_取压缩包内的文件数量, 整数型, 公开
    .参数 压缩文件, 文本型
    .参数 密码, 文本型, 可空
    .局部变量 变量_6CD30225, 文本型
    .局部变量 变量_6DD30225, 文本型
    .局部变量 变量_6ED30225, 文本型

    变量_6CD30225 ＝ 文件_取目录 (类变量_1C5C0215)
    .如果真 (密码 ≠ “”)
        变量_6DD30225 ＝ “ -p” ＋ 密码
    .如果真结束
    变量_6ED30225 ＝ 系统_取DOS执行结果 (“cd ” ＋ #引号 ＋ 变量_6CD30225 ＋ #引号 ＋ “&” ＋ #引号 ＋ 类变量_1C5C0215 ＋ #引号 ＋ “ v ” ＋ #引号 ＋ 压缩文件 ＋ #引号 ＋ 变量_6DD30225)
    变量_6ED30225 ＝ 文本_取右边 (变量_6ED30225, “-” ＋ #换行符, , )
    返回 (到整数 (变量_6ED30225))

