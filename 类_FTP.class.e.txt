.版本 2

.程序集 类_FTP, , 公开
.程序集变量 初始句柄, 整数型
.程序集变量 连接句柄, 整数型

.子程序 是否已连接, 逻辑型, 公开, 判断FTP是否已连接服务器；
    返回 (连接句柄 ≠ 0)

.子程序 连接FTP服务器, 逻辑型, 公开, 连接FTP服务器；
    .参数 FTP服务器地址, 文本型
    .参数 用户名, 文本型, 可空
    .参数 密码, 文本型, 可空
    .参数 端口号, 整数型, 可空
    .参数 是否被动模式, 逻辑型, 可空
    .局部变量 变量_73590225, 整数型

    .如果真 (是否为空 (用户名))
        用户名 ＝ “anonymous”
    .如果真结束
    .如果真 (是否为空 (密码))
        密码 ＝ 字符 (0)
    .如果真结束
    .如果真 (是否为空 (端口号))
        端口号 ＝ 21
    .如果真结束
    初始句柄 ＝ InternetOpenA (字符 (0), 1, 字符 (0), 字符 (0), 0)
    变量_73590225 ＝ 0
    .如果真 (是否被动模式)
        变量_73590225 ＝ 位或 (变量_73590225, #INTERNET_FLAG_PASSIVE)
    .如果真结束
    连接句柄 ＝ InternetConnectA (初始句柄, FTP服务器地址, 端口号, 用户名, 密码, 1, 变量_73590225, 0)
    .如果真 (连接句柄 ≠ 0)
        返回 (真)
    .如果真结束
    断开FTP服务器 ()
    返回 (假)

.子程序 断开FTP服务器, 逻辑型, 公开, 断开FTP服务器；
    .局部变量 变量_B3C00125, 逻辑型

    .如果真 (连接句柄 ≠ #NULL)
        变量_B3C00125 ＝ InternetCloseHandle (连接句柄)
    .如果真结束
    .如果真 (变量_B3C00125)
        连接句柄 ＝ 0
    .如果真结束
    .如果真 (初始句柄 ≠ #NULL)
        变量_B3C00125 ＝ InternetCloseHandle (初始句柄)
    .如果真结束
    返回 (变量_B3C00125)

.子程序 目录创建, 逻辑型, 公开, 在FTP上创建目录；
    .参数 欲创建的目录名, 文本型, , 欲创建的目录名；

    .如果真 (连接句柄 ≠ 0)
        返回 (FtpCreateDirectoryA (连接句柄, 欲创建的目录名))
    .如果真结束
    返回 (假)

.子程序 目录删除, 逻辑型, 公开, 删除FTP上指定的目录；
    .参数 欲删除的目录名, 文本型, , 欲删除的目录名；

    .如果真 (连接句柄 ≠ 0)
        返回 (FtpRemoveDirectoryA (连接句柄, 欲删除的目录名))
    .如果真结束
    返回 (假)

.子程序 目录下载, 逻辑型, 公开, 下载FTP上指定的目录；
    .参数 欲下载的FTP目录, 文本型, , 欲下载的FTP目录名；
    .参数 本地目录, 文本型, , 注意，本地目录必须存在；
    .参数 是否使用ASCII码方式, 逻辑型, 可空
    .参数 错误信息, 文本型, 参考 数组, 返回下载
    .局部变量 变量_B9C00125, 文本型, , "0"
    .局部变量 变量_BAC00125, 整数型, , "0"
    .局部变量 变量_BBC00125, 整数型

    .如果真 (目录_是否存在 (本地目录) ＝ 假)
        目录_创建 (本地目录)
    .如果真结束
    .如果真 (连接句柄 ＝ 0 或 PathIsDirectoryA (本地目录) ≠ 16)
        返回 (假)
    .如果真结束
    .计次循环首 (目录列表 (欲下载的FTP目录, , 变量_B9C00125, 变量_BAC00125, , ), 变量_BBC00125)
        .如果真 (位与 (变量_BAC00125 [变量_BBC00125], 16) ＝ 0)
            .如果真 (文件下载 (欲下载的FTP目录 ＋ “/” ＋ 变量_B9C00125 [变量_BBC00125], 本地目录 ＋ “\” ＋ 变量_B9C00125 [变量_BBC00125], 是否使用ASCII码方式) ＝ 假)
                加入成员 (错误信息, 欲下载的FTP目录 ＋ “/” ＋ 变量_B9C00125 [变量_BBC00125])
            .如果真结束
            到循环尾 ()
        .如果真结束
        .如果真 (变量_B9C00125 [变量_BBC00125] ＝ “.” 或 变量_B9C00125 [变量_BBC00125] ＝ “..”)
            到循环尾 ()
        .如果真结束
        .如果真 (目录下载 (欲下载的FTP目录 ＋ “/” ＋ 变量_B9C00125 [变量_BBC00125], 本地目录 ＋ “\” ＋ 变量_B9C00125 [变量_BBC00125], 是否使用ASCII码方式, 错误信息) ＝ 假)
            加入成员 (错误信息, 欲下载的FTP目录 ＋ “/” ＋ 变量_B9C00125 [变量_BBC00125])
        .如果真结束
        处理事件 ()
    .计次循环尾 ()
    返回 (变量_BBC00125 ≠ 0 且 取数组成员数 (变量_B9C00125) ＝ 变量_BBC00125 － 1)

.子程序 目录上传, 逻辑型, 公开, 上传指定目录到FTP上；
    .参数 欲上传的本地目录, 文本型
    .参数 FTP目录路径, 文本型, , 目录要存在。
    .参数 是否使用ASCII码方式, 逻辑型, 可空
    .局部变量 变量_BFC00125, 文本型
    .局部变量 变量_C0C00125, 文本型, , "0"
    .局部变量 变量_C1C00125, 整数型

    .如果真 (目录是否存在 (FTP目录路径) ＝ 假)
        .如果真 (目录创建 (FTP目录路径) ＝ 假)
            返回 (假)
        .如果真结束
        
    .如果真结束
    .如果真 (连接句柄 ＝ 0 或 PathIsDirectoryA (欲上传的本地目录) ≠ 16)
        返回 (假)
    .如果真结束
    变量_BFC00125 ＝ 寻找文件 (欲上传的本地目录 ＋ “\*”, )
    .判断循环首 (变量_BFC00125 ≠ “”)
        .如果真 (变量_BFC00125 ≠ “.” 且 变量_BFC00125 ≠ “..”)
            加入成员 (变量_C0C00125, 变量_BFC00125)
        .如果真结束
        变量_BFC00125 ＝ 寻找文件 (, )
    .判断循环尾 ()
    .计次循环首 (取数组成员数 (变量_C0C00125), 变量_C1C00125)
        .如果真 (文件上传 (欲上传的本地目录 ＋ “\” ＋ 变量_C0C00125 [变量_C1C00125], FTP目录路径 ＋ “\” ＋ 变量_C0C00125 [变量_C1C00125], 到数值 (是否使用ASCII码方式)) ＝ 假)
            返回 (假)
        .如果真结束
        
    .计次循环尾 ()
    变量_BFC00125 ＝ “”
    清除数组 (变量_C0C00125)
    变量_BFC00125 ＝ 寻找文件 (欲上传的本地目录 ＋ “\*”, 16)
    .判断循环首 (变量_BFC00125 ≠ “”)
        .如果真 (变量_BFC00125 ≠ “.” 且 变量_BFC00125 ≠ “..”)
            加入成员 (变量_C0C00125, 变量_BFC00125)
        .如果真结束
        变量_BFC00125 ＝ 寻找文件 (, 16)
    .判断循环尾 ()
    .计次循环首 (取数组成员数 (变量_C0C00125), 变量_C1C00125)
        FtpCreateDirectoryA (连接句柄, FTP目录路径 ＋ “\” ＋ 变量_C0C00125 [变量_C1C00125])
        .如果真 (目录上传 (欲上传的本地目录 ＋ “\” ＋ 变量_C0C00125 [变量_C1C00125], FTP目录路径 ＋ “\” ＋ 变量_C0C00125 [变量_C1C00125], 是否使用ASCII码方式) ＝ 假)
            返回 (假)
        .如果真结束
        
    .计次循环尾 ()
    返回 (真)

.子程序 目录列表, 整数型, 公开, 枚举FTP指定目录里的所有文件；返回找到的文件个数；
    .参数 欲列出的文件类型, 文本型, 可空, 可空；留空取所有文件；或是指定文件类型，如："*.txt"；
    .参数 欲列出的文件属性, 整数型, 可空, 欲列出的文件属性:1、#只读文件； 2、#隐藏文件； 4、#系统文件； 16、#子目录； 32、#存档文件。通过将这些常量值加起来可以一次设置多个文件属性。如果省略本参数，默认为搜寻所有文件。
    .参数 存放文件名的数组, 文本型, 参考 可空 数组, 用于存放文件名的数组；
    .参数 存放文件属性数组, 整数型, 参考 可空 数组, 用于存放文件属性数组；
    .参数 存放文件尺寸数组, 长整数型, 参考 可空 数组, 用于存放文件尺寸数组；
    .参数 存放文件时间数组, 日期时间型, 参考 可空 数组, 用于存放文件时间数组；
    .局部变量 变量_C8C00125, 整数型
    .局部变量 变量_C9C00125, 自定义_AB560141
    .局部变量 变量_CAC00125, 文本型
    .局部变量 变量_FFF70125, 长整数型
    .局部变量 变量_01F80125, 长整数型

    .如果真 (欲列出的文件类型 ＝ “”)
        欲列出的文件类型 ＝ “*.*”
    .如果真结束
    清除数组 (存放文件名的数组)
    清除数组 (存放文件属性数组)
    清除数组 (存放文件尺寸数组)
    清除数组 (存放文件时间数组)
    .如果真 (连接句柄 ＝ 0)
        返回 (0)
    .如果真结束
    .如果真 (是否为空 (欲列出的文件属性))
        欲列出的文件属性 ＝ 1 ＋ 2 ＋ 4 ＋ 16 ＋ 32
    .如果真结束
    欲列出的文件属性 ＝ 欲列出的文件属性 ＋ 128
    变量_C8C00125 ＝ FtpFindFirstFileA (连接句柄, 欲列出的文件类型, 变量_C9C00125, #INTERNET_FLAG_RELOAD, 0)
    .如果真 (变量_C8C00125 ＝ 0)
        返回 (0)
    .如果真结束
    .循环判断首 ()
        变量_CAC00125 ＝ 字节数组_到文本 (变量_C9C00125.成员_B4560135)
        .判断开始 (位与 (变量_C9C00125.成员_AC560135, 欲列出的文件属性) ＝ 0)
            到循环尾 ()
        .判断 (取文本左边 (变量_CAC00125, 1) ＝ “.”)
            到循环尾 ()
        .默认
            
        .判断结束
        加入成员 (存放文件名的数组, 变量_CAC00125)
        加入成员 (存放文件属性数组, 变量_C9C00125.成员_AC560135)
        变量_FFF70125 ＝ 取字节集数据 (到字节集 (变量_C9C00125.成员_B1560135), #长整数型, )
        变量_01F80125 ＝ 取字节集数据 (到字节集 (变量_C9C00125.成员_B0560135), #长整数型, )
        加入成员 (存放文件尺寸数组, 变量_FFF70125 ＋ 变量_01F80125 × 4294967296)
        加入成员 (存放文件时间数组, 系统_时间变时间 (变量_C9C00125.成员_AF560135))
        处理事件 ()
    .循环判断尾 (InternetFindNextFileA (变量_C8C00125, 变量_C9C00125) ≠ 0)
    InternetCloseHandle (变量_C8C00125)
    返回 (取数组成员数 (存放文件名的数组))

.子程序 置现行目录, 逻辑型, 公开, 置现行目录；
    .参数 FTP目录路径, 文本型, , FTP目录路径；

    .如果真 (连接句柄 ≠ 0)
        返回 (FtpSetCurrentDirectoryA (连接句柄, FTP目录路径))
    .如果真结束
    返回 (假)

.子程序 取现行目录, 文本型, 公开, 取现行目录；
    .局部变量 变量_CCC00125, 文本型
    .局部变量 变量_CDC00125, 整数型

    .如果真 (连接句柄 ≠ 0)
        变量_CDC00125 ＝ 0
        FtpGetCurrentDirectoryA (连接句柄, 变量_CCC00125, 变量_CDC00125)
        变量_CCC00125 ＝ 取空白文本 (变量_CDC00125)
        FtpGetCurrentDirectoryA (连接句柄, 变量_CCC00125, 变量_CDC00125)
        返回 (变量_CCC00125)
    .如果真结束
    返回 (“”)

.子程序 文件删除, 逻辑型, 公开, 删除FTP上指定的文件；
    .参数 欲删除的FTP文件名, 文本型, , 欲删除的FTP文件名；

    .如果真 (连接句柄 ≠ 0)
        返回 (FtpDeleteFileA (连接句柄, 欲删除的FTP文件名))
    .如果真结束
    返回 (假)

.子程序 文件更名, 逻辑型, 公开, 更改FTP上指定文件的名字；
    .参数 欲改名的FTP文件名, 文本型, , 欲改名的FTP文件；
    .参数 新文件名称, 文本型, , 新文件名称；

    .如果真 (连接句柄 ≠ 0)
        返回 (FtpRenameFileA (连接句柄, 欲改名的FTP文件名, 新文件名称))
    .如果真结束
    返回 (假)

.子程序 文件下载, 逻辑型, 公开, 下载FTP上指定的文件；
    .参数 欲下载的FTP文件, 文本型, , ‘/1.txt 注意这里需要使用/
    .参数 本地文件名_绝对路径, 文本型, , 要保存到本地的路径，带文件名
    .参数 是否使用ASCII码方式, 逻辑型, 可空
    .局部变量 变量_D4C00125, 整数型

    .如果真 (连接句柄 ≠ 0)
        .如果真 (是否为空 (是否使用ASCII码方式))
            是否使用ASCII码方式 ＝ 假
            变量_D4C00125 ＝ 2
        .如果真结束
        .如果 (是否使用ASCII码方式)
            变量_D4C00125 ＝ 位或 (1, #INTERNET_FLAG_RELOAD)
        .否则
            变量_D4C00125 ＝ 位或 (2, #INTERNET_FLAG_RELOAD)
        .如果结束
        返回 (FtpGetFileA (连接句柄, 欲下载的FTP文件, 本地文件名_绝对路径, 0, 0, 变量_D4C00125, 0))
    .如果真结束
    返回 (假)

.子程序 文件上传, 逻辑型, 公开, 上传指定文件到FTP上；
    .参数 欲上传的本地文件, 文本型, , 如：C:\012.txt
    .参数 FTP文件路径, 文本型, , 如：/www/012.txt   请注意/，别用成\了。
    .参数 文件上传方式, 整数型, 可空, 可空。默认为2  1=ASCII方式 2=二进制方式

    .如果真 (是否为空 (文件上传方式) 或 文件上传方式 ＝ 0)
        文件上传方式 ＝ 2
    .如果真结束
    .如果真 (连接句柄 ≠ 0)
        返回 (FtpPutFileA (连接句柄, 欲上传的本地文件, FTP文件路径, 文件上传方式, 0))
    .如果真结束
    返回 (假)

.子程序 文件取大小, 长整数型, 公开, 取出FTP上指定文件的大小；
    .参数 FTP文件路径, 文本型
    .局部变量 变量_D9C00125, 整数型
    .局部变量 变量_11F80125, 整数型, , "2"
    .局部变量 变量_03F80125, 长整数型
    .局部变量 变量_04F80125, 长整数型

    .如果真 (连接句柄 ＝ 0)
        返回 (0)
    .如果真结束
    变量_D9C00125 ＝ FtpOpenFileA (连接句柄, FTP文件路径, 2147483648, 2, 0)
    .如果真 (变量_D9C00125 ＝ 0)
        返回 (0)
    .如果真结束
    变量_11F80125 [1] ＝ FtpGetFileSize (变量_D9C00125, 变量_11F80125 [2])
    变量_03F80125 ＝ 取字节集数据 (到字节集 (变量_11F80125 [1]), #长整数型, )
    变量_04F80125 ＝ 取字节集数据 (到字节集 (变量_11F80125 [2]), #长整数型, )
    InternetCloseHandle (变量_D9C00125)
    返回 (变量_03F80125 ＋ 变量_04F80125 × 4294967296)

.子程序 目录取大小, 长整数型, 公开, 取出FTP上指定目录的大小；
    .参数 FTP目录路径, 文本型
    .局部变量 变量_DCC00125, 文本型, , "0"
    .局部变量 变量_DDC00125, 长整数型, , "0"
    .局部变量 变量_DEC00125, 整数型, , "0"
    .局部变量 变量_DFC00125, 长整数型
    .局部变量 变量_E0C00125, 整数型

    .如果真 (连接句柄 ＝ 0)
        返回 (0)
    .如果真结束
    .计次循环首 (目录列表 (FTP目录路径, , 变量_DCC00125, 变量_DEC00125, 变量_DDC00125), 变量_E0C00125)
        .如果真 (变量_DCC00125 [变量_E0C00125] ＝ “.” 或 变量_DCC00125 [变量_E0C00125] ＝ “..”)
            到循环尾 ()
        .如果真结束
        .如果真 (位与 (变量_DEC00125 [变量_E0C00125], 16) ＝ 0)
            变量_DFC00125 ＝ 变量_DFC00125 ＋ 变量_DDC00125 [变量_E0C00125]
            到循环尾 ()
        .如果真结束
        变量_DFC00125 ＝ 变量_DFC00125 ＋ 目录取大小 (FTP目录路径 ＋ “\” ＋ 变量_DCC00125 [变量_E0C00125])
    .计次循环尾 ()
    返回 (变量_DFC00125)

.子程序 文件取属性, 整数型, 公开, 取出FTP上指定文件的属性；
    .参数 FTP文件路径, 文本型
    .参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。
    .局部变量 变量_E5C00125, 整数型
    .局部变量 变量_F6580225, 文本型
    .局部变量 变量_F7580225, 自定义_AB560141
    .局部变量 变量_F8580225, 整数型
    .局部变量 变量_F9580225, 整数型

    .如果真 (连接句柄 ＝ 0)
        返回 (-1)
    .如果真结束
    .如果 (区分大小写 ＝ 假)
        变量_F6580225 ＝ 文本_到小写 (FTP文件路径)
    .否则
        变量_F6580225 ＝ FTP文件路径
    .如果结束
    变量_F8580225 ＝ FtpFindFirstFileA (连接句柄, 变量_F6580225, 变量_F7580225, #INTERNET_FLAG_RELOAD, 0)
    .如果真 (变量_F8580225 ＝ 0)
        返回 (-1)
    .如果真结束
    变量_F9580225 ＝ 变量_F7580225.成员_AC560135
    InternetCloseHandle (变量_F8580225)
    返回 (变量_F9580225)

.子程序 目录取属性, 整数型, 公开, 取出FTP上指定目录的属性；
    .参数 FTP目录路径, 文本型
    .参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。
    .局部变量 变量_E7C00125, 文本型
    .局部变量 变量_E8C00125, 文本型, , "0"
    .局部变量 变量_E9C00125, 整数型, , "0"
    .局部变量 变量_EAC00125, 整数型

    .如果真 (连接句柄 ＝ 0)
        返回 (0)
    .如果真结束
    变量_E7C00125 ＝ 文本_去斜杠 (PathFindFileNameA (FTP目录路径))
    .如果真 (区分大小写 ＝ 假)
        变量_E7C00125 ＝ 文本_到小写 (变量_E7C00125)
    .如果真结束
    .计次循环首 (目录列表 (FTP目录路径 ＋ “/../*”, 16, 变量_E8C00125, 变量_E9C00125), 变量_EAC00125)
        .如果真 (文本_到小写 (变量_E8C00125 [变量_EAC00125]) ＝ 变量_E7C00125)
            返回 (变量_E9C00125 [变量_EAC00125])
        .如果真结束
        
    .计次循环尾 ()
    返回 (0)

.子程序 文件取时间, 日期时间型, 公开, 返回文件最后修改时间。失败返回100年1月1日
    .参数 FTP文件路径, 文本型
    .参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。
    .局部变量 变量_04590225, 整数型
    .局部变量 变量_05590225, 文本型
    .局部变量 变量_06590225, 自定义_AB560141
    .局部变量 变量_07590225, 整数型
    .局部变量 变量_08590225, 日期时间型
    .局部变量 变量_20590225, 精易_时间

    .如果真 (连接句柄 ＝ 0)
        返回 ([1899年12月30日])
    .如果真结束
    .如果 (区分大小写 ＝ 假)
        变量_05590225 ＝ 文本_到小写 (FTP文件路径)
    .否则
        变量_05590225 ＝ FTP文件路径
    .如果结束
    变量_07590225 ＝ FtpFindFirstFileA (连接句柄, 变量_05590225, 变量_06590225, #INTERNET_FLAG_RELOAD, 0)
    .如果真 (变量_07590225 ＝ 0)
        返回 ([1899年12月30日])
    .如果真结束
    InternetCloseHandle (变量_07590225)
    返回 (系统_时间变时间 (变量_06590225.成员_AF560135))

.子程序 目录取时间, 日期时间型, 公开, 返回目录最后修改时间。
    .参数 FTP目录路径, 文本型
    .参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。
    .局部变量 变量_F2C00125, 文本型
    .局部变量 变量_F3C00125, 文本型, , "0"
    .局部变量 变量_F4C00125, 日期时间型, , "0"
    .局部变量 变量_F5C00125, 整数型
    .局部变量 变量_F6C00125, 日期时间型

    .如果真 (连接句柄 ＝ 0)
        返回 (变量_F6C00125)
    .如果真结束
    变量_F2C00125 ＝ 文本_去斜杠 (PathFindFileNameA (FTP目录路径))
    .如果真 (区分大小写 ＝ 假)
        变量_F2C00125 ＝ 文本_到小写 (变量_F2C00125)
    .如果真结束
    .计次循环首 (目录列表 (FTP目录路径 ＋ “\..\*”, 16, 变量_F3C00125, , , 变量_F4C00125), 变量_F5C00125)
        .如果真 (文本_到小写 (变量_F3C00125 [变量_F5C00125]) ＝ 变量_F2C00125)
            返回 (变量_F4C00125 [变量_F5C00125])
        .如果真结束
        
    .计次循环尾 ()
    返回 (变量_F6C00125)

.子程序 文件是否存在, 逻辑型, 公开, 判断FTP指定的文件是否存在；存在返回真，不存在返回假；
    .参数 FTP文件路径, 文本型
    .参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。
    .局部变量 变量_F8C00125, 文本型
    .局部变量 变量_EB580225, 自定义_AB560141
    .局部变量 变量_EF580225, 整数型
    .局部变量 变量_F2580225, 逻辑型

    变量_F2580225 ＝ 假
    .如果真 (连接句柄 ＝ 0)
        返回 (假)
    .如果真结束
    .如果 (区分大小写 ＝ 假)
        变量_F8C00125 ＝ 文本_到小写 (FTP文件路径)
    .否则
        变量_F8C00125 ＝ FTP文件路径
    .如果结束
    变量_EF580225 ＝ FtpFindFirstFileA (连接句柄, 变量_F8C00125, 变量_EB580225, #INTERNET_FLAG_RELOAD, 0)
    .如果真 (变量_EF580225 ≠ 0)
        变量_F2580225 ＝ 真
    .如果真结束
    InternetCloseHandle (变量_EF580225)
    返回 (变量_F2580225)

.子程序 目录是否存在, 逻辑型, 公开, 判断FTP指定的目录是否存在；存在返回真，不存在返回假；
    .参数 FTP目录路径, 文本型
    .参数 区分大小写, 逻辑型, 可空, 默认为假！不区分大小写。
    .局部变量 变量_FCC00125, 文本型
    .局部变量 变量_FDC00125, 文本型, , "0"
    .局部变量 变量_FEC00125, 整数型

    .如果真 (连接句柄 ＝ 0)
        返回 (假)
    .如果真结束
    变量_FCC00125 ＝ 文本_去斜杠 (PathFindFileNameA (FTP目录路径))
    .如果真 (区分大小写 ＝ 假)
        变量_FCC00125 ＝ 文本_到小写 (变量_FCC00125)
    .如果真结束
    .计次循环首 (目录列表 (FTP目录路径 ＋ “/../*”, 16, 变量_FDC00125, , , ), 变量_FEC00125)
        .如果真 (文本_到小写 (变量_FDC00125 [变量_FEC00125]) ＝ 变量_FCC00125)
            返回 (真)
        .如果真结束
        
    .计次循环尾 ()
    返回 (假)

.子程序 进度下载, 逻辑型, 公开
    .参数 网络文件, 文本型
    .参数 本地文件, 文本型
    .参数 下载回调, 子程序指针, 可空, 3个参数；1＝已下载，长整数型指针。2=速度，整数型。3＝百分比，整数型。
    .局部变量 变量_D6E10225, 整数型
    .局部变量 变量_D7E10225, 整数型
    .局部变量 变量_D8E10225, 逻辑型
    .局部变量 变量_D9E10225, 字节型, , "0"
    .局部变量 变量_DAE10225, 整数型
    .局部变量 变量_DBE10225, 长整数型
    .局部变量 变量_DCE10225, 整数型
    .局部变量 变量_DDE10225, 文本型
    .局部变量 变量_DEE10225, 整数型
    .局部变量 变量_DFE10225, 整数型
    .局部变量 变量_E0E10225, 整数型
    .局部变量 变量_E1E10225, 整数型
    .局部变量 变量_E2E10225, 整数型
    .局部变量 变量_E3E10225, 整数型
    .局部变量 变量_E4E10225, 整数型

    变量_DEE10225 ＝ 文件取大小 (网络文件)
    .如果真 (变量_DEE10225 ＝ 0)
        返回 (假)
    .如果真结束
    变量_D7E10225 ＝ FtpOpenFileA (连接句柄, 网络文件, -2147483648, 2, 0)
    .如果真 (变量_D7E10225 ＝ 0)
        返回 (假)
    .如果真结束
    变量_DFE10225 ＝ 打开文件 (本地文件, 6, 1)
    变量_E0E10225 ＝ DLL_GetTickCount ()
    .循环判断首 ()
        重定义数组 (变量_D9E10225, 假, 2048)
        变量_D8E10225 ＝ DLL_InternetReadFile (变量_D7E10225, 变量_D9E10225, 2048, 变量_DAE10225)
        .如果 (变量_DAE10225 ＞ 0 且 变量_D8E10225)
            重定义数组 (变量_D9E10225, 真, 变量_DAE10225)
            
            变量_DBE10225 ＝ 变量_DBE10225 ＋ 变量_DAE10225
            写出数据 (变量_DFE10225, 变量_D9E10225)
            变量_E1E10225 ＝ 变量_E1E10225 ＋ 变量_DAE10225
            变量_E2E10225 ＝ DLL_GetTickCount () － 变量_E0E10225
            .如果真 (变量_E2E10225 ＞ 0)
                变量_E3E10225 ＝ 变量_E1E10225 ÷ 变量_E2E10225
            .如果真结束
            变量_E4E10225 ＝ 取整 (变量_DBE10225 ÷ 变量_DEE10225 × 100)
            .如果真 (是否为空 (下载回调) ＝ 假 或 到整数 (下载回调) ≠ 0)
                程序_Call (到整数 (下载回调), 取指针地址_长整数型 (变量_DBE10225), 变量_E3E10225, 变量_E4E10225, , )
            .如果真结束
            处理事件 ()
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .循环判断尾 (变量_DAE10225 ≠ 0)
    关闭文件 (变量_DFE10225)
    InternetCloseHandle (变量_D6E10225)
    InternetCloseHandle (变量_D7E10225)
    返回 (真)

.子程序 系统_时间变时间, 日期时间型
    .参数 变量_FFC00125, FILETIME
    .局部变量 变量_00C10125, 精易_时间
    .局部变量 变量_01C10125, 日期时间型

    DLL_FileTimeToSystemTime (变量_FFC00125, 变量_00C10125)
    SystemTimeToVariantTime (变量_00C10125, 变量_01C10125)
    返回 (变量_01C10125)

.子程序 字节数组_到文本, 文本型
    .参数 变量_02C10125, 字节型, 数组
    .局部变量 变量_03C10125, 字节型, , "0"

    .如果真 (取数组成员数 (变量_02C10125) ＝ 0)
        返回 (“”)
    .如果真结束
    变量_03C10125 ＝ 变量_02C10125
    加入成员 (变量_03C10125, 0)
    返回 (lstrcpynA_字节型 (变量_03C10125, 0, 0))

.子程序 文本_去斜杠, 文本型
    .参数 变量_04C10125, 文本型
    .局部变量 变量_05C10125, 整数型
    .局部变量 变量_06C10125, 文本型

    变量_06C10125 ＝ 变量_04C10125
    .循环判断首 ()
        变量_05C10125 ＝ lstrlenA (取指针文本_ (变量_06C10125))
        StrTrimA (变量_06C10125, “\”)
        StrTrimA (变量_06C10125, “/”)
    .循环判断尾 (lstrlenA (取指针文本_ (变量_06C10125)) ≠ 变量_05C10125)
    返回 (变量_06C10125)

.子程序 _初始化
    

.子程序 _销毁
    断开FTP服务器 ()

