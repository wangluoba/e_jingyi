.版本 2

.程序集 类_系统服务, , 公开, 使用例程 - http://bbs.125.la/thread-102354-1-1.html
.子程序 _初始化
    

.子程序 _销毁
    

.子程序 取服务状态, 整数型, 公开, 返回值如下:1=已停止;2=开始;3=停止;4=正在运行;5=继续挂起;6=暂停挂起;7暂停.
    .参数 服务名, 文本型
    .局部变量 变量_36F20125, 整数型
    .局部变量 变量_37F20125, 整数型
    .局部变量 变量_38F20125, 自定义_1EAA0141
    .局部变量 变量_39F20125, 整数型

    变量_36F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_36F20125 ≠ 0)
        变量_37F20125 ＝ OpenService (变量_36F20125, 服务名, #GENERIC_READ)
        .如果真 (变量_37F20125 ≠ 0)
            .如果真 (QueryServiceStatus (变量_37F20125, 变量_38F20125))
                变量_39F20125 ＝ 变量_38F20125.成员_2CAA0135
            .如果真结束
            CloseServiceHandle (变量_37F20125)
        .如果真结束
        CloseServiceHandle (变量_36F20125)
    .如果真结束
    返回 (变量_39F20125)

.子程序 取服务类型, 整数型, 公开, 返回值如下:1=设备驱动;2=文件系统驱动;16=进程;32=自己进程或其它服务;256=交互服务.
    .参数 服务名, 文本型
    .局部变量 变量_3BF20125, 整数型
    .局部变量 变量_3CF20125, 整数型
    .局部变量 变量_3DF20125, 自定义_1EAA0141
    .局部变量 变量_3EF20125, 整数型
    .局部变量 变量_ABF40125, 整数型
    .局部变量 变量_ACF40125, 整数型
    .局部变量 变量_ADF40125, 逻辑型

    变量_3BF20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_3BF20125 ≠ 0)
        变量_3CF20125 ＝ OpenService (变量_3BF20125, 服务名, #GENERIC_READ)
        .如果真 (变量_3CF20125 ≠ 0)
            QueryServiceConfig (变量_3CF20125, 0, 0, 变量_ABF40125)
            变量_ACF40125 ＝ GlobalAlloc (64, 变量_ABF40125)
            变量_ADF40125 ＝ QueryServiceConfig (变量_3CF20125, 变量_ACF40125, 变量_ABF40125, 变量_ABF40125)
            .如果真 (变量_ADF40125)
                变量_3EF20125 ＝ 取字节集数据 (指针到字节集 (变量_ACF40125, 4), #整数型, )
            .如果真结束
            GlobalFree (变量_ACF40125)
            CloseServiceHandle (变量_3CF20125)
        .如果真结束
        CloseServiceHandle (变量_3BF20125)
    .如果真结束
    返回 (变量_3EF20125)

.子程序 取服务描述, 文本型, 公开, 成功返回服务描述文本，失败返回空！
    .参数 服务名, 文本型
    .局部变量 变量_46F20125, 整数型
    .局部变量 变量_47F20125, 整数型
    .局部变量 变量_48F20125, 整数型
    .局部变量 变量_49F20125, 整数型
    .局部变量 变量_4AF20125, 文本型
    .局部变量 变量_EAF70125, 自定义_1BAA0141

    变量_46F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_46F20125 ≠ 0)
        变量_47F20125 ＝ OpenService (变量_46F20125, 服务名, #SC_MANAGER_CONNECT)
        .如果真 (变量_47F20125 ≠ 0)
            QueryServiceConfig2 (变量_47F20125, 1, 0, 0, 变量_48F20125)
            变量_49F20125 ＝ HeapAlloc (GetProcessHeap (), 8, 变量_48F20125)
            .如果真 (QueryServiceConfig2 (变量_47F20125, 1, 变量_49F20125, 变量_48F20125, 变量_48F20125))
                DLL_RtlMoveMemory36 (变量_EAF70125, 变量_49F20125, 4)
                变量_4AF20125 ＝ 变量_EAF70125.成员_1FAA0135
            .如果真结束
            CloseServiceHandle (变量_47F20125)
            DLL_HeapFree (GetProcessHeap (), 1, 变量_49F20125)
        .如果真结束
        CloseServiceHandle (变量_46F20125)
    .如果真结束
    返回 (变量_4AF20125)

.子程序 置服务描述, 逻辑型, 公开, 修改指定系统服务描述，成功返回真，失败返回假。
    .参数 服务名, 文本型, , 非显示名称。
    .参数 新描述, 文本型
    .局部变量 变量_4DF20125, 整数型
    .局部变量 变量_4EF20125, 整数型
    .局部变量 变量_4FF20125, 整数型
    .局部变量 变量_50F20125, 整数型
    .局部变量 变量_51F20125, 逻辑型

    变量_4DF20125 ＝ OpenSCManagerA (0, 0, #GENERIC_EXECUTE)
    .如果真 (变量_4DF20125 ≠ 0)
        变量_4EF20125 ＝ OpenService (变量_4DF20125, 服务名, #SERVICE_CHANGE_CONFIG)
        .如果真 (变量_4EF20125 ≠ 0)
            变量_50F20125 ＝ lstrcpyn_文本型 (新描述, 新描述, 0)
            变量_51F20125 ＝ ChangeServiceConfig2A (变量_4EF20125, 1, 变量_50F20125)
            CloseServiceHandle (变量_4EF20125)
        .如果真结束
        CloseServiceHandle (变量_4DF20125)
    .如果真结束
    返回 (变量_51F20125)

.子程序 取显示名称, 文本型, 公开, 根据系统服务数据库名称，获取显示名称。
    .参数 服务名, 文本型
    .局部变量 变量_53F20125, 整数型
    .局部变量 变量_54F20125, 文本型
    .局部变量 变量_56F20125, 逻辑型

    变量_53F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_53F20125 ≠ 0)
        变量_54F20125 ＝ 取空白文本 (255)
        变量_56F20125 ＝ GetServiceDisplayName (变量_53F20125, 服务名, 变量_54F20125, 255)
        CloseServiceHandle (变量_53F20125)
    .如果真结束
    返回 (选择 (变量_56F20125, 变量_54F20125, “”))

.子程序 取服务名称, 文本型, 公开, 根据系统服务数据库名称，获取显示名称。
    .参数 显示名称, 文本型
    .局部变量 变量_58F20125, 整数型
    .局部变量 变量_59F20125, 文本型
    .局部变量 变量_5AF20125, 整数型
    .局部变量 变量_5BF20125, 逻辑型

    变量_58F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_58F20125 ≠ 0)
        GetServiceKeyName (变量_58F20125, 显示名称, 变量_59F20125, 变量_5AF20125)
        变量_59F20125 ＝ 取空白文本 (变量_5AF20125)
        变量_5BF20125 ＝ GetServiceKeyName (变量_58F20125, 显示名称, 变量_59F20125, 变量_5AF20125)
        CloseServiceHandle (变量_58F20125)
    .如果真结束
    返回 (选择 (变量_5BF20125, 变量_59F20125, “”))

.子程序 安装服务, 逻辑型, 公开, 创建一个系统服务项，成功返回真，失败返回假。
    .参数 服务名称, 文本型, , 系统服务数据库中ID名称，不能为中文！
    .参数 显示名称, 文本型
    .参数 执行文件, 文本型, , 文件绝对路径
    .参数 服务描述, 文本型, 可空
    .参数 允许桌面交互, 逻辑型, 可空, 可为空,默认不允许与桌面进行交互.
    .参数 服务类型, 整数型, 可空, 可为空,默认即进程.1=内核驱动;2=文件系统驱动;16=进程;32=其它服务.
    .参数 启动类型, 整数型, 可空, 可为空,默认即手动,参数;2=自动;3=手动;4=禁用.
    .参数 依存关系, 文本型, 可空, 某些服务依赖于其它服务,系统驱动程序或加载顺序组.
    .参数 登录用户, 文本型, 可空, 非本地系统,登陆用户名.
    .参数 登录密码, 文本型, 可空
    .局部变量 变量_66F20125, 整数型
    .局部变量 变量_67F20125, 整数型

    服务类型 ＝ 选择 (是否为空 (服务类型), 16, 服务类型)
    启动类型 ＝ 选择 (是否为空 (启动类型), 3, 启动类型)
    变量_66F20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_66F20125 ≠ 0)
        .如果真 (允许桌面交互)
            服务类型 ＝ 位或 (服务类型, #SERVICE_INTERACTIVE_PROCESS)
        .如果真结束
        变量_67F20125 ＝ CreateService (变量_66F20125, 服务名称, 显示名称, #SERVICE_ALL_ACCESS, 服务类型, 启动类型, #SERVICE_ERROR_NORMAL, 执行文件, 字符 (0), 0, 依存关系, 登录用户, 登录密码)
        .如果真 (变量_67F20125 ≠ 0)
            置服务描述 (服务名称, 服务描述)
        .如果真结束
        CloseServiceHandle (变量_67F20125)
        CloseServiceHandle (变量_66F20125)
    .如果真结束
    返回 (变量_67F20125 ≠ 0)

.子程序 卸载服务, 逻辑型, 公开, 如果服务正在运动会先停止服务然后再删除。成功返回真，失败返回假。
    .参数 服务名称, 文本型
    .局部变量 变量_6CF20125, 整数型
    .局部变量 变量_6DF20125, 整数型
    .局部变量 变量_6EF20125, 自定义_1EAA0141
    .局部变量 变量_6FF20125, 逻辑型

    变量_6CF20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_6CF20125 ≠ 0)
        变量_6DF20125 ＝ OpenService (变量_6CF20125, 服务名称, 位或 (16, 32, 65536))
        .如果真 (变量_6DF20125 ≠ 0)
            变量_6FF20125 ＝ DeleteService (变量_6DF20125)
            CloseServiceHandle (变量_6DF20125)
        .如果真结束
        CloseServiceHandle (变量_6CF20125)
    .如果真结束
    返回 (变量_6FF20125)

.子程序 开始服务, 逻辑型, 公开, 开启一个系统服务，成功返回真，如果系统服务被禁用则返回假。
    .参数 服务名, 文本型, , 需提供系统服务数据库名非显示名称
    .局部变量 变量_71F20125, 整数型
    .局部变量 变量_72F20125, 整数型
    .局部变量 变量_73F20125, 逻辑型

    变量_71F20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_71F20125 ≠ 0)
        变量_72F20125 ＝ OpenService (变量_71F20125, 服务名, #SERVICE_START)
        .如果真 (变量_72F20125 ≠ 0)
            变量_73F20125 ＝ StartService (变量_72F20125, 0, 0)
            CloseServiceHandle (变量_72F20125)
        .如果真结束
        CloseServiceHandle (变量_71F20125)
    .如果真结束
    返回 (变量_73F20125)

.子程序 停止服务, 逻辑型, 公开, 停止一个存在运行的系统服务，成功返回真，失败返回假。
    .参数 服务名, 文本型, , 需提供服务名称非显示名称。
    .局部变量 变量_75F20125, 整数型
    .局部变量 变量_76F20125, 整数型
    .局部变量 变量_77F20125, 自定义_1EAA0141
    .局部变量 变量_78F20125, 逻辑型

    变量_75F20125 ＝ OpenSCManagerA (0, 0, 1)
    .如果真 (变量_75F20125 ≠ 0)
        变量_76F20125 ＝ OpenService (变量_75F20125, 服务名, 32)
        .如果真 (变量_75F20125 ≠ 0)
            变量_78F20125 ＝ ControlService (变量_76F20125, 1, 变量_77F20125)
            CloseServiceHandle (变量_76F20125)
        .如果真结束
        CloseServiceHandle (变量_75F20125)
    .如果真结束
    返回 (变量_78F20125)

.子程序 暂停服务, 逻辑型, 公开, 暂停一个存在运行的系统服务，成功返回真，失败返回假。
    .参数 服务名称, 文本型, , 需提供服务名称非显示名称。
    .局部变量 变量_7AF20125, 整数型
    .局部变量 变量_7BF20125, 整数型
    .局部变量 变量_7CF20125, 自定义_1EAA0141
    .局部变量 变量_7DF20125, 逻辑型

    变量_7AF20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_7AF20125 ≠ 0)
        变量_7BF20125 ＝ OpenService (变量_7AF20125, 服务名称, 983551)
        .如果真 (变量_7BF20125 ≠ 0)
            变量_7DF20125 ＝ ControlService (变量_7BF20125, 2, 变量_7CF20125)
            CloseServiceHandle (变量_7BF20125)
        .如果真结束
        CloseServiceHandle (变量_7AF20125)
    .如果真结束
    返回 (变量_7DF20125)

.子程序 恢复服务, 逻辑型, 公开, 恢复被暂停的系统服务，成功返回真，失败返回假。
    .参数 服务名称, 文本型, , 需提供服务名称非显示名称。
    .局部变量 变量_7FF20125, 整数型
    .局部变量 变量_80F20125, 整数型
    .局部变量 变量_81F20125, 自定义_1EAA0141
    .局部变量 变量_82F20125, 逻辑型

    变量_7FF20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_7FF20125 ≠ 0)
        变量_80F20125 ＝ OpenService (变量_7FF20125, 服务名称, 983551)
        .如果真 (变量_80F20125 ≠ 0)
            变量_82F20125 ＝ ControlService (变量_80F20125, 3, 变量_81F20125)
            CloseServiceHandle (变量_80F20125)
        .如果真结束
        CloseServiceHandle (变量_7FF20125)
    .如果真结束
    返回 (变量_82F20125)

.子程序 是否存在, 逻辑型, 公开, 判断一个系统服务是否存在,存在返回真,否则返回假.
    .参数 服务名称, 文本型, , 需提供服务名称非显示名称。
    .局部变量 变量_84F20125, 整数型
    .局部变量 变量_85F20125, 整数型

    变量_84F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_84F20125 ≠ 0)
        变量_85F20125 ＝ OpenService (变量_84F20125, 服务名称, #GENERIC_READ)
        CloseServiceHandle (变量_85F20125)
        CloseServiceHandle (变量_84F20125)
    .如果真结束
    返回 (变量_85F20125 ≠ 0)

.子程序 置启动类型, 逻辑型, 公开, 修改一个已有的系统服务启动类型，有些服务有权限是否允许操作，成功返回真，失败返回假。
    .参数 服务名称, 文本型, , 提供服务名称非服务显示名称
    .参数 启动类型, 整数型, , 启动类型以下选项：2=自动(延迟启动);3=手动;4=禁用
    .局部变量 变量_89F20125, 整数型
    .局部变量 变量_8AF20125, 整数型
    .局部变量 变量_8CF20125, 逻辑型

    变量_89F20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_89F20125 ≠ 0)
        变量_8AF20125 ＝ OpenService (变量_89F20125, 服务名称, 983551)
        .如果真 (变量_8AF20125 ≠ 0)
            变量_8CF20125 ＝ ChangeServiceConfig (变量_8AF20125, 4294967295, 启动类型, 4294967295, 字符 (0), 字符 (0), 0, 字符 (0), 字符 (0), 字符 (0), 字符 (0))
            CloseServiceHandle (变量_8AF20125)
        .如果真结束
        CloseServiceHandle (变量_89F20125)
    .如果真结束
    返回 (变量_8CF20125)

.子程序 取启动类型, 整数型, 公开, 获取指定系统服务启动类型，成功返回启动类型值;1=自动;2=自动(延迟启动);3=手动;4=禁用，失败返回-1。
    .参数 服务名称, 文本型
    .局部变量 变量_8EF20125, 整数型
    .局部变量 变量_8FF20125, 整数型
    .局部变量 变量_90F20125, 逻辑型
    .局部变量 变量_91F20125, 整数型
    .局部变量 变量_92F20125, 自定义_1DAA0141
    .局部变量 变量_93F20125, 整数型
    .局部变量 变量_94F20125, 整数型

    变量_8EF20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_8EF20125 ≠ 0)
        变量_8FF20125 ＝ OpenService (变量_8EF20125, 服务名称, 1)
        .如果真 (变量_8FF20125 ≠ 0)
            QueryServiceConfig (变量_8FF20125, 0, 0, 变量_91F20125)
            变量_93F20125 ＝ GlobalAlloc (64, 变量_91F20125)
            变量_90F20125 ＝ QueryServiceConfig (变量_8FF20125, 变量_93F20125, 变量_91F20125, 变量_91F20125)
            .如果真 (变量_90F20125)
                DLL_RtlMoveMemory32 (变量_92F20125, 变量_93F20125, 36)
                .判断开始 (变量_92F20125.成员_23AA0135 ＝ 2 且 变量_92F20125.成员_22AA0135 ＝ 32)
                    变量_94F20125 ＝ 1
                .判断 (变量_92F20125.成员_23AA0135 ＝ 2 且 变量_92F20125.成员_22AA0135 ＝ 16)
                    变量_94F20125 ＝ 2
                .判断 (变量_92F20125.成员_23AA0135 ＝ 3)
                    变量_94F20125 ＝ 3
                .判断 (变量_92F20125.成员_23AA0135 ＝ 4)
                    变量_94F20125 ＝ 4
                .默认
                    变量_94F20125 ＝ -1
                .判断结束
                处理事件 ()
            .如果真结束
            CloseServiceHandle (变量_8FF20125)
        .如果真结束
        CloseServiceHandle (变量_8EF20125)
        GlobalFree (变量_93F20125)
    .如果真结束
    返回 (变量_94F20125)

.子程序 取文件路径, 文本型, 公开, 获取指定系统服务可执行文件的路径，失败返回空文本。
    .参数 服务名称, 文本型
    .局部变量 变量_96F20125, 整数型
    .局部变量 变量_97F20125, 整数型
    .局部变量 变量_98F20125, 逻辑型
    .局部变量 变量_99F20125, 整数型
    .局部变量 变量_9AF20125, 自定义_1DAA0141
    .局部变量 变量_9BF20125, 整数型
    .局部变量 变量_9CF20125, 整数型
    .局部变量 变量_9DF20125, 文本型

    变量_96F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_96F20125 ≠ 0)
        变量_97F20125 ＝ OpenService (变量_96F20125, 服务名称, #SC_MANAGER_CONNECT)
        .如果真 (变量_97F20125 ≠ 0)
            QueryServiceConfig (变量_97F20125, 0, 0, 变量_99F20125)
            变量_9BF20125 ＝ GlobalAlloc (64, 变量_99F20125)
            变量_98F20125 ＝ QueryServiceConfig (变量_97F20125, 变量_9BF20125, 变量_99F20125, 变量_99F20125)
            .如果真 (变量_98F20125)
                DLL_RtlMoveMemory32 (变量_9AF20125, 变量_9BF20125, 36)
                变量_9DF20125 ＝ 指针到文本 (变量_9AF20125.成员_25AA0135)
            .如果真结束
            GlobalFree (变量_9BF20125)
            CloseServiceHandle (变量_97F20125)
        .如果真结束
        CloseServiceHandle (变量_96F20125)
    .如果真结束
    返回 (选择 (变量_98F20125, 变量_9DF20125, “”))

.子程序 置文件路径, 逻辑型, 公开, 修改一个已有的系统服务可执行文件的路径，有些服务有权限是否允许操作，成功返回真，失败返回假。
    .参数 服务名称, 文本型, , 提供服务名称非服务显示名称
    .参数 文件路径, 文本型
    .局部变量 变量_A0F20125, 整数型
    .局部变量 变量_A1F20125, 整数型
    .局部变量 变量_A2F20125, 逻辑型

    变量_A0F20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_A0F20125 ≠ 0)
        变量_A1F20125 ＝ OpenService (变量_A0F20125, 服务名称, 983551)
        .如果真 (变量_A1F20125 ≠ 0)
            变量_A2F20125 ＝ ChangeServiceConfig (变量_A1F20125, 4294967295, 4294967295, 4294967295, 文件路径, 字符 (0), 0, 字符 (0), 字符 (0), 字符 (0), 字符 (0))
            CloseServiceHandle (变量_A1F20125)
        .如果真结束
        CloseServiceHandle (变量_A0F20125)
    .如果真结束
    返回 (变量_A2F20125)

.子程序 取登录类型, 文本型, 公开, 获取指定服务登录类型,如,本地系统,本地服务或网络服务.
    .参数 服务名称, 文本型
    .局部变量 变量_A4F20125, 整数型
    .局部变量 变量_A5F20125, 整数型
    .局部变量 变量_A6F20125, 逻辑型
    .局部变量 变量_A7F20125, 整数型
    .局部变量 变量_A8F20125, 自定义_1DAA0141
    .局部变量 变量_A9F20125, 整数型
    .局部变量 变量_AAF20125, 文本型
    .局部变量 变量_ABF20125, 文本型

    变量_A4F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_A4F20125 ≠ 0)
        变量_A5F20125 ＝ OpenService (变量_A4F20125, 服务名称, 1)
        .如果真 (变量_A5F20125 ≠ 0)
            QueryServiceConfig (变量_A5F20125, 0, 0, 变量_A7F20125)
            变量_A9F20125 ＝ GlobalAlloc (64, 变量_A7F20125)
            变量_A6F20125 ＝ QueryServiceConfig (变量_A5F20125, 变量_A9F20125, 变量_A7F20125, 变量_A7F20125)
            .如果真 (变量_A6F20125)
                DLL_RtlMoveMemory32 (变量_A8F20125, 变量_A9F20125, 36)
                变量_AAF20125 ＝ 到大写 (指针到文本 (变量_A8F20125.成员_29AA0135))
                .判断开始 (寻找文本 (变量_AAF20125, 到大写 (“localservice”), , 假) ≠ -1)
                    变量_ABF20125 ＝ “本地服务”
                .判断 (寻找文本 (变量_AAF20125, 到大写 (“Networkservice”), , 假) ≠ -1)
                    变量_ABF20125 ＝ “网络服务”
                .判断 (寻找文本 (变量_AAF20125, 到大写 (“localsystem”), , 假) ≠ -1)
                    变量_ABF20125 ＝ “本地系统”
                .默认
                    
                .判断结束
                处理事件 ()
            .如果真结束
            GlobalFree (变量_A9F20125)
            CloseServiceHandle (变量_A5F20125)
        .如果真结束
        CloseServiceHandle (变量_A4F20125)
        
    .如果真结束
    返回 (变量_ABF20125)

.子程序 枚举服务, 整数型, 公开, 枚举本机安装的系统服务，成功返回系统服务数量，失败返回0.
    .参数 服务类型, 整数型, , 1、正在运行服务 2、未运行的服务  3、所有的服务
    .参数 服务列表, 精易_系统服务列表, 数组, 储存返回值。
    .局部变量 变量_AEF20125, 逻辑型
    .局部变量 变量_AFF20125, 整数型
    .局部变量 变量_B0F20125, 整数型
    .局部变量 变量_B1F20125, 整数型
    .局部变量 变量_B2F20125, 整数型
    .局部变量 变量_B3F20125, 整数型
    .局部变量 变量_B4F20125, 整数型
    .局部变量 变量_B5F20125, 整数型
    .局部变量 变量_B6F20125, 自定义_8EF30141
    .局部变量 变量_B7F20125, 字节集
    .局部变量 变量_B8F20125, 字节集
    .局部变量 变量_B9F20125, 整数型
    .局部变量 变量_BAF20125, 整数型
    .局部变量 变量_BBF20125, 整数型
    .局部变量 变量_BCF20125, 自定义_1DAA0141
    .局部变量 变量_BDF20125, 文本型

    数组清零 (服务列表)
    变量_AFF20125 ＝ OpenSCManagerA (0, 0, 983103)
    .如果真 (变量_AFF20125 ≠ 0)
        变量_AEF20125 ＝ DLL_EnumServicesStatusA (变量_AFF20125, 48, 服务类型, 0, 0, 变量_B1F20125, 变量_B2F20125, 变量_B3F20125)
        变量_B4F20125 ＝ HeapAlloc (GetProcessHeap (), 8, 变量_B1F20125)
        变量_AEF20125 ＝ DLL_EnumServicesStatusA (变量_AFF20125, 48, 服务类型, 变量_B4F20125, 变量_B1F20125, 变量_B1F20125, 变量_B2F20125, 变量_B3F20125)
        .如果真 (变量_AEF20125 ＝ 假)
            返回 (0)
        .如果真结束
        重定义数组 (服务列表, 假, 变量_B2F20125)
        .变量循环首 (0, 变量_B2F20125 － 1, 1, 变量_B5F20125)
            变量_B7F20125 ＝ 指针到字节集 (变量_B4F20125 ＋ 36 × 变量_B5F20125, 36)
            DLL_RtlMoveMemory34 (变量_B6F20125, 变量_B7F20125, 36)
            服务列表 [变量_B5F20125 ＋ 1].服务名称 ＝ 指针到文本 (变量_B6F20125.成员_8FF30135)
            服务列表 [变量_B5F20125 ＋ 1].显示名称 ＝ 指针到文本 (变量_B6F20125.成员_90F30135)
            
            变量_B9F20125 ＝ OpenService (变量_AFF20125, 服务列表 [变量_B5F20125 ＋ 1].服务名称, 983551)
            .如果真 (变量_B9F20125 ≠ 0)
                QueryServiceConfig (变量_B9F20125, 0, 0, 变量_BAF20125)
                变量_BBF20125 ＝ HeapAlloc (GetProcessHeap (), 8, 变量_BAF20125)
                变量_AEF20125 ＝ QueryServiceConfig (变量_B9F20125, 变量_BBF20125, 变量_BAF20125, 变量_BAF20125)
                .如果真 (变量_AEF20125)
                    DLL_RtlMoveMemory32 (变量_BCF20125, 变量_BBF20125, 36)
                    服务列表 [变量_B5F20125 ＋ 1].描述 ＝ 取服务描述 (服务列表 [变量_B5F20125 ＋ 1].服务名称)
                    服务列表 [变量_B5F20125 ＋ 1].服务状态 ＝ GetServiceState (变量_B6F20125.成员_91F30135.成员_2CAA0135)
                    服务列表 [变量_B5F20125 ＋ 1].文件路径 ＝ 文本_指针到文本A (变量_BCF20125.成员_25AA0135)
                    .判断开始 (变量_BCF20125.成员_23AA0135 ＝ 2 且 变量_B6F20125.成员_91F30135.成员_2BAA0135 ＝ 32)
                        服务列表 [变量_B5F20125 ＋ 1].启动类型 ＝ “自动”
                    .判断 (变量_BCF20125.成员_23AA0135 ＝ 2 且 变量_B6F20125.成员_91F30135.成员_2BAA0135 ＝ 16)
                        服务列表 [变量_B5F20125 ＋ 1].启动类型 ＝ “自动(延迟启动)”
                    .判断 (变量_BCF20125.成员_23AA0135 ＝ 3)
                        服务列表 [变量_B5F20125 ＋ 1].启动类型 ＝ “手动”
                    .判断 (变量_BCF20125.成员_23AA0135 ＝ 4)
                        服务列表 [变量_B5F20125 ＋ 1].启动类型 ＝ “禁用”
                    .默认
                        
                    .判断结束
                    变量_BDF20125 ＝ 到大写 (文本_指针到文本A (变量_BCF20125.成员_29AA0135))
                    .判断开始 (寻找文本 (变量_BDF20125, 到大写 (“LocalService”), , 假) ≠ -1)
                        服务列表 [变量_B5F20125 ＋ 1].登陆为 ＝ “本地服务”
                    .判断 (寻找文本 (变量_BDF20125, 到大写 (“NetworkService”), , 假) ≠ -1)
                        服务列表 [变量_B5F20125 ＋ 1].登陆为 ＝ “网络服务”
                    .判断 (寻找文本 (变量_BDF20125, 到大写 (“LocalSystem”), , 假) ≠ -1)
                        服务列表 [变量_B5F20125 ＋ 1].登陆为 ＝ “本地系统”
                    .默认
                        服务列表 [变量_B5F20125 ＋ 1].登陆为 ＝ 变量_BDF20125
                    .判断结束
                    
                .如果真结束
                DLL_HeapFree (GetProcessHeap (), 1, 变量_BBF20125)
                CloseServiceHandle (变量_B9F20125)
            .如果真结束
            处理事件 ()
        .变量循环尾 ()
        
        DLL_HeapFree (GetProcessHeap (), 1, 变量_B4F20125)
        CloseServiceHandle (变量_AFF20125)
    .如果真结束
    返回 (变量_B2F20125)

.子程序 取服务数, 整数型, 公开, 枚举本机安装的系统服务，成功返回系统服务数量，失败返回0.
    .参数 服务状态, 整数型, 可空, 1、正在运行服务 2、未运行的服务  3、所有的服务
    .局部变量 变量_BFF20125, 逻辑型
    .局部变量 变量_C0F20125, 整数型
    .局部变量 变量_C1F20125, 整数型
    .局部变量 变量_C2F20125, 整数型
    .局部变量 变量_C3F20125, 整数型
    .局部变量 变量_C4F20125, 整数型
    .局部变量 变量_C5F20125, 整数型
    .局部变量 变量_C6F20125, 整数型
    .局部变量 变量_C7F20125, 自定义_8EF30141
    .局部变量 变量_C8F20125, 字节集
    .局部变量 变量_C9F20125, 字节集

    服务状态 ＝ 选择 (是否为空 (服务状态), 3, 服务状态)
    变量_C0F20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_C0F20125 ≠ 0)
        DLL_EnumServicesStatusA (变量_C0F20125, 48, 服务状态, 0, 0, 变量_C2F20125, 变量_C3F20125, 变量_C4F20125)
        变量_C5F20125 ＝ GlobalAlloc (64, 变量_C2F20125)
        变量_BFF20125 ＝ DLL_EnumServicesStatusA (变量_C0F20125, 48, 服务状态, 变量_C5F20125, 变量_C2F20125, 变量_C2F20125, 变量_C3F20125, 变量_C4F20125)
        GlobalFree (变量_C5F20125)
        CloseServiceHandle (变量_C0F20125)
    .如果真结束
    返回 (变量_C3F20125)
    

.子程序 取指定服务信息, , 公开
    .参数 参_服务名称, 文本型
    .参数 参_服务状态, 整数型, , 1、正在运行服务 2、未运行的服务  3、所有的服务
    .参数 参_服务信息, 精易_系统服务列表Ex, 参考
    .局部变量 变量_B8A30225, 精易_系统服务列表Ex, , "0"
    .局部变量 变量_B9A30225, 类_系统服务
    .局部变量 变量_BAA30225, 整数型

    清除数组 (变量_B8A30225)
    变量_B9A30225.枚举服务Ex (参_服务状态, 变量_B8A30225)
    .计次循环首 (取数组成员数 (变量_B8A30225), 变量_BAA30225)
        .如果真 (变量_B8A30225 [变量_BAA30225].服务名称 ＝ 参_服务名称)
            参_服务信息 ＝ 变量_B8A30225 [变量_BAA30225]
        .如果真结束
        系统_处理事件 ()
    .计次循环尾 ()
    

.子程序 枚举服务Ex, 整数型, 公开, 枚举本机安装的系统服务，成功返回系统服务数量，失败返回0.
    .参数 服务状态, 整数型, , 1、正在运行服务 2、未运行的服务  3、所有的服务
    .参数 服务列表, 精易_系统服务列表Ex, 数组, 储存返回值。
    .局部变量 变量_CCF20125, 整数型
    .局部变量 变量_CDF20125, 逻辑型
    .局部变量 变量_CEF20125, 整数型
    .局部变量 变量_CFF20125, 整数型
    .局部变量 变量_D0F20125, 整数型
    .局部变量 变量_D1F20125, 整数型
    .局部变量 变量_D2F20125, 整数型
    .局部变量 变量_D3F20125, 整数型
    .局部变量 变量_D4F20125, 自定义_73F30141
    .局部变量 变量_D5F20125, 字节集
    .局部变量 变量_D6F20125, 整数型
    .局部变量 变量_D7F20125, 整数型
    .局部变量 变量_D8F20125, 自定义_1DAA0141
    .局部变量 变量_D9F20125, 整数型
    .局部变量 变量_DAF20125, 文本型

    数组清零 (服务列表)
    变量_CCF20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_CCF20125 ≠ 0)
        DLL_EnumServicesStatusExA (变量_CCF20125, 0, 48, 服务状态, 0, 0, 变量_CFF20125, 变量_D0F20125, 变量_D1F20125, 字符 (0))
        变量_D2F20125 ＝ GlobalAlloc (64, 变量_CFF20125)
        变量_CDF20125 ＝ DLL_EnumServicesStatusExA (变量_CCF20125, 0, 48, 服务状态, 变量_D2F20125, 变量_CFF20125, 变量_CFF20125, 变量_D0F20125, 变量_D1F20125, 字符 (0))
        .如果真 (变量_CDF20125)
            重定义数组 (服务列表, 假, 变量_D0F20125)
            .变量循环首 (0, 变量_D0F20125 － 1, 1, 变量_D3F20125)
                变量_D5F20125 ＝ 指针到字节集 (变量_D2F20125 ＋ 44 × 变量_D3F20125, 44)
                DLL_RtlMoveMemory33 (变量_D4F20125, 变量_D5F20125, 44)
                服务列表 [变量_D3F20125 ＋ 1].服务名称 ＝ 指针到文本 (变量_D4F20125.成员_75F30135)
                服务列表 [变量_D3F20125 ＋ 1].显示名称 ＝ 指针到文本 (变量_D4F20125.成员_76F30135)
                服务列表 [变量_D3F20125 ＋ 1].进程ID ＝ 变量_D4F20125.成员_77F30135.成员_7FF30135
                
                变量_D6F20125 ＝ OpenService (变量_CCF20125, 指针到文本 (变量_D4F20125.成员_75F30135), 983551)
                变量_CDF20125 ＝ QueryServiceConfig (变量_D6F20125, 0, 0, 变量_D9F20125)
                变量_D7F20125 ＝ GlobalAlloc (64, 变量_D9F20125)
                变量_CDF20125 ＝ QueryServiceConfig (变量_D6F20125, 变量_D7F20125, 变量_D9F20125, 变量_D9F20125)
                .如果真 (变量_CDF20125)
                    DLL_RtlMoveMemory32 (变量_D8F20125, 变量_D7F20125, 36)
                    服务列表 [变量_D3F20125 ＋ 1].描述 ＝ 取服务描述 (指针到文本 (变量_D4F20125.成员_75F30135))
                    服务列表 [变量_D3F20125 ＋ 1].服务状态 ＝ GetServiceState (变量_D4F20125.成员_77F30135.成员_79F30135)
                    服务列表 [变量_D3F20125 ＋ 1].文件路径 ＝ 指针到文本 (变量_D8F20125.成员_25AA0135)
                    .判断开始 (变量_D8F20125.成员_23AA0135 ＝ 2 且 变量_D4F20125.成员_77F30135.成员_78F30135 ＝ 32)
                        服务列表 [变量_D3F20125 ＋ 1].启动类型 ＝ “自动”
                    .判断 (变量_D8F20125.成员_23AA0135 ＝ 2 且 变量_D4F20125.成员_77F30135.成员_78F30135 ＝ 16)
                        服务列表 [变量_D3F20125 ＋ 1].启动类型 ＝ “自动(延迟启动)”
                    .判断 (变量_D8F20125.成员_23AA0135 ＝ 3)
                        服务列表 [变量_D3F20125 ＋ 1].启动类型 ＝ “手动”
                    .判断 (变量_D8F20125.成员_23AA0135 ＝ 4)
                        服务列表 [变量_D3F20125 ＋ 1].启动类型 ＝ “禁用”
                    .默认
                        
                    .判断结束
                    变量_DAF20125 ＝ 到大写 (指针到文本 (变量_D8F20125.成员_29AA0135))
                    .判断开始 (寻找文本 (变量_DAF20125, 到大写 (“LocalService”), , 假) ≠ -1)
                        服务列表 [变量_D3F20125 ＋ 1].登陆为 ＝ “本地服务”
                    .判断 (寻找文本 (变量_DAF20125, 到大写 (“NetworkService”), , 假) ≠ -1)
                        服务列表 [变量_D3F20125 ＋ 1].登陆为 ＝ “网络服务”
                    .判断 (寻找文本 (变量_DAF20125, 到大写 (“LocalSystem”), , 假) ≠ -1)
                        服务列表 [变量_D3F20125 ＋ 1].登陆为 ＝ “本地系统”
                    .默认
                        服务列表 [变量_D3F20125 ＋ 1].登陆为 ＝ 变量_DAF20125
                    .判断结束
                    GlobalFree (变量_D7F20125)
                .如果真结束
                CloseServiceHandle (变量_D6F20125)
            .变量循环尾 ()
        .如果真结束
        GlobalFree (变量_D2F20125)
        CloseServiceHandle (变量_CCF20125)
    .如果真结束
    返回 (变量_D0F20125)

.子程序 枚举依赖服务, 整数型
    .参数 变量_DBF20125, 文本型
    .参数 变量_DCF20125, 精易_系统服务列表, 数组
    .局部变量 变量_DDF20125, 整数型
    .局部变量 变量_DEF20125, 整数型
    .局部变量 变量_DFF20125, 整数型
    .局部变量 变量_E0F20125, 整数型
    .局部变量 变量_E1F20125, 整数型
    .局部变量 变量_E2F20125, 逻辑型
    .局部变量 变量_E3F20125, 整数型
    .局部变量 变量_E4F20125, 自定义_8EF30141
    .局部变量 变量_E5F20125, 字节集
    .局部变量 变量_E6F20125, 整数型
    .局部变量 变量_E7F20125, 自定义_1DAA0141
    .局部变量 变量_E8F20125, 文本型
    .局部变量 变量_E9F20125, 整数型

    数组清零 (变量_DCF20125)
    变量_DDF20125 ＝ OpenSCManagerA (0, 0, #SC_MANAGER_ALL_ACCESS)
    .如果真 (变量_DDF20125 ≠ 0)
        变量_DEF20125 ＝ OpenService (变量_DDF20125, 变量_DBF20125, 4 ＋ 8 ＋ 32)
        .如果真 (变量_DEF20125 ≠ 0)
            DLL_EnumDependentServicesA (变量_DEF20125, 3, 变量_DFF20125, 0, 变量_E0F20125, 变量_E1F20125)
            变量_DFF20125 ＝ GlobalAlloc (64, 变量_E0F20125)
            变量_E2F20125 ＝ DLL_EnumDependentServicesA (变量_DEF20125, 3, 变量_DFF20125, 变量_E0F20125, 变量_E0F20125, 变量_E1F20125)
            .如果真 (变量_E2F20125)
                重定义数组 (变量_DCF20125, 假, 变量_E1F20125)
                .变量循环首 (0, 变量_E1F20125 － 1, 1, 变量_E3F20125)
                    变量_E5F20125 ＝ 指针到字节集 (变量_DFF20125 ＋ 36 × 变量_E3F20125, 36)
                    DLL_RtlMoveMemory34 (变量_E4F20125, 变量_E5F20125, 36)
                    变量_DCF20125 [变量_E3F20125 ＋ 1].服务名称 ＝ 指针到文本 (变量_E4F20125.成员_8FF30135)
                    变量_DCF20125 [变量_E3F20125 ＋ 1].显示名称 ＝ 指针到文本 (变量_E4F20125.成员_90F30135)
                    
                    变量_E6F20125 ＝ OpenService (变量_DDF20125, 指针到文本 (变量_E4F20125.成员_8FF30135), #GENERIC_READ)
                    变量_E2F20125 ＝ QueryServiceConfig (变量_E6F20125, 0, 0, 变量_E0F20125)
                    变量_E9F20125 ＝ GlobalAlloc (64, 变量_E0F20125)
                    变量_E2F20125 ＝ QueryServiceConfig (变量_E6F20125, 变量_E9F20125, 变量_E0F20125, 变量_E0F20125)
                    .如果真 (变量_E2F20125)
                        DLL_RtlMoveMemory32 (变量_E7F20125, 变量_E9F20125, 36)
                        变量_DCF20125 [变量_E3F20125 ＋ 1].描述 ＝ 取服务描述 (指针到文本 (变量_E4F20125.成员_8FF30135))
                        变量_DCF20125 [变量_E3F20125 ＋ 1].服务状态 ＝ GetServiceState (变量_E4F20125.成员_91F30135.成员_2CAA0135)
                        变量_DCF20125 [变量_E3F20125 ＋ 1].文件路径 ＝ 指针到文本 (变量_E7F20125.成员_25AA0135)
                        .判断开始 (变量_E7F20125.成员_23AA0135 ＝ 2 且 变量_E4F20125.成员_91F30135.成员_2BAA0135 ＝ 32)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].启动类型 ＝ “自动”
                        .判断 (变量_E7F20125.成员_23AA0135 ＝ 2 且 变量_E4F20125.成员_91F30135.成员_2BAA0135 ＝ 16)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].启动类型 ＝ “自动(延迟启动)”
                        .判断 (变量_E7F20125.成员_23AA0135 ＝ 3)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].启动类型 ＝ “手动”
                        .判断 (变量_E7F20125.成员_23AA0135 ＝ 4)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].启动类型 ＝ “禁用”
                        .默认
                            
                        .判断结束
                        变量_E8F20125 ＝ 到大写 (指针到文本 (变量_E7F20125.成员_29AA0135))
                        .判断开始 (寻找文本 (变量_E8F20125, 到大写 (“LocalService”), , 假) ≠ -1)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].登陆为 ＝ “本地服务”
                        .判断 (寻找文本 (变量_E8F20125, 到大写 (“NetworkService”), , 假) ≠ -1)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].登陆为 ＝ “网络服务”
                        .判断 (寻找文本 (变量_E8F20125, 到大写 (“LocalSystem”), , 假) ≠ -1)
                            变量_DCF20125 [变量_E3F20125 ＋ 1].登陆为 ＝ “本地系统”
                        .默认
                            变量_DCF20125 [变量_E3F20125 ＋ 1].登陆为 ＝ 变量_E8F20125
                        .判断结束
                        处理事件 ()
                    .如果真结束
                    CloseServiceHandle (变量_E6F20125)
                    GlobalFree (变量_E9F20125)
                .变量循环尾 ()
            .如果真结束
            CloseServiceHandle (变量_DEF20125)
        .如果真结束
        CloseServiceHandle (变量_DDF20125)
    .如果真结束
    返回 (变量_E1F20125)

.子程序 停止所有依赖服务
    .参数 变量_EAF20125, 文本型
    .局部变量 变量_EBF20125, 整数型
    .局部变量 变量_ECF20125, 整数型
    .局部变量 变量_EDF20125, 整数型
    .局部变量 变量_EEF20125, 整数型
    .局部变量 变量_EFF20125, 整数型
    .局部变量 变量_F0F20125, 逻辑型
    .局部变量 变量_F1F20125, 整数型
    .局部变量 变量_F2F20125, 自定义_8EF30141
    .局部变量 变量_F3F20125, 字节集
    .局部变量 变量_F4F20125, 整数型
    .局部变量 变量_F5F20125, 自定义_1EAA0141
    .局部变量 变量_F6F20125, 整数型
    .局部变量 变量_F7F20125, 整数型

    变量_F6F20125 ＝ 取启动时间 ()
    变量_F7F20125 ＝ 30000
    变量_EBF20125 ＝ OpenSCManagerA (0, 0, #GENERIC_READ)
    .如果真 (变量_EBF20125 ≠ 0)
        变量_ECF20125 ＝ OpenService (变量_EBF20125, 变量_EAF20125, 32 ＋ 4 ＋ 8)
        .如果真 (变量_ECF20125 ≠ 0)
            DLL_EnumDependentServicesA (变量_ECF20125, 1, 变量_EDF20125, 0, 变量_EEF20125, 变量_EFF20125)
            变量_EDF20125 ＝ GlobalAlloc (64, 变量_EEF20125)
            变量_F0F20125 ＝ DLL_EnumDependentServicesA (变量_ECF20125, 1, 变量_EDF20125, 变量_EEF20125, 变量_EEF20125, 变量_EFF20125)
            .如果真 (变量_F0F20125)
                .变量循环首 (0, 变量_EFF20125 － 1, 1, 变量_F1F20125)
                    变量_F3F20125 ＝ 指针到字节集 (变量_EDF20125 ＋ 36 × 变量_F1F20125, 36)
                    DLL_RtlMoveMemory34 (变量_F2F20125, 变量_F3F20125, 36)
                    变量_F4F20125 ＝ OpenService (变量_EBF20125, 指针到文本 (变量_F2F20125.成员_8FF30135), 位或 (32, 4))
                    .如果真 (ControlService (变量_F4F20125, 1, 变量_F5F20125))
                        .判断循环首 (变量_F5F20125.成员_2CAA0135 ≠ 1)
                            延时 (变量_F5F20125.成员_31AA0135)
                            QueryServiceStatus (变量_F4F20125, 变量_F5F20125)
                            .判断开始 (变量_F5F20125.成员_2CAA0135 ＝ 1)
                                跳出循环 ()
                            .判断 (取启动时间 () － 变量_F6F20125 ＞ 变量_F7F20125)
                                输出调试文本 (“停止服务失败，原因：超时！”)
                                跳出循环 ()
                            .默认
                                
                            .判断结束
                            处理事件 ()
                        .判断循环尾 ()
                    .如果真结束
                    CloseServiceHandle (变量_F4F20125)
                .变量循环尾 ()
                GlobalFree (变量_EDF20125)
            .如果真结束
            CloseServiceHandle (变量_ECF20125)
        .如果真结束
        CloseServiceHandle (变量_EBF20125)
    .如果真结束
    

.子程序 GetServiceState, 文本型
    .参数 变量_F8F20125, 整数型

    .判断开始 (变量_F8F20125 ＝ 1)
        返回 (“已停止”)
    .判断 (变量_F8F20125 ＝ 2)
        返回 (“启动期间”)
    .判断 (变量_F8F20125 ＝ 3)
        返回 (“停止期间”)
    .判断 (变量_F8F20125 ＝ 4)
        返回 (“正运行”)
    .判断 (变量_F8F20125 ＝ 5)
        返回 (“继续”)
    .判断 (变量_F8F20125 ＝ 6)
        返回 (“暂停期间”)
    .判断 (变量_F8F20125 ＝ 7)
        返回 (“已暂停”)
    .默认
        返回 (“”)
    .判断结束
    

.子程序 重启服务, 逻辑型, 公开, 重新启动系统服务，成功返回真，失败返回假
    .参数 参_服务名, 文本型

    .如果真 (停止服务 (参_服务名))
        返回 (开始服务 (参_服务名))
    .如果真结束
    返回 (假)

