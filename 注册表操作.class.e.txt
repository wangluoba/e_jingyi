.版本 2

.程序集 注册表操作, , 公开
.子程序 _初始化
    

.子程序 _销毁
    

.子程序 _打开项, 整数型
    .参数 变量_976B0125, 文本型
    .参数 变量_986B0125, 逻辑型, 可空
    .局部变量 变量_996B0125, 整数型
    .局部变量 变量_9A6B0125, 整数型
    .局部变量 变量_9B6B0125, 文本型
    .局部变量 变量_9C6B0125, 整数型
    .局部变量 变量_9D6B0125, 整数型

    变量_9C6B0125 ＝ 寻找文本 (变量_976B0125, “\”, , 假)
    变量_9B6B0125 ＝ 取文本左边 (变量_976B0125, 变量_9C6B0125 － 1)
    变量_9B6B0125 ＝ 到大写 (变量_9B6B0125)
    .判断开始 (变量_9B6B0125 ＝ “HKEY_CLASSES_ROOT”)
        变量_996B0125 ＝ 2147483648
    .判断 (变量_9B6B0125 ＝ “HKEY_CURRENT_USER”)
        变量_996B0125 ＝ 2147483649
    .判断 (变量_9B6B0125 ＝ “HKEY_LOCAL_MACHINE”)
        变量_996B0125 ＝ 2147483650
    .判断 (变量_9B6B0125 ＝ “HKEY_USERS”)
        变量_996B0125 ＝ 2147483651
    .判断 (文本比较 (变量_9B6B0125, “HKEY_CURRENT_CONFIG”, 假) ＝ 0)
        变量_996B0125 ＝ 2147483653
    .默认
        返回 (0)
    .判断结束
    .如果 (变量_986B0125)
        变量_9D6B0125 ＝ RegCreateKeyA (变量_996B0125, 取文本右边 (变量_976B0125, 取文本长度 (变量_976B0125) － 变量_9C6B0125), 变量_9A6B0125)
    .否则
        变量_9D6B0125 ＝ RegOpenKeyA (变量_996B0125, 取文本右边 (变量_976B0125, 取文本长度 (变量_976B0125) － 变量_9C6B0125), 变量_9A6B0125)
    .如果结束
    .如果真 (变量_9D6B0125 ＝ 0)
        返回 (变量_9A6B0125)
    .如果真结束
    返回 (0)

.子程序 枚举子项, 整数型, 公开, 枚举指定项名称下的子项(成功返回子项目数,失败返回-1)
    .参数 项名称, 文本型
    .参数 子项, 文本型, 可空 数组, 获取的子项数组
    .局部变量 变量_E36B0125, 整数型
    .局部变量 变量_E46B0125, 整数型
    .局部变量 变量_E56B0125, 文本型

    清除数组 (子项)
    变量_E36B0125 ＝ _打开项 (项名称)
    .如果真 (变量_E36B0125 ＝ 0)
        返回 (-1)
    .如果真结束
    变量_E56B0125 ＝ 取空白文本 (256)
    .判断循环首 (RegEnumKeyA (变量_E36B0125, 变量_E46B0125, 变量_E56B0125, 256) ＝ 0)
        加入成员 (子项, 变量_E56B0125)
        变量_E46B0125 ＝ 变量_E46B0125 ＋ 1
        处理事件 ()
    .判断循环尾 ()
    RegCloseKey (变量_E36B0125)
    返回 (取数组成员数 (子项))

.子程序 枚举键名, 整数型, 公开, 枚举指定项名称下的键名(成功返回键名数,失败返回-1)
    .参数 项名称, 文本型
    .参数 键名, 文本型, 可空 数组, 获取的键名数组
    .参数 键值, 字节集, 可空 数组, 对应键名的键值
    .参数 类型, 整数型, 可空 数组, 对应键值的类型
    .局部变量 变量_37EE0125, 整数型
    .局部变量 变量_38EE0125, 整数型
    .局部变量 变量_39EE0125, 文本型
    .局部变量 变量_3AEE0125, 字节集
    .局部变量 变量_3BEE0125, 整数型
    .局部变量 变量_3CEE0125, 整数型
    .局部变量 变量_3DEE0125, FILETIME
    .局部变量 变量_3EEE0125, 整数型
    .局部变量 变量_3FEE0125, 整数型

    清除数组 (键名)
    清除数组 (键值)
    清除数组 (类型)
    变量_37EE0125 ＝ _打开项 (项名称)
    .如果真 (变量_37EE0125 ＝ 0)
        返回 (-1)
    .如果真结束
    变量_3FEE0125 ＝ DLL_RegQueryInfoKeyA (变量_37EE0125, 字符 (0), 字符 (0), 0, 0, 0, 0, 变量_3EEE0125, 0, 0, 0, 变量_3DEE0125)
    .如果真 (变量_3FEE0125 ＝ 0)
        变量_39EE0125 ＝ 取空白文本 (256)
        .变量循环首 (0, 变量_3EEE0125 － 1, 1, 变量_38EE0125)
            RegEnumValueA (变量_37EE0125, 变量_38EE0125, 变量_39EE0125, 256, 0, 变量_3CEE0125, 变量_3AEE0125, 变量_3BEE0125)
            变量_3AEE0125 ＝ 取空白字节集 (变量_3BEE0125 ＋ 1)
            变量_3FEE0125 ＝ RegEnumValueA (变量_37EE0125, 变量_38EE0125, 变量_39EE0125, 256, 0, 变量_3CEE0125, 变量_3AEE0125, 变量_3BEE0125)
            .如果真 (变量_3FEE0125 ＝ 0)
                加入成员 (键名, 变量_39EE0125)
                加入成员 (键值, 变量_3AEE0125)
                加入成员 (类型, 变量_3CEE0125)
            .如果真结束
            
        .变量循环尾 ()
    .如果真结束
    RegCloseKey (变量_37EE0125)
    返回 (取数组成员数 (键名))

.子程序 取键名类型, 文本型, 公开, 失败返回空文本
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, 可空, 如：3600，留空将取第一个，(默认)
    .局部变量 变量_CB860125, 整数型
    .局部变量 变量_CE860125, 整数型
    .局部变量 变量_D2860125, 字节集
    .局部变量 变量_D3860125, 整数型
    .局部变量 变量_D6860125, 整数型
    .局部变量 变量_DB860125, 文本型

    变量_CB860125 ＝ _打开项 (项名称)
    变量_DB860125 ＝ 取空白文本 (256)
    .判断循环首 (RegEnumValueA (变量_CB860125, 变量_D6860125, 变量_DB860125, 256, 0, 变量_CE860125, 变量_D2860125, 变量_D3860125) ＝ 0)
        .如果真 (变量_DB860125 ＝ 键名)
            跳出循环 ()
        .如果真结束
        变量_D6860125 ＝ 变量_D6860125 ＋ 1
        变量_CE860125 ＝ -1
    .判断循环尾 ()
    .判断开始 (变量_CE860125 ＝ 0)
        返回 (“REG_NONE - 字节集，值为：” ＋ 到文本 (变量_CE860125))
    .判断 (变量_CE860125 ＝ 1)
        返回 (“REG_SZ - 字符串值，值为：” ＋ 到文本 (变量_CE860125))
    .判断 (变量_CE860125 ＝ 2)
        返回 (“REG_REG_EXPAND_SZ - 可扩充字符串值，值为：” ＋ 到文本 (变量_CE860125))
    .判断 (变量_CE860125 ＝ 3)
        返回 (“REG_BINARY - 二进制，值为：” ＋ 到文本 (变量_CE860125))
    .判断 (变量_CE860125 ＝ 4)
        返回 (“REG_DWORD - DWORD，值为：” ＋ 到文本 (变量_CE860125))
    .判断 (变量_CE860125 ＝ 7)
        返回 (“REG_MULTI_SZ - 多字符串值，值为：” ＋ 到文本 (变量_CE860125))
    .默认
        
    .判断结束
    RegCloseKey (变量_CB860125)
    返回 (“”)

.子程序 是否存在, 逻辑型, 公开, 判断指定注册项名称(键名)是否存在(存在返回真,否则返回假)
    .参数 项名称, 文本型, , 欲判断的项名称
    .参数 键名, 文本型, 可空, 欲判断的键名.如果为空则只判断项名称是否存在
    .局部变量 变量_0F6C0125, 整数型
    .局部变量 变量_106C0125, 整数型
    .局部变量 变量_116C0125, 字节集

    变量_0F6C0125 ＝ _打开项 (项名称)
    .如果真 (是否为空 (键名))
        RegCloseKey (变量_0F6C0125)
        返回 (变量_0F6C0125 ≠ 0)
    .如果真结束
    变量_116C0125 ＝ 取空白字节集 (256)
    变量_106C0125 ＝ RegQueryValueExA (变量_0F6C0125, 键名, 0, 0, 变量_116C0125, 256)
    RegCloseKey (变量_0F6C0125)
    返回 (变量_106C0125 ＝ 0)

.子程序 刷新项, 逻辑型, 公开, 将对项和它的子项作出的改动实际写入磁盘
    .参数 项名称, 文本型
    .局部变量 变量_136C0125, 整数型
    .局部变量 变量_146C0125, 整数型
    .局部变量 变量_156C0125, 字节集

    变量_136C0125 ＝ _打开项 (项名称)
    .如果真 (变量_136C0125 ＝ 0)
        返回 (假)
    .如果真结束
    变量_146C0125 ＝ DLL_RegFlushKey (变量_136C0125)
    RegCloseKey (变量_136C0125)
    返回 (变量_146C0125 ＝ 0)

.子程序 写字节集, 逻辑型, 公开, [REG_NONE]
    .参数 项名称, 文本型
    .参数 键名, 文本型
    .参数 欲写入值, 字节集
    .参数 类型, 整数型, 可空, 可空：写入的类型
    .局部变量 变量_91860125, 整数型
    .局部变量 变量_92860125, 整数型
    .局部变量 变量_93860125, 字节集

    变量_91860125 ＝ _打开项 (项名称, 真)
    .如果真 (变量_91860125 ＝ 0)
        返回 (假)
    .如果真结束
    变量_92860125 ＝ RegSetValueExA (变量_91860125, 键名, 0, 类型, 欲写入值, 取字节集长度 (欲写入值))
    RegCloseKey (变量_91860125)
    返回 (变量_92860125 ＝ 0)

.子程序 取字节集, 字节集, 公开, [REG_NONE]
    .参数 项名称, 文本型
    .参数 键名, 文本型
    .参数 类型, 整数型, 参考 可空, 可空：取出数据的类型
    .局部变量 变量_9B860125, 整数型
    .局部变量 变量_9C860125, 整数型
    .局部变量 变量_9D860125, 字节集
    .局部变量 变量_9E860125, 整数型

    变量_9B860125 ＝ _打开项 (项名称)
    .如果真 (变量_9B860125 ＝ 0)
        返回 ({ })
    .如果真结束
    变量_9C860125 ＝ RegQueryValueExA (变量_9B860125, 键名, 0, 类型, 变量_9D860125, 变量_9E860125)
    变量_9D860125 ＝ 取空白字节集 (变量_9E860125)
    变量_9C860125 ＝ RegQueryValueExA (变量_9B860125, 键名, 0, 类型, 变量_9D860125, 变量_9E860125)
    RegCloseKey (变量_9B860125)
    .如果真 (变量_9C860125 ＝ 0)
        返回 (变量_9D860125)
    .如果真结束
    返回 ({ })

.子程序 写注册项Ex, 逻辑型, 公开, 用于写入带有斜杠的注册项
    .参数 根目录, 整数型, , 可以为以下常量值之一：1、#根类；2、#现行设置；3、#现行用户；4、#本地机器；5、#所有用户。
    .参数 注册表路径, 文本型
    .参数 注册表子项名, 文本型
    .参数 欲写入值, 字节集
    .参数 写入类型, 整数型, 可空, #REG_
    .局部变量 变量_F6C10125, 整数型
    .局部变量 变量_F7C10125, 整数型
    .局部变量 变量_F8C10125, 整数型
    .局部变量 变量_F9C10125, 逻辑型

    .如果真 (是否为空 (写入类型))
        写入类型 ＝ 1
    .如果真结束
    .如果真 (根目录 ＞ 0 且 根目录 ≤ 5)
        变量_F6C10125 ＝ 多项选择 (根目录, #HKEY_CLASSES_ROOT, #HKEY_CURRENT_CONFIG, #HKEY_CURRENT_USER, #HKEY_LOCAL_MACHINE, #HKEY_USERS)
        .如果真 (RegOpenKeyExA (变量_F6C10125, “”, 0, 位或 (131097, 131078), 变量_F7C10125) ＝ 0)
            .如果真 (RegCreateKeyExA (变量_F7C10125, 注册表路径, 0, 0, 0, 位或 (131097, 131078), 0, 变量_F8C10125, 0) ＝ 0)
                .如果真 (RegSetValueExA (变量_F8C10125, 注册表子项名, 0, 写入类型, 欲写入值, 取字节集长度 (欲写入值)) ＝ 0)
                    变量_F9C10125 ＝ 真
                .如果真结束
                RegCloseKey (变量_F8C10125)
            .如果真结束
            RegCloseKey (变量_F7C10125)
        .如果真结束
        
    .如果真结束
    返回 (变量_F9C10125)

.子程序 写DWORD值, 逻辑型, 公开, [REG_DWORD]成功返回真,失败返回假
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600
    .参数 欲写入值, 整数型, , 如：0

    返回 (写字节集 (项名称, 键名, 到字节集 (欲写入值), 4))

.子程序 取DWORD值, 整数型, 公开, [REG_DWORD]
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600

    返回 (取字节集数据 (取字节集 (项名称, 键名, 4), #整数型, ))

.子程序 写二进制值, 逻辑型, 公开, [REG_BINARY]成功返回真,失败返回假
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600
    .参数 欲写入值, 字节集

    返回 (写字节集 (项名称, 键名, 欲写入值, 3))

.子程序 取二进制值, 字节集, 公开, [REG_BINARY]
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600

    返回 (取字节集 (项名称, 键名, 3))

.子程序 写字符串值, 逻辑型, 公开, [REG_SZ]成功返回真,失败返回假
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600
    .参数 欲写入值, 文本型

    返回 (写字节集 (项名称, 键名, 到字节集 (欲写入值) ＋ { 0 }, 1))

.子程序 取字符串值, 文本型, 公开, [REG_SZ]
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600

    返回 (到文本 (取字节集 (项名称, 键名, 1)))

.子程序 写多字符串值, 逻辑型, 公开, [REG_MULTI_SZ]成功返回真,失败返回假
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600
    .参数 欲写入值, 文本型

    返回 (写字节集 (项名称, 键名, 子字节集替换 (到字节集 (欲写入值), { 13, 10 }, { 0 }, , ) ＋ { 0, 0 }, 7))

.子程序 取多字符串值, 文本型, 公开, [REG_MULTI_SZ]
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600

    返回 (到文本 (子字节集替换 (取字节集 (项名称, 键名, 7), { 0 }, { 13, 10 }, , )))

.子程序 写可扩充字符串值, 逻辑型, 公开, [REG_EXPAND_SZ]成功返回真,失败返回假
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 键名, 文本型, , 如：3600
    .参数 欲写入值, 文本型

    返回 (写字节集 (项名称, 键名, 到字节集 (欲写入值) ＋ { 0 }, 2))

.子程序 取可扩充字符串值, 文本型, 公开, [REG_REG_EXPAND_SZ]
    .参数 项名称, 文本型
    .参数 键名, 文本型

    返回 (到文本 (取字节集 (项名称, 键名, 2)))

.子程序 删除项, 逻辑型, 公开, 删除指定项名称以及它的所有子项与键值
    .参数 项名称, 文本型, , 欲删除的项名称,尾部不要加"\"
    .局部变量 变量_CB6B0125, 整数型
    .局部变量 变量_CC6B0125, 整数型
    .局部变量 变量_CD6B0125, 整数型
    .局部变量 变量_CE6B0125, 文本型, , "0"
    .局部变量 变量_CF6B0125, 整数型

    .如果真 (取文本右边 (项名称, 1) ＝ “\”)
        返回 (假)
    .如果真结束
    变量_CD6B0125 ＝ 倒找文本 (项名称, “\”, , 假)
    变量_CB6B0125 ＝ _打开项 (取文本左边 (项名称, 变量_CD6B0125))
    .如果真 (变量_CB6B0125 ＝ 0)
        返回 (假)
    .如果真结束
    .计次循环首 (枚举子项 (项名称, 变量_CE6B0125), 变量_CF6B0125)
        删除项 (项名称 ＋ “\” ＋ 变量_CE6B0125 [变量_CF6B0125])
    .计次循环尾 ()
    变量_CC6B0125 ＝ RegDeleteKeyA (变量_CB6B0125, 取文本右边 (项名称, 取文本长度 (项名称) － 变量_CD6B0125))
    RegCloseKey (变量_CB6B0125)
    返回 (变量_CC6B0125 ＝ 0)

.子程序 删除键名, 逻辑型, 公开, 删除指定项下的某个键名
    .参数 项名称, 文本型, , 欲删除键名所在的项名称
    .参数 键名, 文本型, , 欲删除的键名
    .局部变量 变量_BC6B0125, 整数型
    .局部变量 变量_BD6B0125, 整数型

    变量_BC6B0125 ＝ _打开项 (项名称)
    .如果真 (变量_BC6B0125 ＝ 0)
        返回 (假)
    .如果真结束
    变量_BD6B0125 ＝ DLL_RegDeleteValueA (变量_BC6B0125, 键名)
    RegCloseKey (变量_BC6B0125)
    返回 (变量_BD6B0125 ＝ 0)

.子程序 取字符串值_CMD, 文本型, 公开, 用CMD读取方式取指定字符串值
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 类型, 整数型, 可空, 如：#REG_SZ
    .参数 键名, 文本型, , 如：3600
    .局部变量 变量_55D30225, 文本型
    .局部变量 变量_56D30225, 文本型

    
    变量_55D30225 ＝ 系统_取DOS执行结果 (“REG QUERY ” ＋ 项名称 ＋ “ /v ” ＋ 键名 ＋ “ /reg:” ＋ 选择 (系统_是否64位操作系统 (), “64”, “32”))
    .如果真 (类型 ≤ 0 且 类型 ＞ 7)
        类型 ＝ #REG_SZ
    .如果真结束
    变量_56D30225 ＝ 多项选择 (类型, “REG_SZ”, “REG_EXPAND_SZ”, “REG_BINARY”, “REG_DWORD”, “REG_DWORD_BIG_ENDIAN”, “REG_LINK”, “REG_MULTI_SZ”)
    变量_55D30225 ＝ 文本_取出中间文本 (变量_55D30225, 键名 ＋ “    ” ＋ 变量_56D30225 ＋ “    ”, #换行符, , )
    返回 (变量_55D30225)

.子程序 项重命名, 逻辑型, 公开, 成功返回真
    .参数 项名称, 文本型, , 如：HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\NetBT\Parameters
    .参数 新项名, 文本型, , 如：3600
    .局部变量 变量_30E60225, 整数型
    .局部变量 变量_34E60225, 字节集
    .局部变量 变量_3CE60225, 自定义_40EE0141
    .局部变量 变量_40E60225, 整数型

    变量_30E60225 ＝ _打开项 (项名称, 假)
    .如果真 (变量_30E60225 ＝ 0)
        返回 (假)
    .如果真结束
    变量_34E60225 ＝ 编码_Ansi到Unicode (新项名, )
    DLL_RtlInitUnicodeString (变量_3CE60225, 变量_34E60225)
    变量_40E60225 ＝ DLL_NtRenameKey (变量_30E60225, 变量_3CE60225)
    RegCloseKey (变量_30E60225)
    返回 (变量_40E60225 ＝ 0)

