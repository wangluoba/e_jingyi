.版本 2

.程序集 类_快速文本, , 公开, 文本的快速累加
.程序集变量 _文件句柄, 整数型
.程序集变量 集_缓冲区, 字节集

.子程序 _初始化
    _文件句柄 ＝ 打开内存文件 ()

.子程序 _销毁
    关闭文件 (_文件句柄)

.子程序 添加, , 公开
    .参数 文本内容, 文本型

    写出文本 (_文件句柄, 文本内容)

.子程序 取文本, 文本型, 公开
    .如果真 (取读写位置 (_文件句柄) ≠ 0)
        移到文件首 (_文件句柄)
    .如果真结束
    返回 (读入文本 (_文件句柄, 取文件长度 (_文件句柄)))
    

.子程序 取文件号, 整数型, 公开
    返回 (_文件句柄)
    

.子程序 插入, 逻辑型, 公开, 在指定字符后(含中文)插入文本内容
    .参数 参_插入位置, 整数型, 可空, 字符数,中文也算一个字符,可空,默认最前
    .参数 参_文本内容, 文本型, , 要插入的文本内容
    .局部变量 变量_E1A70225, 整数型
    .局部变量 变量_E2A70225, 整数型

    写缓存区 ()
    变量_E1A70225 ＝ 取字节集长度 (集_缓冲区)
    变量_E2A70225 ＝ 1
    .如果真 (是否为空 (参_插入位置))
        参_插入位置 ＝ 0
    .如果真结束
    变量_E2A70225 ＝ 字数到位置 (参_插入位置)
    变量_E2A70225 ＝ 变量_E2A70225 － 1
    移动读写位置 (_文件句柄, #文件首, 变量_E2A70225)
    返回 (插入文本 (_文件句柄, 参_文本内容))

.子程序 取文本内容, 文本型, 公开, 取出文本内容
    .参数 参_起始位置, 整数型, 可空, 可空.默认从第一个字符开始
    .参数 参_字符数, 整数型, 可空, 可空,默认取全部
    .局部变量 变量_E5A70225, 整数型
    .局部变量 变量_E6A70225, 整数型
    .局部变量 变量_E7A70225, 整数型

    .如果真 (取读写位置 (_文件句柄) ≠ 0)
        移到文件首 (_文件句柄)
    .如果真结束
    .如果真 (是否为空 (参_字符数) 且 是否为空 (参_起始位置))
        返回 (读入文本 (_文件句柄, ))
    .如果真结束
    集_缓冲区 ＝ 读入字节集 (_文件句柄, 取文件长度 (_文件句柄))
    .如果真 (是否为空 (参_起始位置))
        参_起始位置 ＝ 1
    .如果真结束
    .如果真 (是否为空 (参_字符数))
        参_字符数 ＝ 取字节集长度 (集_缓冲区)
    .如果真结束
    参_起始位置 ＝ 参_起始位置 － 1
    变量_E5A70225 ＝ 1
    变量_E6A70225 ＝ 取字节集长度 (集_缓冲区)
    变量_E5A70225 ＝ 字数到位置 (参_起始位置)
    变量_E7A70225 ＝ 字数到位置 (参_起始位置 ＋ 参_字符数)
    返回 (到文本 (取字节集中间 (集_缓冲区, 变量_E5A70225, 变量_E7A70225 － 变量_E5A70225)))

.子程序 清空内容, , 公开, 清空文本内容
    关闭文件 (_文件句柄)
    _文件句柄 ＝ 打开内存文件 ()

.子程序 删除文本, 逻辑型, 公开, 删除指定位置内容
    .参数 参_起始位置, 整数型, , 起始位置
    .参数 参_字符数, 整数型, , 删除个数,汉字算一个
    .局部变量 变量_EAA70225, 整数型
    .局部变量 变量_EBA70225, 整数型
    .局部变量 变量_ECA70225, 整数型

    .如果真 (取读写位置 (_文件句柄) ≠ 0)
        移到文件首 (_文件句柄)
    .如果真结束
    集_缓冲区 ＝ 读入字节集 (_文件句柄, 取文件长度 (_文件句柄))
    变量_EBA70225 ＝ 取字节集长度 (集_缓冲区)
    变量_EAA70225 ＝ 字数到位置 (参_起始位置)
    变量_ECA70225 ＝ 字数到位置 (参_起始位置 ＋ 参_字符数)
    移动读写位置 (_文件句柄, #文件首, 变量_EAA70225 － 1)
    返回 (删除数据 (_文件句柄, 变量_ECA70225 － 变量_EAA70225))

.子程序 替换文本内容, 逻辑型, 公开, 替换指定位置文本
    .参数 参_替换位置, 整数型, , 起始位置
    .参数 参_替换长度, 整数型, , 替换长度
    .参数 参_替换文本, 文本型, 可空, 替换文本,可空
    .局部变量 变量_F0A70225, 整数型
    .局部变量 变量_F1A70225, 整数型
    .局部变量 变量_F2A70225, 整数型

    写缓存区 ()
    变量_F0A70225 ＝ 1
    变量_F2A70225 ＝ 取字节集长度 (集_缓冲区)
    变量_F0A70225 ＝ 字数到位置 (参_替换位置)
    变量_F1A70225 ＝ 字数到位置 (参_替换位置 ＋ 参_替换长度)
    清空内容 ()
    返回 (写出字节集 (_文件句柄, 字节集替换 (集_缓冲区, 变量_F0A70225, 变量_F1A70225 － 变量_F0A70225, 到字节集 (参_替换文本))))

.子程序 取长度, 整数型, 公开, 取字符数,汉字算一个
    .如果真 (取读写位置 (_文件句柄) ≠ 0)
        移到文件首 (_文件句柄)
    .如果真结束
    返回 (汇编_取字数 (到字节集 (取文本内容 (, ))))

.子程序 寻找文本内容, 整数型, 公开, 寻找文本
    .参数 参_寻找文本内容, 文本型, , 欲寻找文本
    .参数 参_起始寻找位置, 整数型, 可空, 起始位置,可空,默认从最头开始
    .局部变量 变量_F5A70225, 整数型
    .局部变量 变量_F6A70225, 字节集
    .局部变量 变量_A1E00225, 整数型

    写缓存区 ()
    变量_F5A70225 ＝ 1
    .如果真 (是否为空 (参_起始寻找位置))
        参_起始寻找位置 ＝ 1
    .如果真结束
    变量_F5A70225 ＝ 字数到位置 (参_起始寻找位置)
    变量_A1E00225 ＝ 寻找字节集 (集_缓冲区, 到字节集 (参_寻找文本内容), 变量_F5A70225)
    .如果真 (变量_A1E00225 ＝ 1)
        返回 (1)
    .如果真结束
    变量_F6A70225 ＝ 取字节集左边 (集_缓冲区, 变量_A1E00225 － 1)
    .如果 (变量_F6A70225 ＝ { })
        返回 (0)
    .否则
        返回 (汇编_取字数 (变量_F6A70225) ＋ 1)
    .如果结束
    

.子程序 替换子文本内容, 逻辑型, 公开, 子文本替换
    .参数 参_被替换文本, 文本型, , 被替换内容
    .参数 参_替换为文本, 文本型, 可空, 替换为内容,可空.默认删除
    .参数 参_起始替换位置, 整数型, 可空, 起始位置,可空,默认从最前开始
    .参数 参_最大替换次数, 整数型, 可空, 最大替换次数.可空.默认替换所有
    .局部变量 变量_FBA70225, 整数型
    .局部变量 变量_FCA70225, 整数型

    写缓存区 ()
    变量_FBA70225 ＝ 1
    变量_FCA70225 ＝ 取字节集长度 (集_缓冲区)
    .如果真 (是否为空 (参_起始替换位置))
        参_起始替换位置 ＝ 1
    .如果真结束
    变量_FBA70225 ＝ 字数到位置 (参_起始替换位置)
    清空内容 ()
    .如果 (是否为空 (参_最大替换次数))
        返回 (写出字节集 (_文件句柄, 子字节集替换 (集_缓冲区, 到字节集 (参_被替换文本), 到字节集 (参_替换为文本), 变量_FBA70225, )))
    .否则
        返回 (写出字节集 (_文件句柄, 子字节集替换 (集_缓冲区, 到字节集 (参_被替换文本), 到字节集 (参_替换为文本), 变量_FBA70225, 参_最大替换次数)))
    .如果结束
    

.子程序 汇编_取字数, 整数型, 公开, 取文本中英文字数
    .参数 参_内容, 字节集

    参_内容 ＝ 参_内容 ＋ { 0 }
    取变量堆栈地址_字节集 (参_内容)
    置入代码 ({ 139, 24, 139, 75, 4, 141, 115, 8, 172, 132, 192, 116, 7, 168, 128, 116, 1, 70, 226, 244, 139, 67, 4, 41, 200, 201, 194, 4, 0 })
    返回 (0)

.子程序 置文本, 逻辑型, 公开, 置文本
    .参数 参_文本, 文本型, , 文本内容

    关闭文件 (_文件句柄)
    _文件句柄 ＝ 打开内存文件 ()
    返回 (写出文本 (_文件句柄, 参_文本))

.子程序 从文件读入, 逻辑型, 公开, 读文件内容到内存
    .参数 参_文件名, 文本型, , 要读入的文件名

    关闭文件 (_文件句柄)
    _文件句柄 ＝ 打开内存文件 ()
    返回 (写出字节集 (_文件句柄, 读入文件 (参_文件名)))

.子程序 写出到文件, 逻辑型, 公开, 写内存内容到文件
    .参数 参_文件名, 文本型, , 要写出的文件名

    .如果真 (取读写位置 (_文件句柄) ≠ 0)
        移到文件首 (_文件句柄)
    .如果真结束
    返回 (写到文件 (参_文件名, 读入字节集 (_文件句柄, 取文件长度 (_文件句柄))))

.子程序 删全部空格, 逻辑型, 公开, 删除所有中英文空格
    .局部变量 变量_01A80225, 整数型
    .局部变量 变量_02A80225, 整数型

    写缓存区 ()
    变量_02A80225 ＝ 取字节集长度 (集_缓冲区)
    清空内容 ()
    变量_01A80225 ＝ 1
    .判断循环首 (变量_02A80225 ＞ 变量_01A80225)
        .判断开始 (集_缓冲区 [变量_01A80225] ＝ 32)
            变量_01A80225 ＝ 变量_01A80225 ＋ 1
            到循环尾 ()
        .判断 (集_缓冲区 [变量_01A80225] ＝ 161 且 集_缓冲区 [变量_01A80225 ＋ 1] ＝ 161)
            变量_01A80225 ＝ 变量_01A80225 ＋ 2
            到循环尾 ()
        .默认
            写出字节集 (_文件句柄, 到字节集 (集_缓冲区 [变量_01A80225]))
            变量_01A80225 ＝ 变量_01A80225 ＋ 1
        .判断结束
        
    .判断循环尾 ()
    .如果 (取长度 () ＝ 0)
        返回 (假)
    .否则
        返回 (真)
    .如果结束
    

.子程序 写缓存区
    .如果真 (取读写位置 (_文件句柄) ≠ 0)
        移到文件首 (_文件句柄)
    .如果真结束
    集_缓冲区 ＝ 读入字节集 (_文件句柄, 取文件长度 (_文件句柄))

.子程序 删首尾空格, 逻辑型, 公开
    .局部变量 变量_03A80225, 整数型
    .局部变量 变量_04A80225, 整数型
    .局部变量 变量_05A80225, 整数型

    写缓存区 ()
    变量_04A80225 ＝ 取字节集长度 (集_缓冲区)
    清空内容 ()
    变量_03A80225 ＝ 1
    .判断循环首 (变量_04A80225 ＞ 变量_03A80225)
        .判断开始 (集_缓冲区 [变量_03A80225] ＝ 32)
            变量_03A80225 ＝ 变量_03A80225 ＋ 1
            到循环尾 ()
        .判断 (集_缓冲区 [变量_03A80225] ＝ 161 且 集_缓冲区 [变量_03A80225 ＋ 1] ＝ 161)
            变量_03A80225 ＝ 变量_03A80225 ＋ 2
            到循环尾 ()
        .默认
            跳出循环 ()
        .判断结束
        
    .判断循环尾 ()
    变量_05A80225 ＝ 变量_03A80225
    变量_03A80225 ＝ 变量_04A80225
    .判断循环首 (变量_03A80225 ＞ 1)
        .判断开始 (集_缓冲区 [变量_03A80225] ＝ 32)
            变量_03A80225 ＝ 变量_03A80225 － 1
            到循环尾 ()
        .判断 (集_缓冲区 [变量_03A80225] ＝ 161 且 集_缓冲区 [变量_03A80225 － 1] ＝ 161)
            变量_03A80225 ＝ 变量_03A80225 － 2
            到循环尾 ()
        .默认
            跳出循环 ()
        .判断结束
        
    .判断循环尾 ()
    返回 (写出字节集 (_文件句柄, 取字节集中间 (集_缓冲区, 变量_05A80225, 变量_03A80225 － 变量_05A80225 ＋ 1)))

.子程序 删首空格, 逻辑型, 公开
    .局部变量 变量_06A80225, 整数型
    .局部变量 变量_07A80225, 整数型

    写缓存区 ()
    变量_07A80225 ＝ 取字节集长度 (集_缓冲区)
    清空内容 ()
    变量_06A80225 ＝ 1
    .判断循环首 (变量_07A80225 ＞ 变量_06A80225)
        .判断开始 (集_缓冲区 [变量_06A80225] ＝ 32)
            变量_06A80225 ＝ 变量_06A80225 ＋ 1
            到循环尾 ()
        .判断 (集_缓冲区 [变量_06A80225] ＝ 161 且 集_缓冲区 [变量_06A80225 ＋ 1] ＝ 161)
            变量_06A80225 ＝ 变量_06A80225 ＋ 2
            到循环尾 ()
        .默认
            跳出循环 ()
        .判断结束
        
    .判断循环尾 ()
    返回 (写出字节集 (_文件句柄, 取字节集右边 (集_缓冲区, 变量_07A80225 － 变量_06A80225 ＋ 1)))

.子程序 删尾空格, 逻辑型, 公开
    .局部变量 变量_08A80225, 整数型
    .局部变量 变量_09A80225, 整数型

    写缓存区 ()
    变量_09A80225 ＝ 取字节集长度 (集_缓冲区)
    清空内容 ()
    变量_08A80225 ＝ 变量_09A80225
    .判断循环首 (变量_08A80225 ＞ 1)
        .判断开始 (集_缓冲区 [变量_08A80225] ＝ 32)
            变量_08A80225 ＝ 变量_08A80225 － 1
            到循环尾 ()
        .判断 (集_缓冲区 [变量_08A80225] ＝ 161 且 集_缓冲区 [变量_08A80225 － 1] ＝ 161)
            变量_08A80225 ＝ 变量_08A80225 － 2
            到循环尾 ()
        .默认
            跳出循环 ()
        .判断结束
        
    .判断循环尾 ()
    返回 (写出字节集 (_文件句柄, 取字节集左边 (集_缓冲区, 变量_08A80225)))

.子程序 到小写字母, 逻辑型, 公开
    .参数 参_起始位置, 整数型, 可空
    .参数 参_转换字母数, 整数型, 可空
    .局部变量 变量_0CA80225, 整数型
    .局部变量 变量_0DA80225, 整数型

    写缓存区 ()
    变量_0CA80225 ＝ 取字节集长度 (集_缓冲区)
    清空内容 ()
    变量_0DA80225 ＝ 1
    .如果真 (是否为空 (参_起始位置))
        参_起始位置 ＝ 1
    .如果真结束
    .如果真 (是否为空 (参_转换字母数))
        参_转换字母数 ＝ 汇编_取字数 (集_缓冲区) － 字数到位置 (参_起始位置)
    .如果真结束
    变量_0DA80225 ＝ 字数到位置 (参_起始位置)
    .计次循环首 (参_转换字母数, )
        .如果真 (变量_0DA80225 ＞ 变量_0CA80225)
            跳出循环 ()
        .如果真结束
        .如果 (集_缓冲区 [变量_0DA80225] ＞ 128)
            变量_0DA80225 ＝ 变量_0DA80225 ＋ 2
        .否则
            .如果真 (集_缓冲区 [变量_0DA80225] ＞ 64 且 集_缓冲区 [变量_0DA80225] ＜ 91)
                集_缓冲区 [变量_0DA80225] ＝ 位或 (集_缓冲区 [变量_0DA80225], 32)
            .如果真结束
            变量_0DA80225 ＝ 变量_0DA80225 ＋ 1
        .如果结束
        
    .计次循环尾 ()
    返回 (写出字节集 (_文件句柄, 集_缓冲区))

.子程序 到大写字母, 逻辑型, 公开
    .参数 参_起始位置, 整数型, 可空
    .参数 参_转换字母数, 整数型, 可空
    .局部变量 变量_10A80225, 整数型
    .局部变量 变量_11A80225, 整数型

    写缓存区 ()
    变量_10A80225 ＝ 取字节集长度 (集_缓冲区)
    清空内容 ()
    变量_11A80225 ＝ 1
    .如果真 (是否为空 (参_起始位置))
        参_起始位置 ＝ 1
    .如果真结束
    .如果真 (是否为空 (参_转换字母数))
        参_转换字母数 ＝ 汇编_取字数 (集_缓冲区) － 字数到位置 (参_起始位置)
    .如果真结束
    变量_11A80225 ＝ 字数到位置 (参_起始位置)
    .计次循环首 (参_转换字母数, )
        .如果真 (变量_11A80225 ＞ 变量_10A80225)
            跳出循环 ()
        .如果真结束
        .如果 (集_缓冲区 [变量_11A80225] ＞ 128)
            变量_11A80225 ＝ 变量_11A80225 ＋ 2
        .否则
            .如果真 (集_缓冲区 [变量_11A80225] ＞ 96 且 集_缓冲区 [变量_11A80225] ＜ 123)
                集_缓冲区 [变量_11A80225] ＝ 位与 (集_缓冲区 [变量_11A80225], 95)
            .如果真结束
            变量_11A80225 ＝ 变量_11A80225 ＋ 1
        .如果结束
        
    .计次循环尾 ()
    返回 (写出字节集 (_文件句柄, 集_缓冲区))

.子程序 字数到位置, 整数型
    .参数 变量_12A80225, 整数型
    .局部变量 变量_13A80225, 整数型
    .局部变量 变量_14A80225, 整数型

    变量_14A80225 ＝ 取字节集长度 (集_缓冲区)
    变量_13A80225 ＝ 1
    .计次循环首 (变量_12A80225 － 1, )
        .如果真 (变量_13A80225 ＞ 变量_14A80225)
            跳出循环 ()
        .如果真结束
        .如果 (集_缓冲区 [变量_13A80225] ＞ 128)
            变量_13A80225 ＝ 变量_13A80225 ＋ 2
        .否则
            变量_13A80225 ＝ 变量_13A80225 ＋ 1
        .如果结束
        
    .计次循环尾 ()
    返回 (变量_13A80225)
    

