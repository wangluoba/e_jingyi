.版本 2

.程序集 集_指针
.子程序 取指针地址_小数型, 整数型, 公开
    .参数 欲取地址的数据, 小数型, 参考

    返回 (lstrcpyn_小数型 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_整数型, 整数型, 公开
    .参数 欲取地址的数据, 整数型, 参考

    返回 (lstrcpyn_整数型 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_短整数型, 整数型, 公开
    .参数 欲取地址的数据, 短整数型, 参考

    返回 (lstrcpyn_短整数型 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_长整数型, 整数型, 公开
    .参数 欲取地址的数据, 长整数型, 参考

    返回 (lstrcpyn_长整数型 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_字节型, 整数型, 公开
    .参数 欲取地址的数据, 字节型, 参考

    返回 (lstrcpyn_字节型 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_字节集型, 整数型, 公开
    .参数 欲取地址的数据, 字节集, 参考

    返回 (lstrcpyn_字节集 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_文本型, 整数型, 公开
    .参数 欲取地址的数据, 文本型, 参考

    返回 (lstrcpyn_文本型 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 取指针地址_子程序指针, 整数型, 公开
    .参数 欲取地址的数据, 子程序指针, 参考

    返回 (lstrcpyn_子程序指针 (欲取地址的数据, 欲取地址的数据, 0))

.子程序 指针_到整数, 整数型, 公开
    .参数 整数指针, 整数型

    置入代码 ({ 139, 69, 8, 139, 0, 201, 194, 4, 0 })
    返回 (0)

.子程序 指针_到文本, 文本型, 公开
    .参数 文本指针, 整数型
    .局部变量 变量_B6740125, 整数型
    .局部变量 变量_B7740125, 文本型

    变量_B6740125 ＝ lstrlenA (文本指针) ＋ 1
    变量_B7740125 ＝ 取空白文本 (变量_B6740125)
    RtlMoveMemory (取指针_文本型 (变量_B7740125), 文本指针, 变量_B6740125)
    返回 (变量_B7740125)

.子程序 指针_到字节集, 字节集, 公开
    .参数 字节集指针, 整数型
    .参数 数据长度, 整数型
    .局部变量 变量_BA740125, 字节集

    变量_BA740125 ＝ API_取空白字节集 (数据长度)
    RtlMoveMemory_int2Bytes (变量_BA740125, 字节集指针, 数据长度)
    返回 (变量_BA740125)

.子程序 指针_到字节集W, 字节集, 公开
    .参数 ptr, 整数型
    .局部变量 变量_87F40225, 整数型

    .如果真 (ptr ≠ #NULL)
        变量_87F40225 ＝ DLL_lstrlenW (ptr)
        .如果真 (变量_87F40225 ＞ 0)
            返回 (指针到字节集 (ptr, 变量_87F40225 × 2 ＋ 2))
        .如果真结束
        
    .如果真结束
    返回 ({ })

.子程序 指针_取低16位, 整数型, 公开, 已弃用！请使用 LOWORD
    .参数 参数, 整数型

    返回 (LOWORD (参数))

.子程序 指针_取高16位, 整数型, 公开, 已弃用！请使用 HIWORD
    .参数 参数, 整数型

    返回 (HIWORD (参数))

.子程序 指针_是否有效, 逻辑型, 公开, 判断一个子程序指针是否有效，有效返回真，否则返回假
    .参数 要判断的指针地址, 整数型

    返回 (IsBadStringPtrA (要判断的指针地址, 4) ＝ 0)

.子程序 指针_到字节型_汇编, 字节型, 公开
    .参数 指针, 整数型

    置入代码 ({ 139, 69, 8, 139, 0, 201, 194, 4, 0 })
    
    
    
    
    返回 (0)

.子程序 指针_到逻辑型_汇编, 逻辑型, 公开
    .参数 指针, 整数型

    置入代码 ({ 139, 69, 8, 139, 0, 201, 194, 4, 0 })
    
    
    
    
    返回 (假)

.子程序 指针_到短整数型_汇编, 短整数型, 公开
    .参数 指针, 整数型

    置入代码 ({ 139, 69, 8, 139, 0, 201, 194, 4, 0 })
    
    
    
    
    返回 (0)

.子程序 指针_到小数型_汇编, 小数型, 公开
    .参数 指针, 整数型
    .局部变量 变量_859F0225, 小数型

    置入代码 ({ 139, 69, 8, 139, 0, 137, 69, 252 })
    
    
    
    返回 (变量_859F0225)

.子程序 指针_到日期时间型_汇编, 日期时间型, 公开
    .参数 指针, 整数型
    .局部变量 变量_879F0225, 日期时间型

    置入代码 ({ 139, 69, 8, 255, 48, 143, 69, 248, 255, 112, 4, 143, 69, 252 })
    
    
    
    
    
    返回 (变量_879F0225)

.子程序 指针_到双精度小数型_汇编, 双精度小数型, 公开
    .参数 指针, 整数型
    .局部变量 变量_899F0225, 双精度小数型

    置入代码 ({ 139, 69, 8, 255, 48, 143, 69, 248, 255, 112, 4, 143, 69, 252 })
    
    
    
    
    
    返回 (变量_899F0225)

.子程序 指针_到长整数型_汇编, 长整数型, 公开
    .参数 指针, 整数型
    .局部变量 变量_8B9F0225, 长整数型

    置入代码 ({ 139, 69, 8, 255, 48, 143, 69, 248, 255, 112, 4, 143, 69, 252 })
    
    
    
    
    
    返回 (变量_8B9F0225)

.子程序 LOWORD, 整数型, 公开, GET_X_LPARAM
    .参数 l, 整数型

    置入代码 ({ 139, 69, 8, 15, 183, 192, 201, 194, 4, 0 })
    
    
    
    
    返回 (0)

.子程序 HIWORD, 整数型, 公开, GET_Y_LPARAM
    .参数 l, 整数型

    置入代码 ({ 139, 69, 8, 193, 232, 16, 15, 183, 192, 201, 194, 4, 0 })
    
    
    
    
    
    返回 (0)

.子程序 LOBYTE, 整数型, 公开
    .参数 w, 整数型

    置入代码 ({ 139, 69, 8, 15, 182, 192, 201, 194, 4, 0 })
    
    
    
    
    返回 (0)

.子程序 HIBYTE, 整数型, 公开
    .参数 w, 整数型

    置入代码 ({ 139, 69, 8, 15, 182, 196, 201, 194, 4, 0 })
    
    
    
    
    返回 (0)

.子程序 LOWPART, 整数型, 公开
    .参数 QuadPart, 长整数型

    置入代码 ({ 139, 69, 8, 201, 194, 8, 0 })
    
    
    
    返回 (0)

.子程序 HIGHPART, 整数型, 公开
    .参数 QuadPart, 长整数型

    置入代码 ({ 139, 69, 12, 201, 194, 8, 0 })
    
    
    
    返回 (0)

.子程序 xor64, 长整数型, 公开, 位异或
    .参数 arg1, 长整数型
    .参数 arg2, 长整数型

    置入代码 ({ 139, 69, 8, 139, 85, 12, 51, 69, 16, 51, 85, 20, 201, 194, 16, 0 })
    
    
    
    
    
    
    返回 (0)

.子程序 and64, 长整数型, 公开, 位与
    .参数 arg1, 长整数型
    .参数 arg2, 长整数型

    置入代码 ({ 139, 69, 8, 139, 85, 12, 35, 69, 16, 35, 85, 20, 201, 194, 16, 0 })
    
    
    
    
    
    
    返回 (0)

.子程序 or64, 长整数型, 公开, 位或
    .参数 arg1, 长整数型
    .参数 arg2, 长整数型

    置入代码 ({ 139, 69, 8, 139, 85, 12, 11, 69, 16, 11, 85, 20, 201, 194, 16, 0 })
    
    
    
    
    
    
    返回 (0)

.子程序 not64, 长整数型, 公开, 位取反
    .参数 arg1, 长整数型

    置入代码 ({ 139, 69, 8, 139, 85, 12, 247, 208, 247, 210, 201, 194, 8, 0 })
    
    
    
    
    
    
    返回 (0)

.子程序 shl64, 长整数型, 公开, 左移
    .参数 arg1, 长整数型
    .参数 arg2, 整数型

    置入代码 ({ 139, 69, 8, 139, 85, 12, 139, 77, 16, 128, 249, 64, 115, 14, 128, 249, 32, 115, 15, 15, 165, 194, 211, 224, 201, 194, 12, 0, 49, 192, 49, 210, 235, 246, 137, 194, 49, 192, 128, 225, 31, 211, 226, 235, 235 })
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    返回 (0)

.子程序 shr64, 长整数型, 公开, 右移
    .参数 arg1, 长整数型
    .参数 arg2, 整数型

    置入代码 ({ 139, 69, 8, 139, 85, 12, 139, 77, 16, 128, 249, 64, 115, 14, 128, 249, 32, 115, 16, 15, 173, 208, 211, 250, 201, 194, 12, 0, 193, 250, 31, 137, 208, 235, 245, 137, 208, 193, 250, 31, 128, 225, 31, 211, 248, 235, 233 })
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    返回 (0)

