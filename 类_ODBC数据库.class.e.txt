.版本 2

.程序集 类_ODBC数据库, , 公开, 此类为易友 校长小猪猪 提供。
.程序集变量 m_hENV, 整数型
.程序集变量 m_hDBC, 整数型

.子程序 _初始化
    DLL_SQLAllocHandle (#SQL_HANDLE_ENV, #SQL_NULL_HANDLE, m_hENV)
    DLL_SQLSetEnvAttr (m_hENV, #SQL_ATTR_ODBC_VERSION, #SQL_OV_ODBC3, #SQL_IS_INTEGER)

.子程序 _销毁
    关闭 ()
    DLL_SQLFreeHandle (#SQL_HANDLE_ENV, m_hENV)

.子程序 取数据库句柄, 整数型, 公开
    返回 (m_hDBC)

.子程序 置数据库句柄, , 公开
    .参数 参数_数据库句柄, 整数型

    m_hDBC ＝ 参数_数据库句柄

.子程序 连接, 逻辑型, 公开
    .参数 参数_连接字符串, 文本型
    .局部变量 变量_8CAD0125, 整数型
    .局部变量 变量_8DAD0125, 文本型
    .局部变量 变量_8EAD0125, 整数型
    .局部变量 变量_8FAD0125, 短整数型

    .如果真 (m_hDBC ＝ 0)
        变量_8FAD0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_DBC, m_hENV, m_hDBC)
        .如果真 (变量_8FAD0125 ≠ #SQL_SUCCESS)
            返回 (假)
        .如果真结束
        
    .如果真结束
    变量_8EAD0125 ＝ 取文本长度 (参数_连接字符串)
    变量_8DAD0125 ＝ 取空白文本 (1024)
    变量_8FAD0125 ＝ DLL_SQLDriverConnect (m_hDBC, 0, 参数_连接字符串, 变量_8EAD0125, 变量_8DAD0125, 1024, 变量_8CAD0125, #SQL_DRIVER_NOPROMPT)
    返回 (变量_8FAD0125 ＝ #SQL_SUCCESS 或 变量_8FAD0125 ＝ #SQL_SUCCESS_WITH_INFO)

.子程序 连接SQLServer, 逻辑型, 公开
    .参数 参数_服务器名, 文本型
    .参数 参数_数据库, 文本型
    .参数 参数_用户名, 文本型, 可空, 为空默认以Windows账户登录
    .参数 参数_密码, 文本型, 可空, 为空默认以Windows账户登录
    .局部变量 变量_63F70125, 文本型

    变量_63F70125 ＝ “driver={sql server};server=” ＋ 参数_服务器名 ＋ “;database=” ＋ 参数_数据库 ＋ “;uid=” ＋ 参数_用户名 ＋ “;pwd=” ＋ 参数_密码
    .如果真 (是否为空 (参数_用户名) 且 是否为空 (参数_密码))
        变量_63F70125 ＝ “Driver=SQL Server;Server=” ＋ 参数_服务器名 ＋ “;Database=” ＋ 参数_数据库 ＋ “;Trusted_Connection=Yes;Connect Timeout=90”
    .如果真结束
    返回 (连接 (变量_63F70125))

.子程序 连接Access, 逻辑型, 公开, 连接mdb或accdb数据库
    .参数 参数_文件名, 文本型, , 本参数提供Access数据库文件的完整路径名。
    .参数 参数_密码, 文本型, 可空, 本参数提供Access数据库的访问密码。可以为空，若为空，表示Access数据库没有密码。
    .参数 参数_Accdb, 逻辑型, 可空, 数据库类型。默认为假=mdb，真=accdb。
    .局部变量 变量_5CC90125, 文本型

    .如果 (参数_Accdb)
        变量_5CC90125 ＝ “ODBC;DSN=MS Access Database;DBQ=” ＋ 参数_文件名 ＋ “;Driver={Microsoft Access Driver (*.mdb, *.accdb)};;DriverId=25;FIL=MS Access;MaxBufferSize=2048;PageTimeout=5;PWD=” ＋ 参数_密码
    .否则
        变量_5CC90125 ＝ “DBQ=” ＋ 参数_文件名 ＋ “;Pwd=” ＋ 参数_密码 ＋ “;DRIVER={Microsoft Access Driver (*.mdb)};”
    .如果结束
    返回 (连接 (变量_5CC90125))

.子程序 关闭, 逻辑型, 公开
    .局部变量 变量_96AD0125, 短整数型

    变量_96AD0125 ＝ DLL_SQLDisconnect (m_hDBC)
    .如果真 (变量_96AD0125 ≠ #SQL_SUCCESS)
        返回 (假)
    .如果真结束
    变量_96AD0125 ＝ DLL_SQLFreeHandle (#SQL_HANDLE_DBC, m_hDBC)
    m_hDBC ＝ 0
    返回 (真)

.子程序 执行SQL, 逻辑型, 公开
    .参数 参数_SQL语句, 文本型
    .参数 参数_影响行, 整数型, 参考 可空
    .局部变量 变量_99AD0125, 短整数型
    .局部变量 变量_9AAD0125, 整数型

    变量_99AD0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_STMT, m_hDBC, 变量_9AAD0125)
    .如果真 (变量_99AD0125 ≠ #SQL_SUCCESS)
        返回 (假)
    .如果真结束
    变量_99AD0125 ＝ DLL_SQLExecDirect (变量_9AAD0125, 参数_SQL语句, 取文本长度 (参数_SQL语句))
    .如果真 (是否为空 (参数_影响行) ＝ 假)
        DLL_SQLRowCount (变量_9AAD0125, 参数_影响行)
    .如果真结束
    DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 变量_9AAD0125)
    返回 (变量_99AD0125 ＝ #SQL_SUCCESS)

.子程序 执行, 逻辑型, 公开
    .参数 参数_SQL语句, 文本型, , 语句中的第几个“?”，表示参数几
    .参数 参数_影响行, 整数型, 参考 可空
    .参数 参数一, 字节集, 可空
    .参数 参数二, 字节集, 可空
    .参数 参数三, 字节集, 可空
    .参数 参数四, 字节集, 可空
    .参数 参数五, 字节集, 可空
    .局部变量 变量_A2AD0125, 短整数型
    .局部变量 变量_A3AD0125, 整数型
    .局部变量 变量_A4AD0125, 整数型, , "5"

    变量_A2AD0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_STMT, m_hDBC, 变量_A3AD0125)
    .如果真 (变量_A2AD0125 ≠ #SQL_SUCCESS)
        返回 (假)
    .如果真结束
    变量_A2AD0125 ＝ DLL_SQLPrepare (变量_A3AD0125, 参数_SQL语句, #SQL_NTS)
    .如果真 (变量_A2AD0125 ≠ #SQL_SUCCESS)
        DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 变量_A3AD0125)
        返回 (假)
    .如果真结束
    
    .计次循环首 (1, )
        .如果真 (是否为空 (参数一))
            跳出循环 ()
        .如果真结束
        变量_A4AD0125 [1] ＝ 取字节集长度 (参数一)
        变量_A2AD0125 ＝ DLL_SQLBindParameter (变量_A3AD0125, 1, #SQL_PARAM_INPUT, #SQL_C_BINARY, #SQL_LONGVARBINARY, 变量_A4AD0125 [1], 0, 参数一, 变量_A4AD0125 [1], 变量_A4AD0125 [1])
        .如果真 (是否为空 (参数二))
            跳出循环 ()
        .如果真结束
        变量_A4AD0125 [2] ＝ 取字节集长度 (参数二)
        变量_A2AD0125 ＝ DLL_SQLBindParameter (变量_A3AD0125, 2, #SQL_PARAM_INPUT, #SQL_C_BINARY, #SQL_LONGVARBINARY, 变量_A4AD0125 [2], 0, 参数二, 变量_A4AD0125 [2], 变量_A4AD0125 [2])
        .如果真 (是否为空 (参数三))
            跳出循环 ()
        .如果真结束
        变量_A4AD0125 [3] ＝ 取字节集长度 (参数三)
        变量_A2AD0125 ＝ DLL_SQLBindParameter (变量_A3AD0125, 3, #SQL_PARAM_INPUT, #SQL_C_BINARY, #SQL_LONGVARBINARY, 变量_A4AD0125 [3], 0, 参数三, 变量_A4AD0125 [3], 变量_A4AD0125 [3])
        .如果真 (是否为空 (参数四))
            跳出循环 ()
        .如果真结束
        变量_A4AD0125 [4] ＝ 取字节集长度 (参数四)
        变量_A2AD0125 ＝ DLL_SQLBindParameter (变量_A3AD0125, 4, #SQL_PARAM_INPUT, #SQL_C_BINARY, #SQL_LONGVARBINARY, 变量_A4AD0125 [4], 0, 参数四, 变量_A4AD0125 [4], 变量_A4AD0125 [4])
        .如果真 (是否为空 (参数五))
            跳出循环 ()
        .如果真结束
        变量_A4AD0125 [5] ＝ 取字节集长度 (参数五)
        变量_A2AD0125 ＝ DLL_SQLBindParameter (变量_A3AD0125, 5, #SQL_PARAM_INPUT, #SQL_C_BINARY, #SQL_LONGVARBINARY, 变量_A4AD0125 [5], 0, 参数五, 变量_A4AD0125 [5], 变量_A4AD0125 [5])
        
    .计次循环尾 ()
    变量_A2AD0125 ＝ DLL_SQLExecute (变量_A3AD0125)
    .如果真 (是否为空 (参数_影响行) ＝ 假)
        DLL_SQLRowCount (变量_A3AD0125, 参数_影响行)
    .如果真结束
    DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 变量_A3AD0125)
    返回 (变量_A2AD0125 ＝ #SQL_SUCCESS)

.子程序 查询, 整数型, 公开, 返回记录集句柄。此时记录集位置在首记录前
    .参数 参数_SQL语句, 文本型
    .参数 参数_光标类型, 整数型, 可空, “光标类型_”开头常量。默认为“光标类型_键集”
    .局部变量 变量_A7AD0125, 短整数型
    .局部变量 变量_A8AD0125, 整数型

    变量_A7AD0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_STMT, m_hDBC, 变量_A8AD0125)
    .如果真 (变量_A7AD0125 ≠ #SQL_SUCCESS)
        返回 (0)
    .如果真结束
    .如果真 (是否为空 (参数_光标类型))
        参数_光标类型 ＝ #光标类型_键集
    .如果真结束
    变量_A7AD0125 ＝ DLL_SQLSetStmtAttr (变量_A8AD0125, #SQL_ATTR_CURSOR_TYPE, 参数_光标类型, 0)
    变量_A7AD0125 ＝ DLL_SQLExecDirect (变量_A8AD0125, 参数_SQL语句, 取文本长度 (参数_SQL语句))
    .如果真 (变量_A7AD0125 ≠ #SQL_SUCCESS)
        DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 变量_A8AD0125)
        返回 (0)
    .如果真结束
    返回 (变量_A8AD0125)

.子程序 置SQL语句, 整数型, 公开, 准备一条SQL语句，此时并没有执行。返回记录集句柄
    .参数 参数_SQL语句, 文本型
    .参数 参数_光标类型, 整数型, 可空, “光标类型_”开头常量。默认为“光标类型_向前”
    .局部变量 变量_ABAD0125, 短整数型
    .局部变量 变量_ACAD0125, 整数型

    变量_ABAD0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_STMT, m_hDBC, 变量_ACAD0125)
    .如果真 (变量_ABAD0125 ≠ #SQL_SUCCESS)
        返回 (0)
    .如果真结束
    .如果真 (是否为空 (参数_光标类型))
        参数_光标类型 ＝ #光标类型_键集
    .如果真结束
    
    变量_ABAD0125 ＝ DLL_SQLSetStmtAttr (变量_ACAD0125, #SQL_ATTR_CURSOR_TYPE, 参数_光标类型, 0)
    变量_ABAD0125 ＝ DLL_SQLPrepare (变量_ACAD0125, 参数_SQL语句, #SQL_NTS)
    .如果真 (变量_ABAD0125 ≠ #SQL_SUCCESS)
        DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 变量_ACAD0125)
        返回 (0)
    .如果真结束
    返回 (变量_ACAD0125)

.子程序 执行记录集, 逻辑型, 公开, 执行由“置SQL语句”返回的记录集。
    .参数 参数_记录集句柄, 整数型
    .局部变量 变量_AEAD0125, 短整数型

    变量_AEAD0125 ＝ DLL_SQLExecute (参数_记录集句柄)
    返回 (变量_AEAD0125 ＝ #SQL_SUCCESS)

.子程序 绑定参数, 逻辑型, 公开, 给记录集绑定参数。
    .参数 参数_记录集句柄, 整数型
    .参数 参数_参数索引, 整数型, , 表示第几个参数，索引从1开始
    .参数 参数_字节集, 字节集
    .局部变量 变量_B2AD0125, 整数型
    .局部变量 变量_B3AD0125, 短整数型

    变量_B2AD0125 ＝ 取字节集长度 (参数_字节集)
    变量_B3AD0125 ＝ DLL_SQLBindParameter (参数_记录集句柄, 参数_参数索引, #SQL_PARAM_INPUT, #SQL_C_BINARY, #SQL_LONGVARBINARY, 变量_B2AD0125, 0, 参数_字节集, 变量_B2AD0125, 变量_B2AD0125)
    返回 (变量_B3AD0125 ≠ #SQL_SUCCESS)

.子程序 释放记录集, 逻辑型, 公开
    .参数 参数_记录集句柄, 整数型

    返回 (DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 参数_记录集句柄) ＝ #SQL_SUCCESS)

.子程序 到下一条, 逻辑型, 公开, 如果到最后一行，返回假
    .参数 参数_记录集句柄, 整数型
    .局部变量 变量_B6AD0125, 短整数型

    变量_B6AD0125 ＝ DLL_SQLFetchScroll (参数_记录集句柄, #SQL_FETCH_NEXT, 0)
    返回 (变量_B6AD0125 ＝ #SQL_SUCCESS)

.子程序 到上一条, 逻辑型, 公开
    .参数 参数_记录集句柄, 整数型
    .局部变量 变量_B8AD0125, 短整数型

    变量_B8AD0125 ＝ DLL_SQLFetchScroll (参数_记录集句柄, #SQL_FETCH_PRIOR, 0)
    返回 (变量_B8AD0125 ＝ #SQL_SUCCESS)

.子程序 到首记录, 逻辑型, 公开
    .参数 参数_记录集句柄, 整数型
    .局部变量 变量_BAAD0125, 短整数型

    变量_BAAD0125 ＝ DLL_SQLFetchScroll (参数_记录集句柄, #SQL_FETCH_FIRST, 0)
    返回 (变量_BAAD0125 ＝ #SQL_SUCCESS)

.子程序 到尾记录, 逻辑型, 公开
    .参数 参数_记录集句柄, 整数型
    .局部变量 变量_BCAD0125, 短整数型

    变量_BCAD0125 ＝ DLL_SQLFetchScroll (参数_记录集句柄, #SQL_FETCH_LAST, 0)
    返回 (变量_BCAD0125 ＝ #SQL_SUCCESS)

.子程序 移到, 逻辑型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_行号, 整数型
    .局部变量 变量_BFAD0125, 短整数型

    变量_BFAD0125 ＝ DLL_SQLFetchScroll (参数_记录集句柄, #SQL_FETCH_ABSOLUTE, 参数_行号)
    返回 (变量_BFAD0125 ＝ #SQL_SUCCESS)

.子程序 字段名到序号, 整数型
    .参数 变量_C0AD0125, 整数型
    .参数 变量_C1AD0125, 文本型
    .局部变量 变量_C2AD0125, 整数型

    .计次循环首 (取字段数 (变量_C0AD0125), 变量_C2AD0125)
        .如果真 (取字段名 (变量_C0AD0125, 变量_C2AD0125 － 1) ＝ 变量_C1AD0125)
            返回 (变量_C2AD0125 － 1)
        .如果真结束
        
    .计次循环尾 ()
    返回 (-1)

.子程序 读字段文本, 文本型, 公开, 用字段名读
    .参数 参数_记录集句柄, 整数型
    .参数 参数_字段名, 文本型
    .局部变量 变量_C5AD0125, 整数型

    变量_C5AD0125 ＝ 字段名到序号 (参数_记录集句柄, 参数_字段名)
    .如果真 (变量_C5AD0125 ＝ -1)
        返回 (“”)
    .如果真结束
    返回 (读文本 (参数_记录集句柄, 变量_C5AD0125))

.子程序 读字段字节集, 字节集, 公开, 用字段名读
    .参数 参数_记录集句柄, 整数型
    .参数 参数_字段名, 文本型
    .局部变量 变量_C8AD0125, 整数型

    变量_C8AD0125 ＝ 字段名到序号 (参数_记录集句柄, 参数_字段名)
    .如果真 (变量_C8AD0125 ＝ -1)
        返回 ({ })
    .如果真结束
    返回 (读字节集 (参数_记录集句柄, 变量_C8AD0125))

.子程序 读字段整数, 整数型, 公开, 用字段名读
    .参数 参数_记录集句柄, 整数型
    .参数 参数_字段名, 文本型
    .局部变量 变量_CBAD0125, 整数型
    .局部变量 变量_CCAD0125, 短整数型
    .局部变量 变量_CDAD0125, 整数型
    .局部变量 变量_CEAD0125, 整数型

    变量_CEAD0125 ＝ 字段名到序号 (参数_记录集句柄, 参数_字段名)
    .如果真 (变量_CEAD0125 ＝ -1)
        返回 (0)
    .如果真结束
    变量_CCAD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 变量_CEAD0125 ＋ 1, #SQL_C_LONG, 取指针整数_ (变量_CDAD0125), 4, 变量_CBAD0125)
    返回 (变量_CDAD0125)

.子程序 读字段单精度, 小数型, 公开, 用字段名读
    .参数 参数_记录集句柄, 整数型
    .参数 参数_字段名, 文本型
    .局部变量 变量_D1AD0125, 整数型
    .局部变量 变量_D2AD0125, 短整数型
    .局部变量 变量_D3AD0125, 小数型
    .局部变量 变量_D4AD0125, 整数型

    变量_D4AD0125 ＝ 字段名到序号 (参数_记录集句柄, 参数_字段名)
    .如果真 (变量_D4AD0125 ＝ -1)
        返回 (0)
    .如果真结束
    变量_D2AD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 变量_D4AD0125 ＋ 1, #SQL_C_FLOAT, 取指针小数_ (变量_D3AD0125), 4, 变量_D1AD0125)
    返回 (变量_D3AD0125)

.子程序 读字段双精度, 双精度小数型, 公开, 用字段名读
    .参数 参数_记录集句柄, 整数型
    .参数 参数_字段名, 文本型
    .局部变量 变量_D7AD0125, 整数型
    .局部变量 变量_D8AD0125, 短整数型
    .局部变量 变量_D9AD0125, 双精度小数型
    .局部变量 变量_DAAD0125, 整数型

    变量_DAAD0125 ＝ 字段名到序号 (参数_记录集句柄, 参数_字段名)
    .如果真 (变量_DAAD0125 ＝ -1)
        返回 (0)
    .如果真结束
    变量_D8AD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 变量_DAAD0125 ＋ 1, #SQL_C_DOUBLE, 取指针双精度_ (变量_D9AD0125), 8, 变量_D7AD0125)
    返回 (变量_D9AD0125)

.子程序 读文本, 文本型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 索引从0开始
    .局部变量 变量_DDAD0125, 整数型
    .局部变量 变量_DEAD0125, 文本型
    .局部变量 变量_DFAD0125, 短整数型
    .局部变量 变量_E0AD0125, 文本型

    .如果真 (参数_记录集句柄 ＝ 0)
        返回 (“”)
    .如果真结束
    变量_DDAD0125 ＝ 255
    .循环判断首 ()
        变量_DEAD0125 ＝ 取空白文本 (变量_DDAD0125)
        变量_DFAD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 参数_列号 ＋ 1, #SQL_C_CHAR, 取指针文本_ (变量_DEAD0125), 变量_DDAD0125, 变量_DDAD0125)
        .如果真 (变量_DFAD0125 ＝ #SQL_ERROR 或 变量_DFAD0125 ＝ #SQL_INVALID_HANDLE 或 变量_DDAD0125 ＝ -1)
            返回 (“”)
        .如果真结束
        变量_E0AD0125 ＝ 变量_E0AD0125 ＋ 取文本左边 (变量_DEAD0125, 变量_DDAD0125)
    .循环判断尾 (变量_DFAD0125 ＝ #SQL_SUCCESS_WITH_INFO)
    返回 (变量_E0AD0125)

.子程序 读字节集, 字节集, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 索引从0开始
    .局部变量 变量_E3AD0125, 整数型
    .局部变量 变量_E4AD0125, 短整数型
    .局部变量 变量_E5AD0125, 字节集
    .局部变量 变量_E6AD0125, 字节集

    .如果真 (参数_记录集句柄 ＝ 0)
        返回 ({ })
    .如果真结束
    变量_E3AD0125 ＝ 10240
    .循环判断首 ()
        变量_E5AD0125 ＝ 取空白字节集 (变量_E3AD0125)
        变量_E4AD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 参数_列号 ＋ 1, #SQL_C_BINARY, 取指针字节集_ (变量_E5AD0125), 变量_E3AD0125, 变量_E3AD0125)
        .如果真 (变量_E4AD0125 ＝ #SQL_ERROR 或 变量_E4AD0125 ＝ #SQL_INVALID_HANDLE 或 变量_E3AD0125 ＝ -1)
            返回 ({ })
        .如果真结束
        变量_E6AD0125 ＝ 变量_E6AD0125 ＋ 取字节集左边 (变量_E5AD0125, 变量_E3AD0125)
    .循环判断尾 (变量_E4AD0125 ＝ #SQL_SUCCESS_WITH_INFO)
    返回 (变量_E6AD0125)

.子程序 读整数, 整数型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 索引从0开始
    .局部变量 变量_E9AD0125, 整数型
    .局部变量 变量_EAAD0125, 短整数型
    .局部变量 变量_EBAD0125, 整数型

    .如果真 (参数_记录集句柄 ＝ 0)
        返回 (0)
    .如果真结束
    变量_EAAD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 参数_列号 ＋ 1, #SQL_C_LONG, 取指针整数_ (变量_EBAD0125), 4, 变量_E9AD0125)
    返回 (变量_EBAD0125)

.子程序 读单精度, 小数型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 索引从0开始
    .局部变量 变量_EEAD0125, 整数型
    .局部变量 变量_EFAD0125, 短整数型
    .局部变量 变量_F0AD0125, 小数型

    .如果真 (参数_记录集句柄 ＝ 0)
        返回 (0)
    .如果真结束
    变量_EFAD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 参数_列号 ＋ 1, #SQL_C_FLOAT, 取指针小数_ (变量_F0AD0125), 4, 变量_EEAD0125)
    返回 (变量_F0AD0125)

.子程序 读双精度, 双精度小数型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 索引从0开始
    .局部变量 变量_F3AD0125, 整数型
    .局部变量 变量_F4AD0125, 短整数型
    .局部变量 变量_F5AD0125, 双精度小数型

    .如果真 (参数_记录集句柄 ＝ 0)
        返回 (0)
    .如果真结束
    变量_F4AD0125 ＝ DLL_SQLGetData (参数_记录集句柄, 参数_列号 ＋ 1, #SQL_C_DOUBLE, 取指针双精度_ (变量_F5AD0125), 8, 变量_F3AD0125)
    返回 (变量_F5AD0125)

.子程序 取字段名, 文本型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 列号从0开始
    .局部变量 变量_F8AD0125, 文本型

    变量_F8AD0125 ＝ 取空白文本 (255)
    .如果 (DLL_SQLDescribeCol (参数_记录集句柄, 参数_列号 ＋ 1, 变量_F8AD0125, 255, 0, 0, 0, 0, 0) ≠ #SQL_SUCCESS)
        返回 (“”)
    .否则
        返回 (变量_F8AD0125)
    .如果结束
    

.子程序 取字段数, 整数型, 公开
    .参数 参数_记录集句柄, 整数型
    .局部变量 变量_FAAD0125, 整数型

    DLL_SQLNumResultCols (参数_记录集句柄, 变量_FAAD0125)
    返回 (变量_FAAD0125)

.子程序 取字段类型, 整数型, 公开, 返回“SQL_”开头常量
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 列号从0开始
    .局部变量 变量_FDAD0125, 整数型

    .如果 (DLL_SQLDescribeCol (参数_记录集句柄, 参数_列号 ＋ 1, 字符 (0), 0, 0, 变量_FDAD0125, 0, 0, 0) ≠ #SQL_SUCCESS)
        返回 (0)
    .否则
        返回 (变量_FDAD0125)
    .如果结束
    

.子程序 取字段定义长度, 整数型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_列号, 整数型, , 列号从0开始
    .局部变量 变量_00AE0125, 整数型

    .如果 (DLL_SQLDescribeCol (参数_记录集句柄, 参数_列号 ＋ 1, 字符 (0), 0, 0, 0, 变量_00AE0125, 0, 0) ≠ #SQL_SUCCESS)
        返回 (0)
    .否则
        返回 (变量_00AE0125)
    .如果结束
    

.子程序 字段是否可空, 逻辑型, 公开
    .参数 参数_记录集句柄, 整数型
    .参数 参数_字段序号, 整数型, , 列号从0开始
    .局部变量 变量_03AE0125, 整数型

    .如果 (DLL_SQLDescribeCol (参数_记录集句柄, 参数_字段序号 ＋ 1, 字符 (0), 0, 0, 0, 0, 0, 变量_03AE0125) ≠ #SQL_SUCCESS)
        返回 (假)
    .否则
        返回 (变量_03AE0125 ≠ 0)
    .如果结束
    

.子程序 取记录数, 整数型, 公开
    .参数 参数_表名, 文本型
    .参数 参数_条件, 文本型, 可空
    .局部变量 变量_06AE0125, 文本型
    .局部变量 变量_07AE0125, 整数型
    .局部变量 变量_08AE0125, 整数型

    变量_06AE0125 ＝ “select count(1) from ” ＋ 参数_表名 ＋ “ ”
    .如果真 (是否为空 (参数_条件) ＝ 假)
        变量_06AE0125 ＝ 变量_06AE0125 ＋ 参数_条件
    .如果真结束
    变量_08AE0125 ＝ 查询 (变量_06AE0125, #光标类型_向前)
    到下一条 (变量_08AE0125)
    变量_07AE0125 ＝ 读整数 (变量_08AE0125, 0)
    DLL_SQLFreeHandle (#SQL_HANDLE_STMT, 变量_08AE0125)
    返回 (变量_07AE0125)

.子程序 开始事务, 逻辑型, 公开
    .局部变量 变量_09AE0125, 短整数型

    变量_09AE0125 ＝ DLL_SQLSetConnectAttr (m_hDBC, #SQL_ATTR_AUTOCOMMIT, #SQL_AUTOCOMMIT_OFF, #SQL_IS_UINTEGER)
    返回 (变量_09AE0125 ＝ #SQL_SUCCESS)

.子程序 回滚事务, 逻辑型, 公开
    .局部变量 变量_0AAE0125, 短整数型

    变量_0AAE0125 ＝ DLL_SQLEndTran (#SQL_HANDLE_DBC, m_hDBC, #SQL_ROLLBACK)
    DLL_SQLSetConnectAttr (m_hDBC, #SQL_ATTR_AUTOCOMMIT, #SQL_AUTOCOMMIT_ON, #SQL_IS_UINTEGER)
    返回 (变量_0AAE0125 ＝ #SQL_SUCCESS)

.子程序 提交事务, 逻辑型, 公开
    .局部变量 变量_0BAE0125, 短整数型

    变量_0BAE0125 ＝ DLL_SQLEndTran (#SQL_HANDLE_DBC, m_hDBC, #SQL_COMMIT)
    DLL_SQLSetConnectAttr (m_hDBC, #SQL_ATTR_AUTOCOMMIT, #SQL_AUTOCOMMIT_ON, #SQL_IS_UINTEGER)
    返回 (变量_0BAE0125 ＝ #SQL_SUCCESS)

.子程序 设超时时间, 逻辑型, 公开
    .参数 参数_要设置的时间, 整数型
    .局部变量 变量_0DAE0125, 短整数型

    .如果真 (m_hDBC ＝ 0)
        变量_0DAE0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_DBC, m_hENV, m_hDBC)
        .如果真 (变量_0DAE0125 ≠ #SQL_SUCCESS)
            返回 (假)
        .如果真结束
        
    .如果真结束
    返回 (DLL_SQLSetConnectAttr (m_hDBC, #SQL_ATTR_CONNECTION_TIMEOUT, 取指针整数_ (参数_要设置的时间), 0) ＝ #SQL_SUCCESS)

.子程序 取超时时间, 整数型, 公开
    .局部变量 变量_0EAE0125, 短整数型
    .局部变量 变量_0FAE0125, 整数型

    .如果真 (m_hDBC ＝ 0)
        变量_0EAE0125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_DBC, m_hENV, m_hDBC)
        .如果真 (变量_0EAE0125 ≠ #SQL_SUCCESS)
            返回 (0)
        .如果真结束
        
    .如果真结束
    变量_0EAE0125 ＝ DLL_SQLGetConnectAttr (m_hDBC, #SQL_ATTR_CONNECTION_TIMEOUT, 取指针整数_ (变量_0FAE0125), #SQL_IS_UINTEGER, 0)
    返回 (变量_0FAE0125)

.子程序 取最后错误, 整数型, 公开, 返回错误号。
    .参数 参数_错误状态, 文本型, 参考 可空
    .参数 参数_错误描述, 文本型, 参考 可空
    .局部变量 变量_12AE0125, 整数型
    .局部变量 变量_13AE0125, 短整数型
    .局部变量 变量_14AE0125, 文本型
    .局部变量 变量_15AE0125, 文本型
    .局部变量 变量_16AE0125, 整数型
    .局部变量 变量_17AE0125, 整数型

    .循环判断首 ()
        变量_16AE0125 ＝ 变量_16AE0125 ＋ 1
        变量_14AE0125 ＝ 取空白文本 (6)
        变量_15AE0125 ＝ 取空白文本 (#<?未知本地类型?>)
        变量_13AE0125 ＝ DLL_SQLGetDiagRec (#SQL_HANDLE_DBC, m_hDBC, 变量_16AE0125, 变量_14AE0125, 变量_17AE0125, 变量_15AE0125, #<?未知本地类型?>, 变量_12AE0125)
        .如果真 (变量_13AE0125 ＝ #SQL_ERROR 或 变量_13AE0125 ＝ #SQL_INVALID_HANDLE 或 变量_12AE0125 ＝ -1)
            返回 (0)
        .如果真结束
        参数_错误状态 ＝ 参数_错误状态 ＋ 变量_14AE0125
        参数_错误描述 ＝ 参数_错误描述 ＋ 取文本左边 (变量_15AE0125, 变量_12AE0125)
    .循环判断尾 (变量_13AE0125 ≠ #SQL_NO_DATA)
    返回 (变量_17AE0125)

.子程序 取查询信息, 文本型
    .参数 变量_6FF70125, 文本型
    .局部变量 变量_76F70125, 整数型
    .局部变量 变量_7EF70125, 文本型
    .局部变量 变量_84F70125, 整数型

    .如果真 (m_hDBC ＝ 0)
        变量_76F70125 ＝ DLL_SQLAllocHandle (#SQL_HANDLE_DBC, m_hENV, m_hDBC)
        .如果真 (变量_76F70125 ≠ #SQL_SUCCESS)
            返回 (“”)
        .如果真结束
        
    .如果真结束
    变量_7EF70125 ＝ 取空白文本 (2048)
    DLL_SQLBrowseConnect (m_hDBC, 变量_6FF70125, #SQL_NTS, 变量_7EF70125, 2048, 变量_84F70125)
    返回 (删首尾空 (变量_7EF70125))

.子程序 枚举SQL服务器, 整数型, 公开, 枚举局域网内中SQL服务器，成功返回服务器名称数量，失败返回0
    .参数 参_服务列表, 文本型, 数组, 变量储存返回值
    .局部变量 变量_8EF70125, 文本型
    .局部变量 变量_96F70125, 文本型

    变量_8EF70125 ＝ 取查询信息 (“Driver={SQL Server}”)
    .如果真 (变量_8EF70125 ＝ “”)
        返回 (0)
    .如果真结束
    清除数组 (参_服务列表)
    .如果真 (寻找文本 (变量_8EF70125, “SERVER:”, , 假) ＝ -1)
        返回 (0)
    .如果真结束
    变量_96F70125 ＝ 文本_取出中间文本 (变量_8EF70125, “={”, “}”)
    参_服务列表 ＝ 分割文本 (变量_96F70125, “,”, )
    返回 (取数组成员数 (参_服务列表))

.子程序 枚举SQL数据库, 整数型, 公开, 枚举指定SQL服务器的数据库，成功返回数据列表数量，失败返回0
    .参数 参_服务器, 文本型
    .参数 参_登录用户名, 文本型
    .参数 参_登录密码, 文本型
    .参数 参_数据库列表, 文本型, 数组, 变量储存返回值
    .局部变量 变量_9CF70125, 文本型
    .局部变量 变量_9DF70125, 文本型

    变量_9CF70125 ＝ 取查询信息 (“Driver={SQL Server};SERVER=” ＋ 参_服务器 ＋ “;UID=” ＋ 参_登录用户名 ＋ “;PWD=” ＋ 参_登录密码)
    .如果真 (变量_9CF70125 ＝ “”)
        返回 (0)
    .如果真结束
    清除数组 (参_数据库列表)
    .如果真 (寻找文本 (变量_9CF70125, “DATABASE”, , 假) ＝ -1)
        返回 (0)
    .如果真结束
    变量_9DF70125 ＝ 文本_取出中间文本 (变量_9CF70125, “={”, “}”)
    参_数据库列表 ＝ 分割文本 (变量_9DF70125, “,”, )
    返回 (取数组成员数 (参_数据库列表))

