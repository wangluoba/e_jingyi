.版本 2

.程序集 类_线程池, , 公开, 更加灵活的线程池
.程序集变量 成员_线程池IOCP, 整数型
.程序集变量 线程池_状态, 逻辑型
.程序集变量 线程池_处理函数, 整数型
.程序集变量 成员_线程数, 整数型

.子程序 _初始化
    

.子程序 _销毁
    关闭 (1)

.子程序 启动, 逻辑型, 公开, 成功返回真，失败返回假。
    .参数 线程数, 整数型, , 处理客户请求的最大线程池的数目，最小为1。
    .参数 处理函数, 子程序指针, , 处理函数，该函数必须有一个整数形的参数。
    .参数 超时返回, 整数型, 可空, 单位为：毫秒。默认为0一直等待。
    .局部变量 变量_CD7D0225, 整数型

    .如果真 (线程池_状态)
        返回 (假)
    .如果真结束
    .如果真 (线程数 ＜ 1)
        线程数 ＝ 1
    .如果真结束
    
    变量_CD7D0225 ＝ HeapAlloc (GetProcessHeap (), #HEAP_ZERO_MEMORY, 16)
    
    
    
    
    
    
    成员_线程池IOCP ＝ CreateIoCompletionPort (-1, 0, 0, 线程数)
    线程池_状态 ＝ 真
    线程池_处理函数 ＝ 到整数 (处理函数)
    
    RtlMoveMemory_Eint_int (变量_CD7D0225, 成员_线程池IOCP, 4)
    RtlMoveMemory_Eint_int (变量_CD7D0225 ＋ 4, 到整数 (1), 4)
    RtlMoveMemory_Eint_int (变量_CD7D0225 ＋ 8, 线程池_处理函数, 4)
    RtlMoveMemory_Eint_int (变量_CD7D0225 ＋ 12, 超时返回, 4)
    成员_线程数 ＝ 线程数
    .计次循环首 (成员_线程数, )
        CloseHandle (线程_启动 (&内部_线程, 变量_CD7D0225))
    .计次循环尾 ()
    返回 (真)

.子程序 加入工作, 逻辑型, 公开, 成功返回真，失败返回假。
    .参数 任务参数, 整数型

    .如果真 (取反 (线程池_状态))
        返回 (假)
    .如果真结束
    返回 (PostQueuedCompletionStatus (成员_线程池IOCP, 任务参数, 0, 0) ＝ 1)

.子程序 关闭, 逻辑型, 公开, 成功返回真，失败返回假。
    .参数 等待时间, 整数型, 可空, 可空。默认为“5000”毫秒。等待线程池销毁的时间，单位毫秒。如果为-1则无限等待。
    .参数 执行函数, 整数型, 可空, 可空。成功关闭后，执行此函数。
    .参数 传入参数, 整数型, 可空, 可空。第2个参数为空时，此参数无效。
    .局部变量 变量_D27D0225, 逻辑型

    .如果真 (取反 (线程池_状态))
        返回 (假)
    .如果真结束
    
    线程池_状态 ＝ 假
    .计次循环首 (成员_线程数, )
        PostQueuedCompletionStatus (成员_线程池IOCP, 0, -999, 0)
    .计次循环尾 ()
    
    .判断开始 (是否为空 (等待时间))
        等待时间 ＝ 5000
    .判断 (等待时间 ＝ -1)
        等待时间 ＝ 5000 × 5000
    .默认
        
    .判断结束
    
    
    程序_延时 (等待时间)
    
    变量_D27D0225 ＝ CloseHandle (成员_线程池IOCP)
    返回 (变量_D27D0225)

.子程序 取状态, 逻辑型, 公开, 取一个线程池的状态
    返回 (线程池_状态)

