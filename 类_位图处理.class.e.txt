.版本 2

.程序集 类_位图处理, , 公开, 作: 为你芯冻
.子程序 _初始化
    

.子程序 _销毁
    

.子程序 取位图颜色, 整数型, 公开
    .参数 位图, 字节集
    .参数 横坐标, 整数型, 可空, 范围为 0~图像宽度 - 1；留空为0。表示图像最左侧。
    .参数 纵坐标, 整数型, 可空, 范围为 0~图像高度 - 1；留空为0。表示图像最顶边。
    .局部变量 变量_B39D0125, 整数型
    .局部变量 变量_B49D0125, 整数型
    .局部变量 变量_B59D0125, 整数型
    .局部变量 变量_B69D0125, 短整数型
    .局部变量 变量_B79D0125, 整数型
    .局部变量 变量_B89D0125, 整数型
    .局部变量 变量_B99D0125, 整数型
    .局部变量 变量_BA9D0125, 整数型
    .局部变量 变量_BB9D0125, 整数型
    .局部变量 变量_BC9D0125, 字节集
    .局部变量 变量_BD9D0125, 整数型
    .局部变量 变量_BE9D0125, 整数型

    .如果真 (取字节集左边 (位图, 2) ≠ { 66, 77 })
        返回 (-1)
    .如果真结束
    变量_B39D0125 ＝ 取字节集数据 (取字节集中间 (位图, 15, 4), #整数型, )
    变量_B49D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), #整数型, )
    变量_B59D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), #整数型, )
    变量_B69D0125 ＝ 取字节集数据 (取字节集中间 (位图, 29, 2), #短整数型, )
    变量_B79D0125 ＝ 取字节集数据 (取字节集中间 (位图, 31, 4), #整数型, )
    .如果真 (变量_B79D0125 ≠ 0 且 变量_B79D0125 ≠ 3)
        返回 (-1)
    .如果真结束
    .如果真 (横坐标 ＜ 0 或 纵坐标 ＜ 0 或 横坐标 ＞ 变量_B49D0125 － 1 或 纵坐标 ＞ 变量_B59D0125 － 1)
        返回 (-1)
    .如果真结束
    .判断开始 (变量_B69D0125 ＝ 16 或 变量_B69D0125 ＝ 32)
        变量_BB9D0125 ＝ 选择 (变量_B79D0125 ＝ 0, 0, 12)
    .判断 (变量_B69D0125 ＝ 24)
        变量_BB9D0125 ＝ 0
    .判断 (变量_B69D0125 ＝ 1 或 变量_B69D0125 ＝ 4 或 变量_B69D0125 ＝ 8)
        变量_BB9D0125 ＝ 左移 (取字节集数据 (取字节集中间 (位图, 47, 4), #整数型, ), 2)
        .如果真 (变量_BB9D0125 ＝ 0)
            变量_BB9D0125 ＝ 左移 (4, 变量_B69D0125)
        .如果真结束
        
    .默认
        返回 (-1)
    .判断结束
    变量_B89D0125 ＝ 左移 (右移 (变量_B49D0125 × 变量_B69D0125 ＋ 31, 5), 2)
    变量_B99D0125 ＝ (右移 (变量_B59D0125, 31) × (变量_B59D0125 ＋ 1) ＋ 变量_B59D0125 － 位或 (右移 (变量_B59D0125, 31), 1) × (纵坐标 ＋ 1)) × 变量_B89D0125 ＋ 右移 (横坐标 × 变量_B69D0125, 3) ＋ 1
    变量_BA9D0125 ＝ 14 ＋ 变量_B39D0125 ＋ 变量_BB9D0125 ＋ 变量_B99D0125
    变量_BC9D0125 ＝ { 0, 0, 0, 0 }
    .判断开始 (变量_B69D0125 ＝ 32)
        变量_BC9D0125 ＝ 取字节集中间 (位图, 变量_BA9D0125, 4)
    .判断 (变量_B69D0125 ＝ 24)
        变量_BC9D0125 [1] ＝ 位图 [变量_BA9D0125 ＋ 2]
        变量_BC9D0125 [2] ＝ 位图 [变量_BA9D0125 ＋ 1]
        变量_BC9D0125 [3] ＝ 位图 [变量_BA9D0125]
    .判断 (变量_B69D0125 ＝ 1 或 变量_B69D0125 ＝ 4 或 变量_B69D0125 ＝ 8)
        变量_BE9D0125 ＝ 位图 [变量_BA9D0125]
        变量_BD9D0125 ＝ 位与 (横坐标 ＋ 1, 8 ÷ 变量_B69D0125 － 1)
        .如果真 (变量_BD9D0125 ＞ 0)
            变量_BE9D0125 ＝ 右移 (变量_BE9D0125, 8 － 变量_B69D0125 × 变量_BD9D0125)
        .如果真结束
        变量_BE9D0125 ＝ 位与 (变量_BE9D0125, 左移 (1, 变量_B69D0125) － 1)
        变量_BE9D0125 ＝ 14 ＋ 变量_B39D0125 ＋ 左移 (变量_BE9D0125, 2) ＋ 1
        变量_BC9D0125 [1] ＝ 位图 [变量_BE9D0125 ＋ 2]
        变量_BC9D0125 [2] ＝ 位图 [变量_BE9D0125 ＋ 1]
        变量_BC9D0125 [3] ＝ 位图 [变量_BE9D0125]
    .默认
        
    .判断结束
    返回 (取字节集数据 (变量_BC9D0125, #整数型, ))

.子程序 置位图颜色, 字节集, 公开
    .参数 位图, 字节集
    .参数 横坐标, 整数型, 可空, 范围为 0~图像宽度 - 1；留空为0。表示图像最左侧。
    .参数 纵坐标, 整数型, 可空, 范围为 0~图像高度 - 1；留空为0。表示图像最顶边。
    .参数 颜色值, 整数型
    .局部变量 变量_C39D0125, 整数型
    .局部变量 变量_C49D0125, 整数型
    .局部变量 变量_C59D0125, 整数型
    .局部变量 变量_C69D0125, 短整数型
    .局部变量 变量_C79D0125, 整数型
    .局部变量 变量_C89D0125, 整数型
    .局部变量 变量_C99D0125, 整数型
    .局部变量 变量_CA9D0125, 整数型
    .局部变量 变量_CB9D0125, 整数型
    .局部变量 变量_CC9D0125, 字节集

    .如果真 (取字节集左边 (位图, 2) ≠ { 66, 77 })
        返回 ({ })
    .如果真结束
    变量_C39D0125 ＝ 取字节集数据 (取字节集中间 (位图, 15, 4), #整数型, )
    变量_C49D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), #整数型, )
    变量_C59D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), #整数型, )
    变量_C69D0125 ＝ 取字节集数据 (取字节集中间 (位图, 29, 2), #短整数型, )
    变量_C79D0125 ＝ 取字节集数据 (取字节集中间 (位图, 31, 4), #整数型, )
    .如果真 (变量_C79D0125 ≠ 0 且 变量_C79D0125 ≠ 3)
        返回 (位图)
    .如果真结束
    .如果真 (横坐标 ＜ 0 或 纵坐标 ＜ 0 或 横坐标 ＞ 变量_C49D0125 － 1 或 纵坐标 ＞ 变量_C59D0125 － 1)
        返回 (位图)
    .如果真结束
    .判断开始 (变量_C69D0125 ＝ 16 或 变量_C69D0125 ＝ 32)
        变量_CB9D0125 ＝ 选择 (变量_C79D0125 ＝ 0, 0, 12)
    .判断 (变量_C69D0125 ＝ 24)
        变量_CB9D0125 ＝ 0
    .默认
        返回 (位图)
    .判断结束
    变量_C89D0125 ＝ 左移 (右移 (变量_C49D0125 × 变量_C69D0125 ＋ 31, 5), 2)
    变量_C99D0125 ＝ (右移 (变量_C59D0125, 31) × (变量_C59D0125 ＋ 1) ＋ 变量_C59D0125 － 位或 (右移 (变量_C59D0125, 31), 1) × (纵坐标 ＋ 1)) × 变量_C89D0125 ＋ 右移 (横坐标 × 变量_C69D0125, 3) ＋ 1
    变量_CA9D0125 ＝ 14 ＋ 变量_C39D0125 ＋ 变量_CB9D0125 ＋ 变量_C99D0125
    变量_CC9D0125 ＝ 到字节集 (颜色值)
    .判断开始 (变量_C69D0125 ＝ 32)
        位图 ＝ 字节集替换 (位图, 变量_CA9D0125, 4, 变量_CC9D0125)
    .判断 (变量_C69D0125 ＝ 24)
        位图 [变量_CA9D0125 ＋ 2] ＝ 变量_CC9D0125 [1]
        位图 [变量_CA9D0125 ＋ 1] ＝ 变量_CC9D0125 [2]
        位图 [变量_CA9D0125] ＝ 变量_CC9D0125 [3]
    .默认
        
    .判断结束
    返回 (位图)

.子程序 取位图颜色表, 整数型, 公开
    .参数 位图, 字节集
    .参数 颜色表, 整数型, 参考 数组
    .局部变量 变量_A09D0125, 整数型
    .局部变量 变量_A19D0125, 整数型
    .局部变量 变量_A29D0125, 整数型
    .局部变量 变量_A39D0125, 短整数型
    .局部变量 变量_A49D0125, 整数型
    .局部变量 变量_A59D0125, 整数型
    .局部变量 变量_A69D0125, 整数型
    .局部变量 变量_A79D0125, 整数型
    .局部变量 变量_A89D0125, 整数型
    .局部变量 变量_A99D0125, 字节集
    .局部变量 变量_AA9D0125, 整数型
    .局部变量 变量_AB9D0125, 整数型
    .局部变量 变量_AC9D0125, 整数型
    .局部变量 变量_AD9D0125, 整数型

    .如果真 (取字节集左边 (位图, 2) ≠ { 66, 77 })
        返回 (0)
    .如果真结束
    变量_A09D0125 ＝ 取字节集数据 (取字节集中间 (位图, 15, 4), #整数型, )
    变量_A19D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), #整数型, )
    变量_A29D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), #整数型, )
    变量_A39D0125 ＝ 取字节集数据 (取字节集中间 (位图, 29, 2), #短整数型, )
    变量_A49D0125 ＝ 取字节集数据 (取字节集中间 (位图, 31, 4), #整数型, )
    .如果真 (变量_A49D0125 ≠ 0 且 变量_A49D0125 ≠ 3)
        返回 (0)
    .如果真结束
    .判断开始 (变量_A39D0125 ＝ 16 或 变量_A39D0125 ＝ 32)
        变量_A89D0125 ＝ 选择 (变量_A49D0125 ＝ 0, 0, 12)
    .判断 (变量_A39D0125 ＝ 24)
        变量_A89D0125 ＝ 0
    .判断 (变量_A39D0125 ＝ 1 或 变量_A39D0125 ＝ 4 或 变量_A39D0125 ＝ 8)
        变量_A89D0125 ＝ 左移 (取字节集数据 (取字节集中间 (位图, 47, 4), #整数型, ), 2)
        .如果真 (变量_A89D0125 ＝ 0)
            变量_A89D0125 ＝ 左移 (4, 变量_A39D0125)
        .如果真结束
        
    .默认
        返回 (0)
    .判断结束
    变量_A59D0125 ＝ 左移 (右移 (变量_A19D0125 × 变量_A39D0125 ＋ 31, 5), 2)
    重定义数组 (颜色表, 假, 变量_A19D0125, 变量_A29D0125)
    .计次循环首 (变量_A19D0125, 变量_AA9D0125)
        .计次循环首 (变量_A29D0125, 变量_AB9D0125)
            变量_A69D0125 ＝ (右移 (变量_A29D0125, 31) × (变量_A29D0125 ＋ 1) ＋ 变量_A29D0125 － 位或 (右移 (变量_A29D0125, 31), 1) × 变量_AB9D0125) × 变量_A59D0125 ＋ 右移 ((变量_AA9D0125 － 1) × 变量_A39D0125, 3) ＋ 1
            变量_A79D0125 ＝ 14 ＋ 变量_A09D0125 ＋ 变量_A89D0125 ＋ 变量_A69D0125
            变量_A99D0125 ＝ { 0, 0, 0, 0 }
            .判断开始 (变量_A39D0125 ＝ 32)
                变量_A99D0125 ＝ 取字节集中间 (位图, 变量_A79D0125, 4)
            .判断 (变量_A39D0125 ＝ 24)
                变量_A99D0125 [1] ＝ 位图 [变量_A79D0125 ＋ 2]
                变量_A99D0125 [2] ＝ 位图 [变量_A79D0125 ＋ 1]
                变量_A99D0125 [3] ＝ 位图 [变量_A79D0125]
            .判断 (变量_A39D0125 ＝ 1 或 变量_A39D0125 ＝ 4 或 变量_A39D0125 ＝ 8)
                变量_AC9D0125 ＝ 位图 [变量_A79D0125]
                变量_AD9D0125 ＝ 位与 (变量_AA9D0125, 8 ÷ 变量_A39D0125 － 1)
                .如果真 (变量_AD9D0125 ＞ 0)
                    变量_AC9D0125 ＝ 右移 (变量_AC9D0125, 8 － 变量_A39D0125 × 变量_AD9D0125)
                .如果真结束
                变量_AC9D0125 ＝ 位与 (变量_AC9D0125, 左移 (1, 变量_A39D0125) － 1)
                变量_AC9D0125 ＝ 14 ＋ 变量_A09D0125 ＋ 左移 (变量_AC9D0125, 2) ＋ 1
                变量_A99D0125 [1] ＝ 位图 [变量_AC9D0125 ＋ 2]
                变量_A99D0125 [2] ＝ 位图 [变量_AC9D0125 ＋ 1]
                变量_A99D0125 [3] ＝ 位图 [变量_AC9D0125]
            .默认
                
            .判断结束
            颜色表 [变量_AA9D0125] [变量_AB9D0125] ＝ 取字节集数据 (变量_A99D0125, 3, )
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    返回 (变量_A39D0125)

.子程序 颜色表构建位图, 字节集, 公开, 如果颜色表是24位颜色表的话要构建8位位图 必须先把24位颜色表改成8位颜色表
    .参数 颜色表, 整数型, 数组, 输进一个二维数组,分别表示宽和高,数组值为颜色值
    .参数 位数, 整数型, 可空, 默认为24
    .局部变量 变量_929D0125, 整数型
    .局部变量 变量_939D0125, 整数型
    .局部变量 变量_949D0125, 整数型
    .局部变量 变量_959D0125, 整数型
    .局部变量 变量_969D0125, 整数型
    .局部变量 变量_979D0125, 整数型
    .局部变量 变量_989D0125, 整数型
    .局部变量 变量_999D0125, 字节集
    .局部变量 变量_9A9D0125, 整数型, , "0"

    .如果真 (取数组成员数 (颜色表) ＝ 0)
        返回 ({ })
    .如果真结束
    位数 ＝ 选择 (是否为空 (位数), 24, 位数)
    变量_929D0125 ＝ 取字节集数据 (指针到字节集 (lstrcpynA_整数数组 (颜色表, 颜色表, 0) － 8, 4), 3, )
    变量_949D0125 ＝ 取字节集数据 (指针到字节集 (lstrcpynA_整数数组 (颜色表, 颜色表, 0) － 4, 4), 3, )
    .判断开始 (位数 ＝ 24)
        .计次循环首 (变量_949D0125, 变量_969D0125)
            .计次循环首 (变量_929D0125, 变量_959D0125)
                变量_999D0125 ＝ 变量_999D0125 ＋ 字节集_反转 (取字节集左边 (到字节集 (颜色表 [变量_959D0125] [变量_949D0125 ＋ 1 － 变量_969D0125]), 3))
            .计次循环尾 ()
            .如果真 (取字节集长度 (变量_999D0125) ÷ 4 ≠ 到整数 (取字节集长度 (变量_999D0125) ÷ 4))
                变量_999D0125 ＝ 变量_999D0125 ＋ 取空白字节集 ((1 － 取字节集长度 (变量_999D0125) ÷ 4 ＋ 到整数 (取字节集长度 (变量_999D0125) ÷ 4)) × 4)
            .如果真结束
            处理事件 ()
        .计次循环尾 ()
        变量_999D0125 ＝ { 66, 77 } ＋ 到字节集 (到整数 (58 ＋ 取字节集长度 (变量_999D0125))) ＋ { 0, 0, 0, 0, 54, 0, 0, 0, 40, 0, 0, 0 } ＋ 到字节集 (变量_929D0125) ＋ 到字节集 (变量_949D0125) ＋ { 1, 0, 24, 0, 0, 0, 0, 0 } ＋ 到字节集 (取字节集长度 (变量_999D0125)) ＋ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ＋ 变量_999D0125
    .判断 (位数 ＝ 1)
        变量_9A9D0125 ＝ { #黑色, #白色 }
        变量_939D0125 ＝ 到整数 (变量_929D0125 ÷ 8)
        .如果真 (变量_939D0125 ≠ 变量_929D0125 ÷ 8)
            变量_939D0125 ＝ 变量_939D0125 ＋ 1
        .如果真结束
        .计次循环首 (变量_949D0125, 变量_969D0125)
            .计次循环首 (变量_939D0125, 变量_959D0125)
                变量_999D0125 ＝ 变量_999D0125 ＋ { 0 }
                .计次循环首 (8, 变量_979D0125)
                    .如果真 ((变量_959D0125 － 1) × 8 ＋ 变量_979D0125 ≤ 变量_929D0125)
                        .如果真 (颜色表 [(变量_959D0125 － 1) × 8 ＋ 变量_979D0125] [变量_949D0125 ＋ 1 － 变量_969D0125] ＝ #白色)
                            变量_999D0125 [取字节集长度 (变量_999D0125)] ＝ 变量_999D0125 [取字节集长度 (变量_999D0125)] ＋ 求次方 (2, 8 － 变量_979D0125)
                        .如果真结束
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
            .如果真 (取字节集长度 (变量_999D0125) ÷ 4 ≠ 到整数 (取字节集长度 (变量_999D0125) ÷ 4))
                变量_999D0125 ＝ 变量_999D0125 ＋ 取空白字节集 ((1 － 取字节集长度 (变量_999D0125) ÷ 4 ＋ 到整数 (取字节集长度 (变量_999D0125) ÷ 4)) × 4)
            .如果真结束
            处理事件 ()
        .计次循环尾 ()
        变量_999D0125 ＝ { 66, 77 } ＋ 到字节集 (到整数 (66 ＋ 取字节集长度 (变量_999D0125))) ＋ { 0, 0, 0, 0, 62, 0, 0, 0, 40, 0, 0, 0 } ＋ 到字节集 (变量_929D0125) ＋ 到字节集 (变量_949D0125) ＋ { 1, 0, 1, 0, 0, 0, 0, 0 } ＋ 到字节集 (取字节集长度 (变量_999D0125)) ＋ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ＋ 指针到字节集 (lstrcpynA_整数数组 (变量_9A9D0125, 变量_9A9D0125, 0), 取数组成员数 (变量_9A9D0125) × 4) ＋ 变量_999D0125
    .判断 (位数 ＝ 4)
        变量_9A9D0125 ＝ { 0, 8388608, 32768, 8421376, 128, 8388736, 32896, 8421504, 12632256, 16711680, 65280, 16776960, 255, 16711935, 65535, 16777215 }
        变量_939D0125 ＝ 到整数 (变量_929D0125 ÷ 2)
        .如果真 (变量_939D0125 ≠ 变量_929D0125 ÷ 2)
            变量_939D0125 ＝ 变量_939D0125 ＋ 1
        .如果真结束
        .计次循环首 (变量_949D0125, 变量_969D0125)
            .计次循环首 (变量_939D0125, 变量_959D0125)
                变量_999D0125 ＝ 变量_999D0125 ＋ { 0 }
                .计次循环首 (2, 变量_979D0125)
                    .如果真 ((变量_959D0125 － 1) × 2 ＋ 变量_979D0125 ≤ 变量_929D0125)
                        .计次循环首 (取数组成员数 (变量_9A9D0125), 变量_989D0125)
                            .如果真 (变量_9A9D0125 [变量_989D0125] ＝ 颜色表 [(变量_959D0125 － 1) × 2 ＋ 变量_979D0125] [变量_949D0125 ＋ 1 － 变量_969D0125])
                                跳出循环 ()
                            .如果真结束
                            
                        .计次循环尾 ()
                        变量_989D0125 ＝ 选择 (变量_989D0125 ＝ 取数组成员数 (变量_9A9D0125) ＋ 1, 变量_989D0125 － 2, 变量_989D0125 － 1)
                        变量_999D0125 [取字节集长度 (变量_999D0125)] ＝ 变量_999D0125 [取字节集长度 (变量_999D0125)] ＋ 变量_989D0125 × 求次方 (16, 2 － 变量_979D0125)
                        
                    .如果真结束
                    
                .计次循环尾 ()
            .计次循环尾 ()
            .如果真 (取字节集长度 (变量_999D0125) ÷ 4 ≠ 到整数 (取字节集长度 (变量_999D0125) ÷ 4))
                变量_999D0125 ＝ 变量_999D0125 ＋ 取空白字节集 ((1 － 取字节集长度 (变量_999D0125) ÷ 4 ＋ 到整数 (取字节集长度 (变量_999D0125) ÷ 4)) × 4)
            .如果真结束
            处理事件 ()
        .计次循环尾 ()
        变量_999D0125 ＝ { 66, 77 } ＋ 到字节集 (到整数 (122 ＋ 取字节集长度 (变量_999D0125))) ＋ { 0, 0, 0, 0, 118, 0, 0, 0, 40, 0, 0, 0 } ＋ 到字节集 (变量_929D0125) ＋ 到字节集 (变量_949D0125) ＋ { 1, 0, 4, 0, 0, 0, 0, 0 } ＋ 到字节集 (取字节集长度 (变量_999D0125)) ＋ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ＋ 指针到字节集 (lstrcpynA_整数数组 (变量_9A9D0125, 变量_9A9D0125, 0), 取数组成员数 (变量_9A9D0125) × 4) ＋ 变量_999D0125
    .判断 (位数 ＝ 8)
        变量_9A9D0125 ＝ { 0, 65793, 131586, 197379, 263172, 328965, 394758, 460551, 526344, 592137, 657930, 723723, 789516, 855309, 921102, 986895, 1052688, 1118481, 1184274, 1250067, 1315860, 1381653, 1447446, 1513239, 1579032, 1644825, 1710618, 1776411, 1842204, 1907997, 1973790, 2039583, 2105376, 2171169, 2236962, 2302755, 2368548, 2434341, 2500134, 2565927, 2631720, 2697513, 2763306, 2829099, 2894892, 2960685, 3026478, 3092271, 3158064, 3223857, 3289650, 3355443, 3421236, 3487029, 3552822, 3618615, 3684408, 3750201, 3815994, 3881787, 3947580, 4013373, 4079166, 4144959, 4210752, 4276545, 4342338, 4408131, 4473924, 4539717, 4605510, 4671303, 4737096, 4802889, 4868682, 4934475, 5000268, 5066061, 5131854, 5197647, 5263440, 5329233, 5395026, 5460819, 5526612, 5592405, 5658198, 5723991, 5789784, 5855577, 5921370, 5987163, 6052956, 6118749, 6184542, 6250335, 6316128, 6381921, 6447714, 6513507, 6579300, 6645093, 6710886, 6776679, 6842472, 6908265, 6974058, 7039851, 7105644, 7171437, 7237230, 7303023, 7368816, 7434609, 7500402, 7566195, 7631988, 7697781, 7763574, 7829367, 7895160, 7960953, 8026746, 8092539, 8158332, 8224125, 8289918, 8355711, 8421504, 8487297, 8553090, 8618883, 8684676, 8750469, 8816262, 8882055, 8947848, 9013641, 9079434, 9145227, 9211020, 9276813, 9342606, 9408399, 9474192, 9539985, 9605778, 9671571, 9737364, 9803157, 9868950, 9934743, 10000536, 10066329, 10132122, 10197915, 10263708, 10329501, 10395294, 10461087, 10526880, 10592673, 10658466, 10724259, 10790052, 10855845, 10921638, 10987431, 11053224, 11119017, 11184810, 11250603, 11316396, 11382189, 11447982, 11513775, 11579568, 11645361, 11711154, 11776947, 11842740, 11908533, 11974326, 12040119, 12105912, 12171705, 12237498, 12303291, 12369084, 12434877, 12500670, 12566463, 12632256, 12698049, 12763842, 12829635, 12895428, 12961221, 13027014, 13092807, 13158600, 13224393, 13290186, 13355979, 13421772, 13487565, 13553358, 13619151, 13684944, 13750737, 13816530, 13882323, 13948116, 14013909, 14079702, 14145495, 14211288, 14277081, 14342874, 14408667, 14474460, 14540253, 14606046, 14671839, 14737632, 14803425, 14869218, 14935011, 15000804, 15066597, 15132390, 15198183, 15263976, 15329769, 15395562, 15461355, 15527148, 15592941, 15658734, 15724527, 15790320, 15856113, 15921906, 15987699, 16053492, 16119285, 16185078, 16250871, 16316664, 16382457, 16448250, 16514043, 16579836, 16645629, 16711422, 16777215 }
        .计次循环首 (变量_949D0125, 变量_969D0125)
            .计次循环首 (变量_929D0125, 变量_959D0125)
                变量_999D0125 ＝ 变量_999D0125 ＋ { 0 }
                .计次循环首 (取数组成员数 (变量_9A9D0125), 变量_989D0125)
                    .如果真 (变量_9A9D0125 [变量_989D0125] ＝ 颜色表 [变量_959D0125] [变量_949D0125 ＋ 1 － 变量_969D0125])
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
                变量_989D0125 ＝ 选择 (变量_989D0125 ＝ 取数组成员数 (变量_9A9D0125) ＋ 1, 变量_989D0125 － 2, 变量_989D0125 － 1)
                变量_999D0125 [取字节集长度 (变量_999D0125)] ＝ 变量_989D0125
            .计次循环尾 ()
            .如果真 (取字节集长度 (变量_999D0125) ÷ 4 ≠ 到整数 (取字节集长度 (变量_999D0125) ÷ 4))
                变量_999D0125 ＝ 变量_999D0125 ＋ 取空白字节集 ((1 － 取字节集长度 (变量_999D0125) ÷ 4 ＋ 到整数 (取字节集长度 (变量_999D0125) ÷ 4)) × 4)
            .如果真结束
            处理事件 ()
        .计次循环尾 ()
        变量_999D0125 ＝ { 66, 77 } ＋ 到字节集 (到整数 (2102 ＋ 取字节集长度 (变量_999D0125))) ＋ { 0, 0, 0, 0, 54, 4, 0, 0, 40, 0, 0, 0 } ＋ 到字节集 (变量_929D0125) ＋ 到字节集 (变量_949D0125) ＋ { 1, 0, 8, 0, 0, 0, 0, 0 } ＋ 到字节集 (取字节集长度 (变量_999D0125)) ＋ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ＋ 指针到字节集 (lstrcpynA_整数数组 (变量_9A9D0125, 变量_9A9D0125, 0), 取数组成员数 (变量_9A9D0125) × 4) ＋ 变量_999D0125
    .判断 (位数 ＝ 32)
        .计次循环首 (变量_949D0125, 变量_969D0125)
            .计次循环首 (变量_929D0125, 变量_959D0125)
                变量_999D0125 ＝ 变量_999D0125 ＋ 字节集_反转 (取字节集左边 (到字节集 (颜色表 [变量_959D0125] [变量_949D0125 ＋ 1 － 变量_969D0125]), 3)) ＋ { 0 }
            .计次循环尾 ()
            处理事件 ()
        .计次循环尾 ()
        变量_999D0125 ＝ { 66, 77 } ＋ 到字节集 (到整数 (58 ＋ 取字节集长度 (变量_999D0125))) ＋ { 0, 0, 0, 0, 54, 0, 0, 0, 40, 0, 0, 0 } ＋ 到字节集 (变量_929D0125) ＋ 到字节集 (变量_949D0125) ＋ { 1, 0, 32, 0, 0, 0, 0, 0 } ＋ 到字节集 (取字节集长度 (变量_999D0125)) ＋ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ＋ 变量_999D0125
    .默认
        
    .判断结束
    返回 (变量_999D0125)

.子程序 位图去杂点, 字节集, 公开
    .参数 位图, 字节集
    .局部变量 变量_DE9C0125, 整数型, , "0"
    .局部变量 变量_DF9C0125, 整数型
    .局部变量 变量_E09C0125, 整数型
    .局部变量 变量_E19C0125, 整数型
    .局部变量 变量_E29C0125, 整数型
    .局部变量 变量_E39C0125, 整数型
    .局部变量 变量_E49C0125, 整数型
    .局部变量 变量_E59C0125, 整数型
    .局部变量 变量_E69C0125, 整数型
    .局部变量 变量_E79C0125, 整数型, , "8,3"

    变量_DF9C0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_E09C0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    写到内存 ({ 1, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 2, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 4, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 8, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 128, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0 }, lstrcpynA_整数数组 (变量_E79C0125, 变量_E79C0125, 0), 96)
    取位图颜色表 (位图, 变量_DE9C0125)
    .计次循环首 (变量_E09C0125, 变量_E29C0125)
        .计次循环首 (变量_DF9C0125, 变量_E19C0125)
            变量_E59C0125 ＝ -1
            变量_E69C0125 ＝ -1
            变量_E49C0125 ＝ 点是否孤立 (位图, 变量_E19C0125 － 1, 变量_E29C0125 － 1)
            .如果真 (变量_E49C0125 ＝ -1)
                到循环尾 ()
            .如果真结束
            .如果真 (变量_E49C0125 ＝ 0)
                变量_DE9C0125 [变量_E19C0125] [变量_E29C0125] ＝ #白色
                到循环尾 ()
            .如果真结束
            .计次循环首 (8, 变量_E39C0125)
                .如果真 (位与 (变量_E49C0125, 变量_E79C0125 [变量_E39C0125] [1]) ＝ 变量_E79C0125 [变量_E39C0125] [1])
                    .如果 (变量_E59C0125 ＝ -1 且 变量_E69C0125 ＝ -1)
                        变量_E59C0125 ＝ 变量_E19C0125 ＋ 变量_E79C0125 [变量_E39C0125] [2]
                        变量_E69C0125 ＝ 变量_E29C0125 ＋ 变量_E79C0125 [变量_E39C0125] [3]
                    .否则
                        跳出循环 ()
                    .如果结束
                    
                .如果真结束
                
            .计次循环尾 ()
            .如果真 (变量_E39C0125 ＝ 9)
                变量_E39C0125 ＝ 点是否孤立 (位图, 变量_E59C0125, 变量_E69C0125)
                .如果真 (变量_E39C0125 ＝ 变量_E49C0125)
                    变量_DE9C0125 [变量_E19C0125] [变量_E29C0125] ＝ #白色
                    变量_DE9C0125 [变量_E59C0125] [变量_E69C0125] ＝ #白色
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    位图 ＝ 颜色表构建位图 (变量_DE9C0125)
    返回 (位图)

.子程序 位图缩放, 字节集, 公开
    .参数 位图, 字节集
    .参数 缩放后宽, 整数型
    .参数 缩放后高, 整数型
    .局部变量 变量_EB9C0125, 整数型
    .局部变量 变量_EC9C0125, 整数型
    .局部变量 变量_ED9C0125, 整数型
    .局部变量 变量_EE9C0125, 整数型
    .局部变量 变量_EF9C0125, 双精度小数型
    .局部变量 变量_F09C0125, 双精度小数型
    .局部变量 变量_F19C0125, 整数型
    .局部变量 变量_F29C0125, 整数型
    .局部变量 变量_F39C0125, 整数型
    .局部变量 变量_F49C0125, 整数型
    .局部变量 变量_F59C0125, 字节集
    .局部变量 变量_F69C0125, 字节集
    .局部变量 变量_F79C0125, 双精度小数型
    .局部变量 变量_F89C0125, 双精度小数型
    .局部变量 变量_F99C0125, 双精度小数型
    .局部变量 变量_FA9C0125, 双精度小数型
    .局部变量 变量_FB9C0125, 双精度小数型
    .局部变量 变量_FC9C0125, 双精度小数型
    .局部变量 变量_FD9C0125, 双精度小数型
    .局部变量 变量_FE9C0125, 双精度小数型
    .局部变量 变量_FF9C0125, 双精度小数型
    .局部变量 变量_009D0125, 双精度小数型
    .局部变量 变量_019D0125, 双精度小数型
    .局部变量 变量_029D0125, 整数型, , "0"
    .局部变量 变量_039D0125, 整数型, , "0"

    变量_EB9C0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_EC9C0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    取位图颜色表 (位图, 变量_029D0125)
    重定义数组 (变量_039D0125, 假, 缩放后宽, 缩放后高)
    变量_009D0125 ＝ 变量_EB9C0125 ÷ 缩放后宽
    变量_019D0125 ＝ 变量_EC9C0125 ÷ 缩放后高
    .计次循环首 (缩放后宽, 变量_ED9C0125)
        .计次循环首 (缩放后高, 变量_EE9C0125)
            变量_EF9C0125 ＝ 变量_ED9C0125 × 变量_009D0125
            变量_F09C0125 ＝ 变量_EE9C0125 × 变量_019D0125
            .如果 (到整数 (变量_EF9C0125) ≠ 变量_EF9C0125)
                变量_F19C0125 ＝ 选择 (到整数 (变量_EF9C0125) ＜ 1, 1, 到整数 (变量_EF9C0125))
                变量_F29C0125 ＝ 到整数 (变量_EF9C0125) ＋ 1
            .否则
                变量_F19C0125 ＝ 变量_EF9C0125
                变量_F29C0125 ＝ 变量_EF9C0125
            .如果结束
            .如果 (到整数 (变量_F09C0125) ≠ 变量_F09C0125)
                变量_F39C0125 ＝ 选择 (到整数 (变量_F09C0125) ＜ 1, 1, 到整数 (变量_F09C0125))
                变量_F49C0125 ＝ 到整数 (变量_F09C0125) ＋ 1
            .否则
                变量_F39C0125 ＝ 变量_F09C0125
                变量_F49C0125 ＝ 变量_F09C0125
            .如果结束
            变量_F59C0125 ＝ 到字节集 (变量_029D0125 [变量_F19C0125] [变量_F39C0125])
            变量_F69C0125 ＝ 到字节集 (变量_029D0125 [变量_F19C0125] [变量_F49C0125])
            变量_F79C0125 ＝ 变量_F69C0125 [1] － (变量_F69C0125 [1] － 变量_F59C0125 [1]) × (变量_F49C0125 － 变量_F09C0125)
            变量_F89C0125 ＝ 变量_F69C0125 [2] － (变量_F69C0125 [2] － 变量_F59C0125 [2]) × (变量_F49C0125 － 变量_F09C0125)
            变量_F99C0125 ＝ 变量_F69C0125 [3] － (变量_F69C0125 [3] － 变量_F59C0125 [3]) × (变量_F49C0125 － 变量_F09C0125)
            变量_F59C0125 ＝ 到字节集 (变量_029D0125 [变量_F29C0125] [变量_F39C0125])
            变量_F69C0125 ＝ 到字节集 (变量_029D0125 [变量_F29C0125] [变量_F49C0125])
            变量_FA9C0125 ＝ 变量_F69C0125 [1] － (变量_F69C0125 [1] － 变量_F59C0125 [1]) × (变量_F49C0125 － 变量_F09C0125)
            变量_FB9C0125 ＝ 变量_F69C0125 [2] － (变量_F69C0125 [2] － 变量_F59C0125 [2]) × (变量_F49C0125 － 变量_F09C0125)
            变量_FC9C0125 ＝ 变量_F69C0125 [3] － (变量_F69C0125 [3] － 变量_F59C0125 [3]) × (变量_F49C0125 － 变量_F09C0125)
            变量_FD9C0125 ＝ 变量_FA9C0125 － (变量_FA9C0125 － 变量_F79C0125) × (变量_F29C0125 － 变量_EF9C0125)
            变量_FE9C0125 ＝ 变量_FB9C0125 － (变量_FB9C0125 － 变量_F89C0125) × (变量_F29C0125 － 变量_EF9C0125)
            变量_FF9C0125 ＝ 变量_FC9C0125 － (变量_FC9C0125 － 变量_F99C0125) × (变量_F29C0125 － 变量_EF9C0125)
            变量_F59C0125 [1] ＝ 四舍五入 (变量_FD9C0125, )
            变量_F59C0125 [2] ＝ 四舍五入 (变量_FE9C0125, )
            变量_F59C0125 [3] ＝ 四舍五入 (变量_FF9C0125, )
            变量_039D0125 [变量_ED9C0125] [变量_EE9C0125] ＝ 取字节集数据 (变量_F59C0125, 3, )
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    返回 (颜色表构建位图 (变量_039D0125))

.子程序 位图转换位数, 字节集, 公开
    .参数 位图, 字节集
    .参数 位数, 整数型
    .局部变量 变量_069D0125, 整数型
    .局部变量 变量_079D0125, 整数型
    .局部变量 变量_089D0125, 整数型
    .局部变量 变量_099D0125, 整数型
    .局部变量 变量_0A9D0125, 整数型
    .局部变量 变量_0B9D0125, 字节集
    .局部变量 变量_0C9D0125, 字节集
    .局部变量 变量_0D9D0125, 双精度小数型
    .局部变量 变量_0E9D0125, 整数型
    .局部变量 变量_0F9D0125, 整数型, , "0"
    .局部变量 变量_109D0125, 整数型, , "0"

    变量_069D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_079D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    取位图颜色表 (位图, 变量_0F9D0125)
    .如果真 (位数 ＝ 8 或 位数 ＝ 4 或 位数 ＝ 1)
        .计次循环首 (变量_069D0125, 变量_089D0125)
            .计次循环首 (变量_079D0125, 变量_099D0125)
                变量_0B9D0125 ＝ 到字节集 (变量_0F9D0125 [变量_089D0125] [变量_099D0125])
                变量_0D9D0125 ＝ 变量_0B9D0125 [1] × 0.299 ＋ 变量_0B9D0125 [2] × 0.588 ＋ 变量_0B9D0125 [3] × 0.113
                连续赋值 (四舍五入 (变量_0D9D0125, ), 变量_0B9D0125 [1], 变量_0B9D0125 [2], 变量_0B9D0125 [3])
                变量_0F9D0125 [变量_089D0125] [变量_099D0125] ＝ 取字节集数据 (变量_0B9D0125, 3, )
            .计次循环尾 ()
            处理事件 ()
        .计次循环尾 ()
        .如果真 (位数 ＝ 4 或 位数 ＝ 1)
            .如果 (位数 ＝ 4)
                变量_109D0125 ＝ { 0, 8388608, 32768, 8421376, 128, 8388736, 32896, 8421504, 12632256, 16711680, 65280, 16776960, 255, 16711935, 65535, 16777215 }
            .否则
                变量_109D0125 ＝ { #黑色, #白色 }
            .如果结束
            .计次循环首 (变量_069D0125, 变量_089D0125)
                .计次循环首 (变量_079D0125, 变量_099D0125)
                    变量_0B9D0125 ＝ 到字节集 (变量_0F9D0125 [变量_089D0125] [变量_099D0125])
                    变量_0D9D0125 ＝ 变量_0B9D0125 [1]
                    变量_0E9D0125 ＝ -1
                    .计次循环首 (取数组成员数 (变量_109D0125), 变量_0A9D0125)
                        .如果 (变量_0E9D0125 ＝ -1)
                            变量_0E9D0125 ＝ 变量_109D0125 [变量_0A9D0125]
                        .否则
                            变量_0B9D0125 ＝ 到字节集 (变量_0E9D0125)
                            变量_0C9D0125 ＝ 到字节集 (变量_109D0125 [变量_0A9D0125])
                            变量_0E9D0125 ＝ 选择 (取绝对值 (变量_0C9D0125 [1] × 0.113 ＋ 变量_0C9D0125 [2] × 0.588 ＋ 变量_0C9D0125 [3] × 0.299 － 变量_0D9D0125) ＜ 取绝对值 (变量_0B9D0125 [1] × 0.113 ＋ 变量_0B9D0125 [2] × 0.588 ＋ 变量_0B9D0125 [3] × 0.299 － 变量_0D9D0125), 变量_109D0125 [变量_0A9D0125], 变量_0E9D0125)
                        .如果结束
                        
                    .计次循环尾 ()
                    变量_0F9D0125 [变量_089D0125] [变量_099D0125] ＝ 变量_0E9D0125
                .计次循环尾 ()
                处理事件 ()
            .计次循环尾 ()
        .如果真结束
        
    .如果真结束
    位图 ＝ 颜色表构建位图 (变量_0F9D0125, 位数)
    返回 (位图)

.子程序 位图二值化, 字节集, 公开
    .参数 位图, 字节集
    .参数 阀值, 整数型
    .局部变量 变量_129D0125, 整数型
    .局部变量 变量_139D0125, 整数型
    .局部变量 变量_149D0125, 整数型
    .局部变量 变量_159D0125, 整数型
    .局部变量 变量_169D0125, 字节集
    .局部变量 变量_179D0125, 整数型, , "0"

    变量_129D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_139D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    .如果真 (取位图颜色表 (位图, 变量_179D0125) ＝ 0)
        返回 ({ })
    .如果真结束
    .计次循环首 (变量_129D0125, 变量_149D0125)
        .计次循环首 (变量_139D0125, 变量_159D0125)
            变量_169D0125 ＝ 到字节集 (变量_179D0125 [变量_149D0125] [变量_159D0125])
            .如果 (变量_169D0125 [1] ＜ 阀值 且 变量_169D0125 [2] ＜ 阀值 且 变量_169D0125 [3] ＜ 阀值)
                变量_179D0125 [变量_149D0125] [变量_159D0125] ＝ #黑色
            .否则
                变量_179D0125 [变量_149D0125] [变量_159D0125] ＝ #白色
            .如果结束
            
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    位图 ＝ 颜色表构建位图 (变量_179D0125)
    返回 (位图)

.子程序 位图反色, 字节集, 公开
    .参数 位图, 字节集
    .局部变量 变量_199D0125, 整数型, , "0"
    .局部变量 变量_1A9D0125, 整数型
    .局部变量 变量_1B9D0125, 整数型
    .局部变量 变量_1C9D0125, 整数型
    .局部变量 变量_1D9D0125, 整数型
    .局部变量 变量_1E9D0125, 整数型
    .局部变量 变量_1F9D0125, 字节集

    变量_1A9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_1B9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    取位图颜色表 (位图, 变量_199D0125)
    .计次循环首 (变量_1A9D0125, 变量_1C9D0125)
        .计次循环首 (变量_1B9D0125, 变量_1D9D0125)
            变量_1E9D0125 ＝ 变量_199D0125 [变量_1C9D0125] [变量_1D9D0125]
            变量_1F9D0125 ＝ 到字节集 (变量_1E9D0125)
            变量_1F9D0125 [1] ＝ 255 － 变量_1F9D0125 [1]
            变量_1F9D0125 [2] ＝ 255 － 变量_1F9D0125 [2]
            变量_1F9D0125 [3] ＝ 255 － 变量_1F9D0125 [3]
            变量_1E9D0125 ＝ 取字节集数据 (变量_1F9D0125, 3, )
            变量_199D0125 [变量_1C9D0125] [变量_1D9D0125] ＝ 变量_1E9D0125
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    位图 ＝ 颜色表构建位图 (变量_199D0125)
    返回 (位图)

.子程序 取位图轮廓图, 字节集, 公开
    .参数 位图, 字节集
    .局部变量 变量_219D0125, 整数型
    .局部变量 变量_229D0125, 整数型
    .局部变量 变量_239D0125, 整数型
    .局部变量 变量_249D0125, 整数型
    .局部变量 变量_259D0125, 整数型
    .局部变量 变量_269D0125, 整数型
    .局部变量 变量_279D0125, 整数型, , "0"

    变量_219D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_229D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    取位图颜色表 (位图, 变量_279D0125)
    .计次循环首 (变量_219D0125, 变量_239D0125)
        .计次循环首 (变量_229D0125, 变量_249D0125)
            变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125 － 1, 变量_249D0125 － 1)
            .如果真 (变量_269D0125 ≠ #白色)
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125 － 2, 变量_249D0125 － 1)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125 － 1, 变量_249D0125 － 2)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125, 变量_249D0125 － 1)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125 － 1, 变量_249D0125)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125 － 2, 变量_249D0125 － 2)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125, 变量_249D0125 － 2)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125 － 2, 变量_249D0125)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_269D0125 ＝ 取位图颜色 (位图, 变量_239D0125, 变量_249D0125)
                .如果真 (变量_269D0125 ＝ -1 或 变量_269D0125 ＝ #白色)
                    到循环尾 ()
                .如果真结束
                变量_279D0125 [变量_239D0125 － 1] [变量_249D0125 － 1] ＝ #白色
            .如果真结束
            
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    返回 (颜色表构建位图 (变量_279D0125))

.子程序 位图细化, 字节集, 公开
    .参数 位图, 字节集
    .局部变量 变量_299D0125, 字节集
    .局部变量 变量_2A9D0125, 整数型
    .局部变量 变量_2B9D0125, 整数型
    .局部变量 变量_2C9D0125, 逻辑型
    .局部变量 变量_2D9D0125, 整数型
    .局部变量 变量_2E9D0125, 整数型
    .局部变量 变量_2F9D0125, 整数型
    .局部变量 变量_309D0125, 整数型
    .局部变量 变量_319D0125, 整数型
    .局部变量 变量_329D0125, 整数型
    .局部变量 变量_339D0125, 整数型
    .局部变量 变量_349D0125, 整数型
    .局部变量 变量_359D0125, 整数型
    .局部变量 变量_369D0125, 整数型
    .局部变量 变量_379D0125, 整数型

    变量_299D0125 ＝ { 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0 }
    变量_2A9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_2B9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    变量_2C9D0125 ＝ 假
    .判断循环首 (变量_2C9D0125 ＝ 假)
        变量_2C9D0125 ＝ 真
        .计次循环首 (变量_2B9D0125 － 2, 变量_2E9D0125)
            变量_2D9D0125 ＝ 1
            .判断循环首 (变量_2D9D0125 ＜ 变量_2A9D0125 － 2)
                .如果真 (取位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125) ≠ #白色)
                    变量_2F9D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 － 1, 变量_2E9D0125) ＝ #白色, 1, 0)
                    变量_309D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 ＋ 1, 变量_2E9D0125) ＝ #白色, 1, 0)
                    .如果真 (变量_2F9D0125 ＝ 1 或 变量_309D0125 ＝ 1)
                        变量_319D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 － 1, 变量_2E9D0125 － 1) ＝ #白色, 1, 0)
                        变量_329D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125 － 1) ＝ #白色, 1, 0)
                        变量_339D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 ＋ 1, 变量_2E9D0125 － 1) ＝ #白色, 1, 0)
                        变量_349D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 － 1, 变量_2E9D0125 ＋ 1) ＝ #白色, 1, 0)
                        变量_359D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125 ＋ 1) ＝ #白色, 1, 0)
                        变量_369D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 ＋ 1, 变量_2E9D0125 ＋ 1) ＝ #白色, 1, 0)
                        变量_379D0125 ＝ 变量_319D0125 ＋ 变量_329D0125 × 2 ＋ 变量_339D0125 × 4 ＋ 变量_2F9D0125 × 8 ＋ 变量_309D0125 × 16 ＋ 变量_349D0125 × 32 ＋ 变量_359D0125 × 64 ＋ 变量_369D0125 × 128
                        .如果真 (变量_299D0125 [变量_379D0125 ＋ 1] ＝ 1)
                            位图 ＝ 置位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125, #白色)
                            变量_2C9D0125 ＝ 假
                            变量_2D9D0125 ＝ 变量_2D9D0125 ＋ 1
                        .如果真结束
                        
                    .如果真结束
                    
                .如果真结束
                变量_2D9D0125 ＝ 变量_2D9D0125 ＋ 1
            .判断循环尾 ()
            处理事件 ()
        .计次循环尾 ()
        .计次循环首 (变量_2A9D0125 － 2, 变量_2D9D0125)
            变量_2E9D0125 ＝ 1
            .判断循环首 (变量_2E9D0125 ＜ 变量_2B9D0125 － 2)
                .如果真 (取位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125) ≠ #白色)
                    变量_329D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125 － 1) ＝ #白色, 1, 0)
                    变量_359D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125 ＋ 1) ＝ #白色, 1, 0)
                    .如果真 (变量_329D0125 ＝ 1 或 变量_359D0125 ＝ 1)
                        变量_319D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 － 1, 变量_2E9D0125 － 1) ＝ #白色, 1, 0)
                        变量_339D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 ＋ 1, 变量_2E9D0125 － 1) ＝ #白色, 1, 0)
                        变量_2F9D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 － 1, 变量_2E9D0125) ＝ #白色, 1, 0)
                        变量_309D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 ＋ 1, 变量_2E9D0125) ＝ #白色, 1, 0)
                        变量_349D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 － 1, 变量_2E9D0125 ＋ 1) ＝ #白色, 1, 0)
                        变量_369D0125 ＝ 选择 (取位图颜色 (位图, 变量_2D9D0125 ＋ 1, 变量_2E9D0125 ＋ 1) ＝ #白色, 1, 0)
                        变量_379D0125 ＝ 变量_319D0125 ＋ 变量_329D0125 × 2 ＋ 变量_339D0125 × 4 ＋ 变量_2F9D0125 × 8 ＋ 变量_309D0125 × 16 ＋ 变量_349D0125 × 32 ＋ 变量_359D0125 × 64 ＋ 变量_369D0125 × 128
                        .如果真 (变量_299D0125 [变量_379D0125 ＋ 1] ＝ 1)
                            位图 ＝ 置位图颜色 (位图, 变量_2D9D0125, 变量_2E9D0125, #白色)
                            变量_2C9D0125 ＝ 假
                            变量_2E9D0125 ＝ 变量_2E9D0125 ＋ 1
                        .如果真结束
                        
                    .如果真结束
                    
                .如果真结束
                变量_2E9D0125 ＝ 变量_2E9D0125 ＋ 1
            .判断循环尾 ()
            处理事件 ()
        .计次循环尾 ()
    .判断循环尾 ()
    返回 (位图)

.子程序 位图分割1, 整数型, 公开
    .参数 位图, 字节集
    .参数 范围数组, 精易_矩形, 参考 可空 数组
    .局部变量 变量_3A9D0125, 整数型
    .局部变量 变量_3B9D0125, 整数型
    .局部变量 变量_3C9D0125, 整数型
    .局部变量 变量_3D9D0125, 整数型
    .局部变量 变量_3E9D0125, 整数型
    .局部变量 变量_3F9D0125, 整数型
    .局部变量 变量_409D0125, 精易_矩形
    .局部变量 变量_419D0125, 逻辑型, , "2"

    变量_3A9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_3B9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    清除数组 (范围数组)
    .计次循环首 (变量_3A9D0125, 变量_3C9D0125)
        变量_419D0125 [2] ＝ 假
        .计次循环首 (变量_3B9D0125, 变量_3D9D0125)
            变量_3F9D0125 ＝ 取位图颜色 (位图, 变量_3C9D0125 － 1, 变量_3D9D0125 － 1)
            .如果真 (变量_3F9D0125 ≠ #白色)
                .如果 (变量_419D0125 [1])
                    变量_419D0125 [2] ＝ 真
                    变量_409D0125.顶边 ＝ 选择 (变量_3D9D0125 ＜ 变量_409D0125.顶边 ＋ 1, 变量_3D9D0125 － 1, 变量_409D0125.顶边)
                .否则
                    变量_419D0125 [1] ＝ 真
                    变量_419D0125 [2] ＝ 真
                    变量_409D0125.左边 ＝ 变量_3C9D0125 － 1
                    变量_409D0125.顶边 ＝ 变量_3D9D0125 － 1
                .如果结束
                跳出循环 ()
            .如果真结束
            
        .计次循环尾 ()
        .如果真 (变量_419D0125 [1])
            .如果真 (变量_419D0125 [2] ＝ 假)
                变量_419D0125 [1] ＝ 假
                变量_409D0125.右边 ＝ 变量_3C9D0125 － 变量_409D0125.左边
                变量_409D0125.底边 ＝ 变量_3B9D0125 － 变量_409D0125.顶边
                .计次循环首 (变量_409D0125.底边, 变量_3D9D0125)
                    .计次循环首 (变量_409D0125.右边, 变量_3E9D0125)
                        变量_3F9D0125 ＝ 取位图颜色 (位图, 变量_409D0125.左边 ＋ 变量_3E9D0125 － 2, 变量_3B9D0125 － 变量_3D9D0125)
                        .如果真 (变量_3F9D0125 ≠ #白色)
                            跳出循环 ()
                        .如果真结束
                        
                    .计次循环尾 ()
                    .如果真 (变量_409D0125.右边 ＋ 1 ≠ 变量_3E9D0125)
                        跳出循环 ()
                    .如果真结束
                    
                .计次循环尾 ()
                变量_409D0125.底边 ＝ 变量_409D0125.底边 ＋ 1 － 变量_3D9D0125
                加入成员 (范围数组, 变量_409D0125)
            .如果真结束
            
        .如果真结束
        处理事件 ()
    .计次循环尾 ()
    返回 (取数组成员数 (范围数组))

.子程序 位图分割2, 整数型, 公开
    .参数 位图, 字节集
    .参数 点阵数组, 点阵, 参考 可空 数组
    .局部变量 变量_449D0125, 整数型
    .局部变量 变量_459D0125, 整数型
    .局部变量 变量_469D0125, 整数型
    .局部变量 变量_479D0125, 整数型
    .局部变量 变量_489D0125, 整数型
    .局部变量 变量_499D0125, 整数型
    .局部变量 变量_4A9D0125, 整数型, , "0"

    变量_449D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_459D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    清除数组 (点阵数组)
    取位图颜色表 (位图, 变量_4A9D0125)
    .计次循环首 (变量_449D0125, 变量_469D0125)
        .计次循环首 (变量_459D0125, 变量_479D0125)
            变量_499D0125 ＝ 变量_4A9D0125 [变量_469D0125] [变量_479D0125]
            .如果真 (变量_499D0125 ≠ #白色)
                加入成员 (点阵数组, 枚举连续点 (变量_4A9D0125, 变量_469D0125, 变量_479D0125))
            .如果真结束
            
        .计次循环尾 ()
        处理事件 ()
    .计次循环尾 ()
    返回 (取数组成员数 (点阵数组))

.子程序 取位图有效范围, 精易_矩形, 公开
    .参数 位图, 字节集
    .局部变量 变量_4C9D0125, 整数型
    .局部变量 变量_4D9D0125, 整数型
    .局部变量 变量_4E9D0125, 整数型
    .局部变量 变量_4F9D0125, 整数型
    .局部变量 变量_509D0125, 精易_矩形
    .局部变量 变量_519D0125, 整数型, , "2,3"

    变量_4C9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 19, 4), 3, )
    变量_4D9D0125 ＝ 取字节集数据 (取字节集中间 (位图, 23, 4), 3, )
    .计次循环首 (变量_4C9D0125, 变量_4E9D0125)
        变量_519D0125 [1] [2] ＝ 0
        变量_519D0125 [2] [2] ＝ 0
        变量_519D0125 [1] [3] ＝ 变量_519D0125 [1] [1]
        变量_519D0125 [2] [3] ＝ 变量_519D0125 [2] [1]
        .计次循环首 (变量_4D9D0125, 变量_4F9D0125)
            .如果真 (变量_519D0125 [1] [2] ＝ 0 且 变量_509D0125.左边 ＝ 0)
                .如果真 (取位图颜色 (位图, 变量_4E9D0125 － 1, 变量_4F9D0125 － 1) ＝ #黑色)
                    变量_519D0125 [1] [1] ＝ 变量_519D0125 [1] [1] ＋ 1
                    变量_519D0125 [1] [2] ＝ 1
                .如果真结束
                
            .如果真结束
            .如果真 (变量_519D0125 [2] [2] ＝ 0 且 变量_509D0125.右边 ＝ 0)
                .如果真 (取位图颜色 (位图, 变量_4C9D0125 － 变量_4E9D0125, 变量_4D9D0125 － 变量_4F9D0125) ＝ #黑色)
                    变量_519D0125 [2] [1] ＝ 变量_519D0125 [2] [1] ＋ 1
                    变量_519D0125 [2] [2] ＝ 1
                .如果真结束
                
            .如果真结束
            
        .计次循环尾 ()
        变量_519D0125 [1] [1] ＝ 选择 (变量_519D0125 [1] [3] ＝ 变量_519D0125 [1] [1], 0, 变量_519D0125 [1] [1])
        变量_519D0125 [2] [1] ＝ 选择 (变量_519D0125 [2] [3] ＝ 变量_519D0125 [2] [1], 0, 变量_519D0125 [2] [1])
        .如果真 (变量_519D0125 [1] [1] ＝ 2 且 变量_509D0125.左边 ＝ 0)
            变量_509D0125.左边 ＝ 变量_4E9D0125 － 2
        .如果真结束
        .如果真 (变量_519D0125 [2] [1] ＝ 2 且 变量_509D0125.右边 ＝ 0)
            变量_509D0125.右边 ＝ 变量_4E9D0125 － 2
        .如果真结束
        处理事件 ()
    .计次循环尾 ()
    变量_4C9D0125 ＝ 变量_4C9D0125 － 变量_509D0125.左边 － 变量_509D0125.右边
    数组清零 (变量_519D0125)
    .计次循环首 (变量_4D9D0125, 变量_4F9D0125)
        变量_519D0125 [1] [2] ＝ 0
        变量_519D0125 [2] [2] ＝ 0
        变量_519D0125 [1] [3] ＝ 变量_519D0125 [1] [1]
        变量_519D0125 [2] [3] ＝ 变量_519D0125 [2] [1]
        .计次循环首 (变量_4C9D0125, 变量_4E9D0125)
            .如果真 (变量_519D0125 [1] [2] ＝ 0 且 变量_509D0125.顶边 ＝ 0)
                .如果真 (取位图颜色 (位图, 变量_509D0125.左边 ＋ 变量_4E9D0125 － 1, 变量_4F9D0125 － 1) ＝ #黑色)
                    变量_519D0125 [1] [1] ＝ 变量_519D0125 [1] [1] ＋ 1
                    变量_519D0125 [1] [2] ＝ 1
                .如果真结束
                
            .如果真结束
            .如果真 (变量_519D0125 [2] [2] ＝ 0 且 变量_509D0125.底边 ＝ 0)
                .如果真 (取位图颜色 (位图, 变量_509D0125.左边 ＋ 变量_4C9D0125 － 变量_4E9D0125, 变量_4D9D0125 － 变量_4F9D0125) ＝ #黑色)
                    变量_519D0125 [2] [1] ＝ 变量_519D0125 [2] [1] ＋ 1
                    变量_519D0125 [2] [2] ＝ 1
                .如果真结束
                
            .如果真结束
            
            
        .计次循环尾 ()
        变量_519D0125 [1] [1] ＝ 选择 (变量_519D0125 [1] [3] ＝ 变量_519D0125 [1] [1], 0, 变量_519D0125 [1] [1])
        变量_519D0125 [2] [1] ＝ 选择 (变量_519D0125 [2] [3] ＝ 变量_519D0125 [2] [1], 0, 变量_519D0125 [2] [1])
        .如果真 (变量_519D0125 [1] [1] ＝ 2 且 变量_509D0125.顶边 ＝ 0)
            变量_509D0125.顶边 ＝ 变量_4F9D0125 － 2
        .如果真结束
        .如果真 (变量_519D0125 [2] [1] ＝ 2 且 变量_509D0125.底边 ＝ 0)
            变量_509D0125.底边 ＝ 变量_4F9D0125 － 2
        .如果真结束
        处理事件 ()
    .计次循环尾 ()
    变量_509D0125.右边 ＝ 变量_4C9D0125
    变量_509D0125.底边 ＝ 变量_4D9D0125 － 变量_509D0125.顶边 － 变量_509D0125.底边
    返回 (变量_509D0125)

.子程序 点是否孤立, 整数型
    .参数 变量_529D0125, 字节集
    .参数 变量_539D0125, 整数型
    .参数 变量_549D0125, 整数型
    .局部变量 变量_559D0125, 整数型
    .局部变量 变量_569D0125, 整数型

    变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125, 变量_549D0125)
    .如果 (变量_569D0125 ≠ #白色)
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125 － 1, 变量_549D0125)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 1
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125 － 1, 变量_549D0125 － 1)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 2
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125, 变量_549D0125 － 1)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 4
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125 ＋ 1, 变量_549D0125 － 1)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 8
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125 ＋ 1, 变量_549D0125)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 16
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125 ＋ 1, 变量_549D0125 ＋ 1)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 32
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125, 变量_549D0125 ＋ 1)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 64
        .如果真结束
        变量_569D0125 ＝ 取位图颜色 (变量_529D0125, 变量_539D0125 － 1, 变量_549D0125 ＋ 1)
        .如果真 (变量_569D0125 ≠ -1 且 变量_569D0125 ≠ #白色)
            变量_559D0125 ＝ 变量_559D0125 ＋ 128
        .如果真结束
        
    .否则
        变量_559D0125 ＝ -1
    .如果结束
    返回 (变量_559D0125)

.子程序 枚举连续点, 点阵
    .参数 变量_579D0125, 整数型, 参考 数组
    .参数 变量_589D0125, 整数型
    .参数 变量_599D0125, 整数型
    .局部变量 变量_5A9D0125, 点阵
    .局部变量 变量_5B9D0125, 整数型, , "0"
    .局部变量 变量_5C9D0125, 整数型, , "0"
    .局部变量 变量_5D9D0125, 字节集
    .局部变量 变量_5E9D0125, 整数型
    .局部变量 变量_5F9D0125, 字节集
    .局部变量 变量_609D0125, 字节集
    .局部变量 变量_619D0125, 字节集
    .局部变量 变量_629D0125, 字节集
    .局部变量 变量_639D0125, 字节集
    .局部变量 变量_649D0125, 字节集

    不重复加入点 (变量_5B9D0125, 合并整数 (变量_589D0125, 变量_599D0125))
    加入成员 (变量_5C9D0125, 变量_579D0125 [变量_589D0125] [变量_599D0125])
    子枚举 (变量_579D0125, 变量_589D0125, 变量_599D0125, 变量_5B9D0125, 变量_5C9D0125)
    变量_5D9D0125 ＝ 指针到字节集 (lstrcpynA_整数数组 (变量_5B9D0125, 变量_5B9D0125, 0), 取数组成员数 (变量_5B9D0125) × 4)
    变量_619D0125 ＝ 取字节集左边 (变量_5D9D0125, 2)
    变量_629D0125 ＝ 变量_619D0125
    变量_639D0125 ＝ 取字节集中间 (变量_5D9D0125, 3, 2)
    变量_649D0125 ＝ 变量_639D0125
    .计次循环首 (取数组成员数 (变量_5B9D0125), 变量_5E9D0125)
        变量_5F9D0125 ＝ 取字节集中间 (变量_5D9D0125, (变量_5E9D0125 － 1) × 4 ＋ 1, 2)
        变量_609D0125 ＝ 取字节集中间 (变量_5D9D0125, (变量_5E9D0125 － 1) × 4 ＋ 3, 2)
        变量_619D0125 ＝ 比较字节数小 (变量_619D0125, 变量_5F9D0125)
        变量_629D0125 ＝ 比较字节数大 (变量_629D0125, 变量_5F9D0125)
        变量_639D0125 ＝ 比较字节数小 (变量_639D0125, 变量_609D0125)
        变量_649D0125 ＝ 比较字节数大 (变量_649D0125, 变量_609D0125)
    .计次循环尾 ()
    重定义数组 (变量_5A9D0125.点, 假, 取字节集数据 (变量_629D0125, 3, ) ＋ 1 － 取字节集数据 (变量_619D0125, 3, ), 取字节集数据 (变量_649D0125, 3, ) ＋ 1 － 取字节集数据 (变量_639D0125, 3, ))
    写到内存 (取重复字节集 (取数组成员数 (变量_5A9D0125.点) × 4, { 255, 255, 255, 0 }), lstrcpynA_整数数组 (变量_5A9D0125.点, 变量_5A9D0125.点, 0), 取数组成员数 (变量_5A9D0125.点) × 4)
    .计次循环首 (取数组成员数 (变量_5B9D0125), 变量_5E9D0125)
        变量_5F9D0125 ＝ 取字节集中间 (变量_5D9D0125, (变量_5E9D0125 － 1) × 4 ＋ 1, 2)
        变量_609D0125 ＝ 取字节集中间 (变量_5D9D0125, (变量_5E9D0125 － 1) × 4 ＋ 3, 2)
        变量_589D0125 ＝ 取字节集数据 (变量_5F9D0125, 3, ) ＋ 1 － 取字节集数据 (变量_619D0125, 3, )
        变量_599D0125 ＝ 取字节集数据 (变量_609D0125, 3, ) ＋ 1 － 取字节集数据 (变量_639D0125, 3, )
        变量_5A9D0125.点 [变量_589D0125] [变量_599D0125] ＝ 变量_5C9D0125 [变量_5E9D0125]
    .计次循环尾 ()
    返回 (变量_5A9D0125)

.子程序 子枚举
    .参数 变量_659D0125, 整数型, 参考 数组
    .参数 变量_669D0125, 整数型
    .参数 变量_679D0125, 整数型
    .参数 变量_689D0125, 整数型, 参考 数组
    .参数 变量_699D0125, 整数型, 参考 数组
    .局部变量 变量_6A9D0125, 整数型
    .局部变量 变量_6B9D0125, 整数型
    .局部变量 变量_6C9D0125, 字节集
    .局部变量 变量_6D9D0125, 整数型
    .局部变量 变量_6E9D0125, 整数型, , "8,3"
    .局部变量 变量_6F9D0125, 整数型
    .局部变量 变量_709D0125, 整数型
    .局部变量 变量_719D0125, 整数型

    变量_6C9D0125 ＝ 颜色表构建位图 (变量_659D0125)
    变量_6D9D0125 ＝ 点是否孤立 (变量_6C9D0125, 变量_669D0125 － 1, 变量_679D0125 － 1)
    变量_6C9D0125 ＝ { }
    变量_659D0125 [变量_669D0125] [变量_679D0125] ＝ #白色
    写到内存 ({ 1, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 2, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 4, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 8, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 128, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0 }, lstrcpynA_整数数组 (变量_6E9D0125, 变量_6E9D0125, 0), 96)
    变量_6A9D0125 ＝ 取字节集数据 (指针到字节集 (lstrcpynA_整数数组 (变量_659D0125, 变量_659D0125, 0) － 8, 4), 3, )
    变量_6B9D0125 ＝ 取字节集数据 (指针到字节集 (lstrcpynA_整数数组 (变量_659D0125, 变量_659D0125, 0) － 4, 4), 3, )
    .计次循环首 (8, 变量_6F9D0125)
        .如果真 (位与 (变量_6D9D0125, 变量_6E9D0125 [变量_6F9D0125] [1]) ＝ 变量_6E9D0125 [变量_6F9D0125] [1])
            变量_709D0125 ＝ 变量_669D0125 ＋ 变量_6E9D0125 [变量_6F9D0125] [2]
            变量_719D0125 ＝ 变量_679D0125 ＋ 变量_6E9D0125 [变量_6F9D0125] [3]
            .如果真 (变量_709D0125 ＜ 1 或 变量_719D0125 ＜ 1 或 变量_709D0125 ＞ 变量_6A9D0125 或 变量_719D0125 ＞ 变量_6B9D0125)
                到循环尾 ()
            .如果真结束
            .如果真 (不重复加入点 (变量_689D0125, 合并整数 (变量_709D0125, 变量_719D0125)))
                加入成员 (变量_699D0125, 变量_659D0125 [变量_709D0125] [变量_719D0125])
                子枚举 (变量_659D0125, 变量_709D0125, 变量_719D0125, 变量_689D0125, 变量_699D0125)
            .如果真结束
            
        .如果真结束
        处理事件 ()
    .计次循环尾 ()

.子程序 比较字节数大, 字节集
    .参数 变量_729D0125, 字节集
    .参数 变量_739D0125, 字节集
    .局部变量 变量_749D0125, 整数型
    .局部变量 变量_759D0125, 整数型
    .局部变量 变量_769D0125, 整数型

    变量_749D0125 ＝ 取字节集长度 (变量_729D0125)
    变量_759D0125 ＝ 取字节集长度 (变量_739D0125)
    .如果真 (变量_749D0125 ≠ 4)
        变量_729D0125 ＝ 变量_729D0125 ＋ 取空白字节集 (4 － 变量_749D0125)
    .如果真结束
    .如果真 (变量_759D0125 ≠ 4)
        变量_739D0125 ＝ 变量_739D0125 ＋ 取空白字节集 (4 － 变量_759D0125)
    .如果真结束
    .计次循环首 (4, 变量_769D0125)
        .如果真 (变量_729D0125 [5 － 变量_769D0125] ≠ 变量_739D0125 [5 － 变量_769D0125])
            返回 (选择 (变量_729D0125 [5 － 变量_769D0125] ＞ 变量_739D0125 [5 － 变量_769D0125], 取字节集左边 (变量_729D0125, 变量_749D0125), 取字节集左边 (变量_739D0125, 变量_759D0125)))
        .如果真结束
        
    .计次循环尾 ()
    返回 (取字节集左边 (变量_729D0125, 变量_749D0125))

.子程序 比较字节数小, 字节集
    .参数 变量_779D0125, 字节集
    .参数 变量_789D0125, 字节集
    .局部变量 变量_799D0125, 整数型
    .局部变量 变量_7A9D0125, 整数型
    .局部变量 变量_7B9D0125, 整数型

    变量_799D0125 ＝ 取字节集长度 (变量_779D0125)
    变量_7A9D0125 ＝ 取字节集长度 (变量_789D0125)
    .如果真 (变量_799D0125 ≠ 4)
        变量_779D0125 ＝ 变量_779D0125 ＋ 取空白字节集 (4 － 变量_799D0125)
    .如果真结束
    .如果真 (变量_7A9D0125 ≠ 4)
        变量_789D0125 ＝ 变量_789D0125 ＋ 取空白字节集 (4 － 变量_7A9D0125)
    .如果真结束
    .计次循环首 (4, 变量_7B9D0125)
        .如果真 (变量_779D0125 [5 － 变量_7B9D0125] ≠ 变量_789D0125 [5 － 变量_7B9D0125])
            返回 (选择 (变量_779D0125 [5 － 变量_7B9D0125] ＜ 变量_789D0125 [5 － 变量_7B9D0125], 取字节集左边 (变量_779D0125, 变量_799D0125), 取字节集左边 (变量_789D0125, 变量_7A9D0125)))
        .如果真结束
        
    .计次循环尾 ()
    返回 (取字节集左边 (变量_779D0125, 变量_799D0125))

.子程序 不重复加入点, 逻辑型
    .参数 变量_7C9D0125, 整数型, 参考 数组
    .参数 变量_7D9D0125, 整数型
    .局部变量 变量_7E9D0125, 字节集
    .局部变量 变量_7F9D0125, 整数型

    变量_7E9D0125 ＝ 指针到字节集 (lstrcpynA_整数数组 (变量_7C9D0125, 变量_7C9D0125, 0), 取数组成员数 (变量_7C9D0125) × 4)
    .循环判断首 ()
        变量_7F9D0125 ＝ 变量_7F9D0125 ＋ 1
        变量_7F9D0125 ＝ 寻找字节集 (变量_7E9D0125, 到字节集 (变量_7D9D0125), 变量_7F9D0125)
        .如果真 (变量_7F9D0125 ＝ -1)
            加入成员 (变量_7C9D0125, 变量_7D9D0125)
            返回 (真)
        .如果真结束
        处理事件 ()
    .循环判断尾 (到整数 ((变量_7F9D0125 － 1) ÷ 4) ≠ (变量_7F9D0125 － 1) ÷ 4)
    返回 (假)

