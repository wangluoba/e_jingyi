.版本 2

.程序集 集_剪辑板
.子程序 剪辑板_置文本, , 公开, 设置指定文本到系统剪辑板
    .参数 要置的文本, 文本型
    .局部变量 变量_CEC90125, 整数型
    .局部变量 变量_CFC90125, 整数型
    .局部变量 变量_D0C90125, 整数型
    .局部变量 变量_D1C90125, 整数型
    .局部变量 变量_D2C90125, 整数型
    .局部变量 变量_D3C90125, 整数型

    变量_CEC90125 ＝ 取文本长度 (要置的文本)
    变量_D0C90125 ＝ 2
    变量_CFC90125 ＝ GlobalAlloc (变量_D0C90125, 变量_CEC90125 ＋ 1)
    变量_D1C90125 ＝ GlobalLock (变量_CFC90125)
    RtlMoveMemory_文本型 (变量_D1C90125, 要置的文本, 变量_CEC90125)
    GlobalUnlock (变量_CFC90125)
    变量_D2C90125 ＝ 窗口_取顶端窗口句柄 ()
    OpenClipboard (变量_D2C90125)
    EmptyClipboard ()
    SetClipboardData (1, 变量_CFC90125)
    CloseClipboard ()

.子程序 剪辑板_置字节集, , 公开, 设置指定宽字符到系统剪辑板
    .参数 欲置剪辑版的数据, 字节集, , Unicode文本格式
    .参数 uFormat, 整数型, 可空, #CF_*
    .局部变量 变量_D7100325, 整数型
    .局部变量 变量_D8100325, 整数型
    .局部变量 变量_D9100325, 整数型

    .如果真 (uFormat ≤ 0)
        uFormat ＝ #CF_UNICODETEXT
    .如果真结束
    变量_D7100325 ＝ 取指针_字节集型 (欲置剪辑版的数据)
    变量_D8100325 ＝ 选择 (uFormat ＝ #CF_UNICODETEXT, DLL_lstrlenW (变量_D7100325), 取字节集长度 (欲置剪辑版的数据))
    .如果真 (变量_D8100325 ＞ 0)
        变量_D9100325 ＝ GlobalAlloc (位或 (#GMEM_MOVEABLE, #GMEM_ZEROINIT), 选择 (uFormat ＝ #CF_UNICODETEXT, incShl (变量_D8100325, ), 变量_D8100325 ＋ 1))
        .如果真 (变量_D9100325 ≠ #NULL)
            memcpy (GlobalLock (变量_D9100325), 变量_D7100325, 选择 (uFormat ＝ #CF_UNICODETEXT, incShl (变量_D8100325, 真), 变量_D8100325))
            GlobalUnlock (变量_D9100325)
            .如果真 (OpenClipboard (#NULL) ＝ 1)
                EmptyClipboard ()
                SetClipboardData (uFormat, 变量_D9100325)
                CloseClipboard ()
            .如果真结束
            GlobalFree (变量_D9100325)
        .如果真结束
        
    .如果真结束
    

.子程序 剪辑板_取文本, 文本型, 公开, 取出系统剪辑板中存放的文本
    返回 (编码_Unicode到Ansi (剪辑板_取文本W ()))

.子程序 剪辑板_取文本W, 字节集, 公开, 取出系统剪辑板中存放的Unicode编码的文本
    .局部变量 变量_FF020325, 整数型
    .局部变量 变量_00030325, 整数型
    .局部变量 变量_01030325, 整数型
    .局部变量 变量_02030325, 字节集

    .如果真 (OpenClipboard (#NULL) ＝ 1)
        .如果真 (IsClipboardFormatAvailable (#CF_UNICODETEXT) ≠ 0)
            变量_FF020325 ＝ GetClipboardData (#CF_UNICODETEXT)
            .如果真 (变量_FF020325 ≠ #NULL)
                变量_00030325 ＝ GlobalLock (变量_FF020325)
                变量_01030325 ＝ GlobalSize (变量_FF020325)
                .如果真 (变量_01030325 ＞ 0)
                    变量_02030325 ＝ 取空白字节集 (变量_01030325)
                    memcpy (取指针字节集_ (变量_02030325), 变量_00030325, 变量_01030325)
                .如果真结束
                GlobalUnlock (变量_FF020325)
            .如果真结束
            
        .如果真结束
        CloseClipboard ()
    .如果真结束
    返回 (变量_02030325)

.子程序 剪辑板_置图片, , 公开, 设置指定图片到系统剪辑板
    .参数 图片数据, 字节集, , 要置入剪辑板的图片数据
    .局部变量 变量_C8260125, 整数型
    .局部变量 变量_D60C0325, 对象

    CoInitialize (0)
    变量_C8260125 ＝ GetImageToBitmap (图片数据)
    .如果真 (变量_C8260125 ＝ #NULL)
        变量_D60C0325.创建图片对象 (图片数据)
        变量_C8260125 ＝ 变量_D60C0325.读数值属性 (“Handle”, )
    .如果真结束
    .如果真 (变量_C8260125 ≠ #NULL 且 OpenClipboard (#NULL) ＝ 1)
        EmptyClipboard ()
        SetClipboardData (#CF_BITMAP, 变量_C8260125)
        CloseClipboard ()
    .如果真结束
    CoUninitialize ()

.子程序 剪辑板_取图片, 字节集, 公开, 获取系统剪辑板中的图片
    .参数 窗口句柄, 整数型
    .局部变量 变量_D4570125, 整数型
    .局部变量 变量_D5570125, 整数型
    .局部变量 变量_D6570125, 整数型
    .局部变量 变量_D7570125, 整数型
    .局部变量 变量_D8570125, 字节集
    .局部变量 变量_D9570125, 字节集

    OpenClipboard (窗口句柄)
    变量_D4570125 ＝ GetClipboardData (8)
    .如果真 (变量_D4570125 ≠ 0)
        变量_D5570125 ＝ GlobalSize (变量_D4570125)
        变量_D6570125 ＝ GlobalLock (变量_D4570125)
        .如果真 (变量_D5570125 ≠ 0 且 变量_D6570125 ≠ 0)
            变量_D8570125 ＝ 指针到字节集 (变量_D6570125, 变量_D5570125)
        .如果真结束
        GlobalUnlock (变量_D4570125)
    .如果真结束
    CloseClipboard ()
    .如果真 (取字节集长度 (变量_D8570125) ＝ 0)
        返回 ({ })
    .如果真结束
    变量_D9570125 ＝ 到字节集 (“BM”) ＋ 整数_到字节集 (取字节集长度 (变量_D8570125) ＋ 2) ＋ 取空白字节集 (4) ＋ 整数_到字节集 (54) ＋ 取字节集左边 (变量_D8570125, 16) ＋ 取空白字节集 (4) ＋ 整数_到字节集 (取字节集长度 (变量_D8570125) － 52) ＋ 取空白字节集 (16)
    返回 (变量_D9570125 ＋ 取字节集右边 (变量_D8570125, 取字节集长度 (变量_D8570125) － 52))

.子程序 剪辑板_取位图数据A, 字节集, 公开, 获取系统剪辑板中的图片，支持QQ截图
    .参数 窗口句柄, 整数型, , 当前程序的窗口句柄
    .局部变量 变量_F29D0225, 整数型
    .局部变量 变量_F39D0225, 自定义_7B4D0141
    .局部变量 变量_F49D0225, 自定义_7C4D0141
    .局部变量 变量_F59D0225, 整数型
    .局部变量 变量_F69D0225, 整数型
    .局部变量 变量_F79D0225, 整数型
    .局部变量 变量_F89D0225, 整数型
    .局部变量 变量_F99D0225, 字节集
    .局部变量 变量_FA9D0225, 自定义_229E0241
    .局部变量 变量_FB9D0225, 整数型
    .局部变量 变量_FC9D0225, 整数型

    OpenClipboard (窗口句柄)
    变量_F29D0225 ＝ GetClipboardData (2)
    CloseClipboard ()
    .如果真 (变量_F29D0225 ＝ 0)
        返回 ({ })
    .如果真结束
    .如果真 (DLL_GetObjectA (变量_F29D0225, 28, 变量_FA9D0225) ＝ 0)
        返回 ({ })
    .如果真结束
    变量_F39D0225.成员_804D0135 ＝ 40
    变量_F39D0225.成员_814D0135 ＝ 变量_FA9D0225.成员_249E0235
    变量_F39D0225.成员_824D0135 ＝ 变量_FA9D0225.成员_259E0235
    变量_F39D0225.成员_834D0135 ＝ 1
    变量_F39D0225.成员_844D0135 ＝ 24
    变量_F39D0225.成员_854D0135 ＝ 0
    变量_F39D0225.成员_864D0135 ＝ (变量_FA9D0225.成员_249E0235 × 24 ＋ 31) ÷ 8 × 变量_FA9D0225.成员_259E0235
    变量_F39D0225.成员_874D0135 ＝ 0
    变量_F39D0225.成员_884D0135 ＝ 0
    变量_F39D0225.成员_894D0135 ＝ 0
    变量_F39D0225.成员_8A4D0135 ＝ 0
    变量_FB9D0225 ＝ GetDC (0)
    变量_FC9D0225 ＝ CreateCompatibleDC (变量_FB9D0225)
    变量_F59D0225 ＝ GlobalAlloc (位或 (0, 64), 变量_F39D0225.成员_864D0135)
    变量_F69D0225 ＝ GlobalLock (变量_F59D0225)
    DLL_GetDIBits2 (变量_FC9D0225, 变量_F29D0225, 0, 变量_F39D0225.成员_824D0135, 变量_F69D0225, 变量_F39D0225, 0)
    变量_F49D0225.成员_8B4D0135 ＝ 19778
    变量_F49D0225.成员_8D4D0135 ＝ 0
    变量_F49D0225.成员_8E4D0135 ＝ 0
    变量_F49D0225.成员_8C4D0135 ＝ 14 ＋ 40 ＋ 变量_F39D0225.成员_864D0135
    变量_F49D0225.成员_8F4D0135 ＝ 14 ＋ 40
    变量_F89D0225 ＝ VirtualAlloc (0, 54 ＋ 变量_F39D0225.成员_864D0135, 4096, 4)
    DLL_RtlMoveMemory8 (变量_F89D0225, 变量_F49D0225, 14)
    DLL_RtlMoveMemory9 (变量_F89D0225 ＋ 14, 变量_F39D0225, 40)
    RtlMoveMemory (变量_F89D0225 ＋ 54, 变量_F69D0225, 变量_F39D0225.成员_864D0135)
    变量_F99D0225 ＝ 指针到字节集 (变量_F89D0225, 54 ＋ 变量_F39D0225.成员_864D0135)
    DLL_VirtualFree (变量_F89D0225, 0, 32768)
    GlobalFree (变量_F59D0225)
    DeleteDC (变量_FC9D0225)
    返回 (变量_F99D0225)

.子程序 剪辑板_取位图数据B, 字节集, 公开, 获取系统剪辑板中的图片，支持QQ截图
    .参数 窗口句柄, 整数型, , 当前程序的窗口句柄
    .局部变量 变量_4B9E0225, 整数型
    .局部变量 变量_4C9E0225, 自定义_7B4D0141
    .局部变量 变量_4D9E0225, 整数型
    .局部变量 变量_4E9E0225, 整数型
    .局部变量 变量_4F9E0225, 字节集
    .局部变量 变量_509E0225, 自定义_229E0241
    .局部变量 变量_519E0225, 整数型
    .局部变量 变量_529E0225, 字节集

    OpenClipboard (窗口句柄)
    变量_4B9E0225 ＝ GetClipboardData (2)
    CloseClipboard ()
    .如果真 (变量_4B9E0225 ＝ 0)
        返回 ({ })
    .如果真结束
    .如果真 (DLL_GetObjectA (变量_4B9E0225, 28, 变量_509E0225) ＝ 0)
        返回 ({ })
    .如果真结束
    变量_4C9E0225.成员_804D0135 ＝ 40
    变量_4C9E0225.成员_814D0135 ＝ 变量_509E0225.成员_249E0235
    变量_4C9E0225.成员_824D0135 ＝ 变量_509E0225.成员_259E0235
    变量_4C9E0225.成员_834D0135 ＝ 1
    变量_4C9E0225.成员_844D0135 ＝ 24
    变量_4C9E0225.成员_854D0135 ＝ 0
    变量_4C9E0225.成员_864D0135 ＝ (变量_509E0225.成员_249E0235 × 24 ＋ 31) ÷ 8 × 变量_509E0225.成员_259E0235
    变量_4C9E0225.成员_874D0135 ＝ 0
    变量_4C9E0225.成员_884D0135 ＝ 0
    变量_4C9E0225.成员_894D0135 ＝ 0
    变量_4C9E0225.成员_8A4D0135 ＝ 0
    变量_519E0225 ＝ CreateCompatibleDC (0)
    变量_4F9E0225 ＝ 取空白字节集 (变量_4C9E0225.成员_864D0135)
    变量_4D9E0225 ＝ lstrcpyn_字节集 (变量_4F9E0225, 变量_4F9E0225, 0)
    DLL_GetDIBits2 (变量_519E0225, 变量_4B9E0225, 0, 变量_4C9E0225.成员_824D0135, 变量_4D9E0225, 变量_4C9E0225, 0)
    变量_529E0225 ＝ 到字节集 (“BM”) ＋ 整数_到字节集 (变量_4C9E0225.成员_864D0135 ＋ 54) ＋ 取空白字节集 (4) ＋ { 54, 0, 0, 0, 40, 0, 0, 0 } ＋ 整数_到字节集 (变量_509E0225.成员_249E0235) ＋ 整数_到字节集 (变量_509E0225.成员_259E0235) ＋ { 1, 0, 24, 0 } ＋ 取空白字节集 (4) ＋ 整数_到字节集 (变量_4C9E0225.成员_864D0135) ＋ 取空白字节集 (16)
    变量_4F9E0225 ＝ 变量_529E0225 ＋ 指针到字节集 (变量_4D9E0225, 变量_4C9E0225.成员_864D0135)
    DeleteDC (变量_519E0225)
    返回 (变量_4F9E0225)

.子程序 剪辑板_置文件, 逻辑型, 公开, 将指定文件复制到剪贴板，成功返回真，失败返回假。
    .参数 文件数组, 文本型, 数组, 欲复制到剪贴板的文件数组路径;
    .参数 状态, 逻辑型, 可空, 默认为假。真=对文件执行了剪切操作；假=对文件执行了复制操作
    .局部变量 变量_31590125, 字节集
    .局部变量 变量_32590125, 自定义_55590141
    .局部变量 变量_33590125, 整数型
    .局部变量 变量_34590125, 整数型
    .局部变量 变量_35590125, 整数型
    .局部变量 变量_36590125, 整数型
    .局部变量 变量_37590125, 整数型

    .如果真 (OpenClipboard (0) ＝ 0)
        返回 (假)
    .如果真结束
    EmptyClipboard ()
    .计次循环首 (取数组成员数 (文件数组), 变量_34590125)
        变量_31590125 ＝ 变量_31590125 ＋ 到字节集 (文件数组 [变量_34590125]) ＋ { 0 }
    .计次循环尾 ()
    变量_31590125 ＝ 变量_31590125 ＋ { 0 }
    变量_33590125 ＝ GlobalAlloc (66, 20 ＋ 字节集_取长度 (变量_31590125))
    .如果真 (变量_33590125 ＝ 0)
        CloseClipboard ()
        返回 (假)
    .如果真结束
    变量_37590125 ＝ GlobalLock (变量_33590125)
    变量_32590125.成员_56590135 ＝ 20
    RtlMoveMemory_剪贴板_置文件 (变量_37590125, 变量_32590125, 20)
    RtlMoveMemory_字节集 (变量_37590125 ＋ 20, 变量_31590125, 字节集_取长度 (变量_31590125))
    GlobalUnlock (变量_33590125)
    变量_35590125 ＝ SetClipboardData (#CF_HDROP, 变量_33590125)
    GlobalFree (变量_33590125)
    .如果真 (状态 且 变量_35590125 ＞ 0)
        变量_36590125 ＝ RegisterClipboardFormatA (“Preferred DropEffect”)
        变量_33590125 ＝ GlobalAlloc (66, 4)
        RtlMoveMemory (GlobalLock (变量_33590125), 取指针_通用型 (2), 4)
        GlobalUnlock (变量_33590125)
        SetClipboardData (变量_36590125, 变量_33590125)
        GlobalFree (变量_33590125)
    .如果真结束
    CloseClipboard ()
    返回 (变量_35590125 ＞ 0)

.子程序 剪辑板_取文件, 整数型, 公开, 取已经复制到剪贴板的文件名，返回文件个数。
    .参数 文件数组, 文本型, 可空 数组, 用于存放文件路径的数组,留空则只返回文件数量。
    .参数 状态, 逻辑型, 参考 可空, 返回=真,对文件执行了剪切操作；返回=假,对文件执行了复制操作
    .局部变量 变量_91C90125, 整数型
    .局部变量 变量_92C90125, 文本型
    .局部变量 变量_96C90125, 整数型
    .局部变量 变量_97C90125, 整数型
    .局部变量 变量_E1E90125, 整数型
    .局部变量 变量_E2E90125, 整数型

    清除数组 (文件数组)
    .如果真 (IsClipboardFormatAvailable (#CF_HDROP) ＝ 0 或 OpenClipboard (0) ＝ 0)
        返回 (0)
    .如果真结束
    变量_91C90125 ＝ GetClipboardData (#CF_HDROP)
    变量_E1E90125 ＝ DragQueryFileA (变量_91C90125, -1, #NULL, 0)
    变量_92C90125 ＝ 取空白文本 (260)
    .计次循环首 (变量_E1E90125, 变量_E2E90125)
        DragQueryFileA (变量_91C90125, 变量_E2E90125 － 1, 取指针文本_ (变量_92C90125), 260)
        加入成员 (文件数组, 变量_92C90125)
    .计次循环尾 ()
    .如果真 (是否为空 (状态) ＝ 假)
        变量_96C90125 ＝ RegisterClipboardFormatA (“Preferred DropEffect”)
        变量_91C90125 ＝ GetClipboardData (变量_96C90125)
        .如果真 (变量_91C90125 ≠ 0)
            RtlMoveMemory_整数传址1 (变量_97C90125, 变量_91C90125, 4)
        .如果真结束
        状态 ＝ 变量_97C90125 ＝ 2
        GlobalFree (变量_91C90125)
    .如果真结束
    CloseClipboard ()
    返回 (变量_E1E90125)

.子程序 剪辑板_取数据权窗口句柄, 整数型, 公开, 返回复制该数据的窗口句柄；如：一段文字是在记事本复制的，则返回记事本的窗口句柄
    返回 (GetClipboardOwner ())

.子程序 整数_到字节集, 字节集
    .参数 变量_CA570125, 整数型
    .局部变量 变量_CB570125, 字节集

    变量_CB570125 ＝ 取空白字节集 (4)
    写到内存 (变量_CA570125, lstrcpyn_字节集 (变量_CB570125, 变量_CB570125, 0), 4)
    返回 (变量_CB570125)

.子程序 剪辑板_取所有内容, 逻辑型, 公开
    .参数 参_剪辑版数据, 剪辑版数据, 参考 数组
    .局部变量 变量_68B70225, 整数型
    .局部变量 变量_69B70225, 剪辑版数据
    .局部变量 变量_6AB70225, 文本型
    .局部变量 变量_6BB70225, 整数型
    .局部变量 变量_6CB70225, 整数型

    
    .如果真 (OpenClipboard (0) ＝ 0)
        返回 (假)
    .如果真结束
    清除数组 (参_剪辑版数据)
    .判断循环首 (真)
        变量_68B70225 ＝ DLL_EnumClipboardFormats (变量_68B70225)
        .如果真 (变量_68B70225 ＝ 0)
            跳出循环 ()
        .如果真结束
        变量_69B70225.剪辑版数据格式 ＝ 变量_68B70225
        变量_6AB70225 ＝ 取空白文本 (255)
        .判断开始 (变量_68B70225 ≤ 14)
            变量_69B70225.文本型数据 ＝ “”
        .判断 (GetClipboardFormatNameA (变量_68B70225, 变量_6AB70225, 255) ＝ 0)
            变量_69B70225.文本型数据 ＝ “”
        .默认
            变量_69B70225.文本型数据 ＝ 变量_6AB70225
        .判断结束
        变量_6BB70225 ＝ GetClipboardData (变量_68B70225)
        .如果真 (变量_6BB70225 ＝ 0)
            到循环尾 ()
        .如果真结束
        变量_69B70225.字节集长度 ＝ GlobalSize (变量_6BB70225)
        变量_6CB70225 ＝ GlobalLock (变量_6BB70225)
        变量_69B70225.字节集数据 ＝ 取空白字节集 (变量_69B70225.字节集长度)
        RtlMoveMemory (取数据_通用型 (变量_69B70225.字节集数据) ＋ 8, 变量_6CB70225, 变量_69B70225.字节集长度)
        加入成员 (参_剪辑版数据, 变量_69B70225)
        .如果真 (取数组成员数 (参_剪辑版数据) ＞ 100)
            跳出循环 ()
        .如果真结束
        
    .判断循环尾 ()
    CloseClipboard ()
    返回 (真)

.子程序 剪辑板_置内容, 逻辑型, 公开
    .参数 参_剪辑版数据, 剪辑版数据, 参考 数组
    .局部变量 变量_6EB70225, 整数型
    .局部变量 变量_6FB70225, 整数型
    .局部变量 变量_70B70225, 整数型
    .局部变量 变量_71B70225, 整数型
    .局部变量 变量_72B70225, 整数型

    .如果真 (OpenClipboard (0) ＝ 0)
        返回 (假)
    .如果真结束
    EmptyClipboard ()
    .计次循环首 (取数组成员数 (参_剪辑版数据), 变量_6EB70225)
        变量_6FB70225 ＝ 参_剪辑版数据 [变量_6EB70225].剪辑版数据格式
        .如果真 (参_剪辑版数据 [变量_6EB70225].文本型数据 ≠ “”)
            变量_70B70225 ＝ RegisterClipboardFormatA (参_剪辑版数据 [变量_6EB70225].文本型数据)
            .如果真 (变量_70B70225 ＞ 0)
                变量_6FB70225 ＝ 变量_70B70225
            .如果真结束
            
        .如果真结束
        变量_71B70225 ＝ GlobalAlloc (位或 (#CF_BITMAP, #CF_LIMITSIZE), 参_剪辑版数据 [变量_6EB70225].字节集长度)
        变量_72B70225 ＝ GlobalLock (变量_71B70225)
        RtlMoveMemory (变量_72B70225, 取数据_通用型 (参_剪辑版数据 [变量_6EB70225].字节集数据) ＋ 8, 参_剪辑版数据 [变量_6EB70225].字节集长度)
        GlobalUnlock (变量_71B70225)
        SetClipboardData (变量_6FB70225, 变量_71B70225)
    .计次循环尾 ()
    CloseClipboard ()
    返回 (真)

.子程序 剪贴板_监听, , 公开, 把指定的窗口句柄加入到剪贴板查看器链中
    .参数 窗口句柄, 整数型
    .参数 回调函数, 子程序指针, , WndProc(整数型 hwnd, 整数型 uMsg, 整数型 wParam, 整数型 lParam)，返回1拦截。

    SetPropA (窗口句柄, “Clipboard_Monitor”, SetWindowLongA (窗口句柄, #GWL_WNDPROC, 到整数 (&WndProc_Clipboard_Monitor)))
    SetPropA (窗口句柄, “Clipboard_Callback”, 到整数 (回调函数))
    SetPropA (窗口句柄, “Clipboard_Viewer”, SetClipboardViewer (窗口句柄))

.子程序 WndProc_Clipboard_Monitor, 整数型
    .参数 变量_5CD40225, 整数型
    .参数 变量_5DD40225, 整数型
    .参数 变量_5ED40225, 整数型
    .参数 变量_5FD40225, 整数型
    .局部变量 变量_60D40225, 整数型
    .局部变量 变量_61D40225, 整数型
    .局部变量 变量_BFE30225, 整数型

    变量_60D40225 ＝ GetPropA (变量_5CD40225, “Clipboard_Monitor”)
    变量_61D40225 ＝ GetPropA (变量_5CD40225, “Clipboard_Callback”)
    变量_BFE30225 ＝ GetPropA (变量_5CD40225, “Clipboard_Viewer”)
    .如果真 (变量_5DD40225 ＝ #WM_DRAWCLIPBOARD 或 变量_5DD40225 ＝ #WM_CHANGECBCHAIN 或 变量_5DD40225 ＝ #WM_DESTROY)
        .如果真 (CallWindowProcA (变量_61D40225, 变量_5CD40225, 变量_5DD40225, 变量_5ED40225, 变量_5FD40225) ＝ 1)
            返回 (1)
        .如果真结束
        
        .如果真 (变量_5DD40225 ＝ #WM_CHANGECBCHAIN 且 变量_5ED40225 ≠ 变量_BFE30225)
            SendMessageA (变量_BFE30225, 变量_5DD40225, 变量_5ED40225, 变量_5FD40225)
        .如果真结束
        
    .如果真结束
    返回 (CallWindowProcA (变量_60D40225, 变量_5CD40225, 变量_5DD40225, 变量_5ED40225, 变量_5FD40225))

.子程序 剪贴板_停止监听, , 公开, 从剪贴板查看器链中删除指定的窗口句柄
    .参数 窗口句柄, 整数型
    .局部变量 变量_66D40225, 整数型

    变量_66D40225 ＝ GetPropA (窗口句柄, “Clipboard_Monitor”)
    ChangeClipboardChain (窗口句柄, GetPropA (窗口句柄, “Clipboard_Viewer”))
    SetWindowLongA (窗口句柄, #GWL_WNDPROC, 变量_66D40225)
    RemovePropA (窗口句柄, “Clipboard_Monitor”)
    RemovePropA (窗口句柄, “Clipboard_Callback”)
    RemovePropA (窗口句柄, “Clipboard_Viewer”)

