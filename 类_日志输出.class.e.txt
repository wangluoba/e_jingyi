.版本 2

.程序集 类_日志输出, , 公开
.程序集变量 集_目录, 文本型
.程序集变量 集_日志名, 文本型
.程序集变量 集_控制台句柄, 整数型
.程序集变量 集_日志文件句柄, 整数型

.子程序 _初始化
    集_目录 ＝ 取运行目录 () ＋ “\Log\” ＋ 时间_格式化 (取现行时间 (), “yyyyMM\”)
    集_日志名 ＝ 时间_格式化 (取现行时间 (), “yyyy-MM-dd”) ＋ “.txt”

.子程序 _销毁
    .如果真 (集_控制台句柄 ＞ 0)
        DLL_FreeConsole ()
        集_控制台句柄 ＝ 0
    .如果真结束
    
    .如果真 (集_日志文件句柄 ＞ 0)
        关闭文件 (集_日志文件句柄)
        集_日志文件句柄 ＝ 0
    .如果真结束
    

.子程序 文件路径, 文本型, 公开, 获取与设置日志输出文件目录，请在【输出文件】日志前设置目录。
    .参数 参_目录, 文本型, 可空, 默认会在程序运行目录下生成(Log+年月)格式的目录
    .参数 参_文件名, 文本型, 可空

    .如果真 (集_日志文件句柄 ＞ 0)
        关闭文件 (集_日志文件句柄)
        集_日志文件句柄 ＝ 0
    .如果真结束
    .如果真 (取文本长度 (参_目录) ＞ 0)
        集_目录 ＝ 参_目录
        集_目录 ＝ 选择 (取文本右边 (集_目录, 1) ≠ “\”, 集_目录 ＋ “\”, 集_目录)
    .如果真结束
    .如果真 (取文本长度 (参_文件名) ＞ 0)
        集_日志名 ＝ 参_文件名
        集_日志名 ＝ 选择 (到小写 (取文本右边 (集_日志名, 4)) ≠ “.txt”, 集_日志名 ＋ “.txt”, 集_日志名)
    .如果真结束
    返回 (集_目录 ＋ 集_日志名)

.子程序 输出文件, 逻辑型, 公开, 输出内容到文件到
    .参数 参_内容, 文本型
    .参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
    .参数 参_信息框, 逻辑型, 可空, 默认不提示
    .局部变量 变量_B1F50125, 整数型
    .局部变量 变量_B3F50125, 整数型
    .局部变量 变量_B5F50125, 逻辑型

    .如果真 (参_级别 ＜ 0 或 参_级别 ＞ 3)
        参_级别 ＝ 0
    .如果真结束
    .如果真 (目录_是否存在 (集_目录) ＝ 假)
        目录_创建 (集_目录)
    .如果真结束
    .判断开始 (参_级别 ＝ 1)
        变量_B3F50125 ＝ #警告图标
    .判断 (参_级别 ＝ 2)
        变量_B3F50125 ＝ #错误图标
    .判断 (参_级别 ＝ 3)
        变量_B3F50125 ＝ #信息图标
    .默认
        变量_B3F50125 ＝ #信息图标
    .判断结束
    .如果真 (参_信息框)
        信息框 (参_内容, 变量_B3F50125, “日志输出”)
    .如果真结束
    
    .如果真 (集_日志文件句柄 ＝ 0)
        集_日志文件句柄 ＝ 打开文件 (文件路径 (), 5, 1)
        移到文件尾 (集_日志文件句柄)
    .如果真结束
    
    
    变量_B5F50125 ＝ 写出文本 (集_日志文件句柄, 取格式文本 (参_内容, 参_级别))
    
    返回 (变量_B5F50125)

.子程序 输出控制台, 逻辑型, 公开, 输入日志内容到控制台
    .参数 参_内容, 文本型
    .参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
    .参数 参_标题, 文本型, 可空, 控制台标题，默认 程序日志
    .参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件
    .局部变量 变量_BAF50125, 整数型
    .局部变量 变量_BBF50125, 文本型
    .局部变量 变量_BCF50125, 逻辑型

    .如果 (DLL_AllocConsole ())
        集_控制台句柄 ＝ DLL_GetStdHandle (#STD_OUTPUT_HANDLE)
        DLL_SetConsoleTitleA (选择 (取文本长度 (参_标题) ＞ 0, 参_标题, “程序日志”))
    .否则
        集_控制台句柄 ＝ DLL_GetStdHandle (#STD_OUTPUT_HANDLE)
    .如果结束
    .如果真 (集_控制台句柄 ≠ 0)
        .如果真 (参_写到文件)
            输出文件 (参_内容, 参_级别)
        .如果真结束
        .判断开始 (参_级别 ＝ 1)
            变量_BAF50125 ＝ #FOREGROUND_RED ＋ #FOREGROUND_INTENSITY
        .判断 (参_级别 ＝ 2)
            变量_BAF50125 ＝ #FOREGROUND_RED ＋ #FOREGROUND_GREEN ＋ #FOREGROUND_INTENSITY
        .判断 (参_级别 ＝ 3)
            变量_BAF50125 ＝ #FOREGROUND_RED ＋ #FOREGROUND_GREEN ＋ #FOREGROUND_BLUE ＋ #FOREGROUND_INTENSITY
        .默认
            变量_BAF50125 ＝ #FOREGROUND_RED ＋ #FOREGROUND_GREEN ＋ #FOREGROUND_BLUE
        .判断结束
        变量_BBF50125 ＝ 取格式文本 (参_内容, 参_级别)
        DLL_SetConsoleTextAttribute (集_控制台句柄, 变量_BAF50125)
        返回 (DLL_WriteConsoleA (集_控制台句柄, 变量_BBF50125, 取文本长度 (变量_BBF50125), 0, 0))
    .如果真结束
    返回 (假)

.子程序 输出易调试, , 公开, 只在调试模式下有效
    .参数 参_内容, 文本型
    .参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
    .参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件
    .局部变量 变量_C0F50125, 文本型

    变量_C0F50125 ＝ 取格式文本 (参_内容, 参_级别)
    .如果真 (参_写到文件)
        输出文件 (参_内容, 参_级别)
    .如果真结束
    输出调试文本 (变量_C0F50125)

.子程序 输出调试器, , 公开, 输出到 调试器，编译模式下有效，可用DbgView 查看
    .参数 参_内容, 文本型
    .参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
    .参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件
    .局部变量 变量_C4F50125, 文本型

    变量_C4F50125 ＝ 取格式文本 (参_内容, 参_级别)
    .如果真 (参_写到文件)
        输出文件 (参_内容, 参_级别)
    .如果真结束
    DLL_OutputDebugStringA (变量_C4F50125)

.子程序 输出编辑框, , 公开, 输出日志内容到编辑框
    .参数 参_编辑框句柄, 整数型
    .参数 参_内容, 文本型
    .参数 参_级别, 整数型, 可空, 默认为【信息】，或如下级别值：0=信息，1=警告，2=错误，3=调试
    .参数 参_写到文件, 逻辑型, 可空, 默认不出日志文件
    .局部变量 变量_C9F50125, 文本型

    变量_C9F50125 ＝ 取格式文本 (参_内容, 参_级别)
    .如果真 (参_写到文件)
        输出文件 (参_内容, 参_级别)
    .如果真结束
    .如果真 (IsWindow (参_编辑框句柄) ＝ 1)
        SendMessageA (参_编辑框句柄, #EM_REPLACESEL, 0, 取指针文本_ (变量_C9F50125))
    .如果真结束
    

.子程序 取格式文本, 文本型
    .参数 变量_CAF50125, 文本型
    .参数 变量_CBF50125, 整数型, 可空
    .局部变量 变量_CCF50125, 精易_时间
    .局部变量 变量_CDF50125, 文本型
    .局部变量 变量_CEF50125, 文本型
    .局部变量 变量_CFF50125, 文本型
    .局部变量 变量_D0F50125, 文本型

    .判断开始 (变量_CBF50125 ＝ 1)
        变量_D0F50125 ＝ “警告”
    .判断 (变量_CBF50125 ＝ 2)
        变量_D0F50125 ＝ “错误”
    .判断 (变量_CBF50125 ＝ 3)
        变量_D0F50125 ＝ “调试”
    .默认
        变量_D0F50125 ＝ “信息”
    .判断结束
    GetLocalTime (变量_CCF50125)
    变量_CEF50125 ＝ 取空白文本 (50)
    GetDateFormatA (0, 0, 变量_CCF50125, “yyyy-MM-dd ”, 变量_CEF50125, 50)
    变量_CFF50125 ＝ 取空白文本 (50)
    GetTimeFormatA (0, #TIME_FORCE24HOURFORMAT, 变量_CCF50125, “hh:mm:ss.”, 变量_CFF50125, 50)
    变量_CDF50125 ＝ 变量_CEF50125 ＋ 变量_CFF50125 ＋ 文本_自动补零 (到文本 (变量_CCF50125.毫), 3) ＋ “ ” ＋ 变量_D0F50125 ＋ “:” ＋ 变量_CAF50125 ＋ #换行符
    返回 (变量_CDF50125)

