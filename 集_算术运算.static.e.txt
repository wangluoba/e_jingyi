.版本 2

.程序集 集_算术运算
.子程序 运算_求阶乘, 长整数型, 公开, 返回参数中给定数值的计算阶乘结果。
    .参数 阶乘数, 整数型, , 要求阶乘的数值
    .局部变量 变量_980A0125, 长整数型
    .局部变量 变量_990A0125, 整数型

    变量_980A0125 ＝ 1
    .计次循环首 (阶乘数, 变量_990A0125)
        变量_980A0125 ＝ 变量_980A0125 × 变量_990A0125
    .计次循环尾 ()
    返回 (变量_980A0125)
    

.子程序 运算_二分查找, 整数型, 公开
    .参数 数组, 文本型, 数组
    .参数 待查, 文本型
    .参数 类型, 整数型
    .参数 区分大小写, 逻辑型
    .局部变量 变量_540A0125, 整数型
    .局部变量 变量_550A0125, 整数型
    .局部变量 变量_560A0125, 整数型
    .局部变量 变量_570A0125, 双精度小数型
    .局部变量 变量_580A0125, 双精度小数型
    .局部变量 变量_590A0125, 文本型

    变量_540A0125 ＝ 1
    变量_550A0125 ＝ 取数组成员数 (数组)
    .如果真 (变量_550A0125 ＝ 0)
        返回 (1)
    .如果真结束
    .判断开始 (类型 ＝ 0)
        变量_570A0125 ＝ 到数值 (待查)
        .如果真 (变量_570A0125 ≥ 到数值 (数组 [变量_550A0125]))
            返回 (变量_550A0125 ＋ 1)
        .如果真结束
        .如果真 (变量_570A0125 ≤ 到数值 (数组 [1]))
            返回 (1)
        .如果真结束
        
        .判断循环首 (变量_540A0125 ＜ 变量_550A0125 － 1)
            变量_560A0125 ＝ (变量_540A0125 ＋ 变量_550A0125) ＼ 2
            变量_580A0125 ＝ 到数值 (数组 [变量_560A0125])
            .如果真 (变量_570A0125 ＝ 变量_580A0125)
                变量_540A0125 ＝ 变量_560A0125
                跳出循环 ()
            .如果真结束
            
            .如果 (变量_570A0125 ＜ 变量_580A0125)
                变量_550A0125 ＝ 变量_560A0125
            .否则
                变量_540A0125 ＝ 变量_560A0125
            .如果结束
            
        .判断循环尾 ()
    .判断 (类型 ＝ 1)
        .如果真 (文本比较 (待查, 数组 [变量_550A0125], 区分大小写) ≥ 0)
            返回 (变量_550A0125 ＋ 1)
        .如果真结束
        .如果真 (文本比较 (待查, 数组 [1], 区分大小写) ≤ 0)
            返回 (1)
        .如果真结束
        .判断循环首 (变量_540A0125 ＜ 变量_550A0125 － 1)
            变量_560A0125 ＝ (变量_540A0125 ＋ 变量_550A0125) ＼ 2
            .如果真 (文本比较 (待查, 数组 [变量_560A0125], 区分大小写) ＝ 0)
                变量_540A0125 ＝ 变量_560A0125
                跳出循环 ()
            .如果真结束
            .如果 (文本比较 (待查, 数组 [变量_560A0125], 区分大小写) ＜ 0)
                变量_550A0125 ＝ 变量_560A0125
            .否则
                变量_540A0125 ＝ 变量_560A0125
            .如果结束
            
        .判断循环尾 ()
        
    .判断 (类型 ＝ 2)
        变量_570A0125 ＝ 取字节集数据 (到字节集 (到时间 (待查)), #双精度小数型)
        .如果真 (变量_570A0125 ≥ 取字节集数据 (到字节集 (到时间 (数组 [变量_550A0125])), #双精度小数型))
            返回 (变量_550A0125 ＋ 1)
        .如果真结束
        .如果真 (变量_570A0125 ≤ 取字节集数据 (到字节集 (到时间 (数组 [1])), #双精度小数型))
            返回 (1)
        .如果真结束
        .判断循环首 (变量_540A0125 ＜ 变量_550A0125 － 1)
            变量_560A0125 ＝ (变量_540A0125 ＋ 变量_550A0125) ＼ 2
            变量_580A0125 ＝ 取字节集数据 (到字节集 (到时间 (数组 [变量_560A0125])), #双精度小数型)
            .如果真 (变量_570A0125 ＝ 变量_580A0125)
                变量_540A0125 ＝ 变量_560A0125
                跳出循环 ()
            .如果真结束
            .如果 (变量_570A0125 ＜ 变量_580A0125)
                变量_550A0125 ＝ 变量_560A0125
            .否则
                变量_540A0125 ＝ 变量_560A0125
            .如果结束
            
        .判断循环尾 ()
    .默认
        
    .判断结束
    返回 (变量_540A0125 ＋ 1)

.子程序 运算_函数计算, 文本型, 公开, 求正弦、余弦、正切、余切
    .参数 Text, 文本型
    .参数 单位, 逻辑型, , 真为弧度制，假为角度制
    .局部变量 变量_600A0125, 文本型
    .局部变量 变量_610A0125, 文本型
    .局部变量 变量_620A0125, 整数型
    .局部变量 变量_630A0125, 文本型
    .局部变量 变量_640A0125, 文本型
    .局部变量 变量_650A0125, 整数型
    .局部变量 变量_660A0125, 整数型
    .局部变量 变量_670A0125, 整数型

    变量_600A0125 ＝ Text
    .计次循环首 (4, 变量_650A0125)
        变量_610A0125 ＝ 多项选择 (变量_650A0125, “sin(”, “cos(”, “tg(”, “ctg(”)
        变量_620A0125 ＝ 多项选择 (变量_650A0125, 4, 4, 3, 4)
        变量_660A0125 ＝ 寻找文本 (变量_600A0125, 变量_610A0125, , 假)
        .判断循环首 (变量_660A0125 ≠ -1)
            变量_670A0125 ＝ 寻找文本 (变量_600A0125, “)”, 变量_660A0125, 假)
            .如果真 (变量_670A0125 ≠ -1)
                变量_630A0125 ＝ 取文本中间 (变量_600A0125, 变量_660A0125 ＋ 变量_620A0125, 变量_670A0125 － 变量_660A0125 － 变量_620A0125)
                .判断开始 (变量_630A0125 ＝ “”)
                    变量_600A0125 ＝ 文本替换 (变量_600A0125, 变量_660A0125, 变量_620A0125 ＋ 1, )
                .默认
                    变量_640A0125 ＝ 运算_括号计算 (变量_630A0125)
                    .如果真 (变量_640A0125 ＝ “”)
                        返回 (“”)
                    .如果真结束
                    .判断开始 (变量_650A0125 ＝ 1)
                        变量_640A0125 ＝ 到文本 (求正弦 (选择 (单位, 到数值 (变量_640A0125), 到数值 (变量_640A0125) × #pi ÷ 180)))
                    .判断 (变量_650A0125 ＝ 2)
                        变量_640A0125 ＝ 到文本 (求余弦 (选择 (单位, 到数值 (变量_640A0125), 到数值 (变量_640A0125) × #pi ÷ 180)))
                    .判断 (变量_650A0125 ＝ 3)
                        变量_640A0125 ＝ 到文本 (求正切 (选择 (单位, 到数值 (变量_640A0125), 到数值 (变量_640A0125) × #pi ÷ 180)))
                    .默认
                        变量_640A0125 ＝ 到文本 (1 ÷ 求正切 (选择 (单位, 到数值 (变量_640A0125), 到数值 (变量_640A0125) × #pi ÷ 180)))
                    .判断结束
                    .如果真 (是否运算正确 (到数值 (变量_640A0125)) ＝ 假)
                        返回 (“”)
                    .如果真结束
                    变量_600A0125 ＝ 文本替换 (变量_600A0125, 变量_660A0125, 取文本长度 (变量_630A0125) ＋ 变量_620A0125 ＋ 1, 变量_640A0125)
                .判断结束
                
            .如果真结束
            变量_660A0125 ＝ 寻找文本 (变量_600A0125, 变量_610A0125, , 假)
        .判断循环尾 ()
    .计次循环尾 ()
    返回 (运算_括号计算 (变量_600A0125))

.子程序 运算_括号计算, 文本型, 公开
    .参数 Text, 文本型
    .局部变量 变量_690A0125, 整数型
    .局部变量 变量_6A0A0125, 整数型, , "0"
    .局部变量 变量_6B0A0125, 整数型
    .局部变量 变量_6C0A0125, 文本型
    .局部变量 变量_6D0A0125, 整数型
    .局部变量 变量_6E0A0125, 文本型
    .局部变量 变量_6F0A0125, 文本型
    .局部变量 变量_700A0125, 文本型

    变量_700A0125 ＝ Text
    变量_690A0125 ＝ 1
    .判断循环首 (变量_690A0125 ≤ 取文本长度 (变量_700A0125))
        变量_6C0A0125 ＝ 取文本中间 (变量_700A0125, 变量_690A0125, 1)
        .判断开始 (变量_6C0A0125 ＝ “(”)
            加入成员 (变量_6A0A0125, 变量_690A0125)
            变量_690A0125 ＝ 变量_690A0125 ＋ 1
        .判断 (变量_6C0A0125 ＝ “)”)
            变量_6B0A0125 ＝ 取数组成员数 (变量_6A0A0125)
            .如果 (变量_6B0A0125 ＞ 0)
                变量_6E0A0125 ＝ 取文本中间 (变量_700A0125, 变量_6A0A0125 [变量_6B0A0125] ＋ 1, 变量_690A0125 － 变量_6A0A0125 [变量_6B0A0125] － 1)
                变量_6F0A0125 ＝ 运算_内部计算 (变量_6E0A0125)
                .如果真 (变量_6F0A0125 ＝ “”)
                    返回 (“”)
                .如果真结束
                变量_700A0125 ＝ 文本替换 (变量_700A0125, 变量_6A0A0125 [变量_6B0A0125], 取文本长度 (“(” ＋ 变量_6E0A0125 ＋ “)”), 变量_6F0A0125)
                变量_690A0125 ＝ 变量_6A0A0125 [变量_6B0A0125] ＋ 1
                删除成员 (变量_6A0A0125, 变量_6B0A0125, )
            .否则
                变量_700A0125 ＝ 文本替换 (变量_700A0125, 变量_690A0125, 1, )
            .如果结束
            
        .判断 (变量_6D0A0125 ＝ 92)
            变量_700A0125 ＝ 文本替换 (变量_700A0125, 变量_690A0125, 1, “\”)
            变量_690A0125 ＝ 变量_690A0125 ＋ 1
        .默认
            变量_6D0A0125 ＝ 取代码 (变量_6C0A0125, )
            .判断开始 (变量_6D0A0125 ＜ 46 或 变量_6D0A0125 ＞ 57 且 变量_6D0A0125 ≠ 42 且 变量_6D0A0125 ≠ 43 且 变量_6D0A0125 ≠ 45 且 变量_6D0A0125 ≠ 92 且 变量_6D0A0125 ≠ 94)
                变量_700A0125 ＝ 文本替换 (变量_700A0125, 变量_690A0125, 1, )
            .默认
                变量_690A0125 ＝ 变量_690A0125 ＋ 1
            .判断结束
            
        .判断结束
        
    .判断循环尾 ()
    变量_6B0A0125 ＝ 取数组成员数 (变量_6A0A0125)
    .如果真 (变量_6B0A0125 ＞ 0)
        .计次循环首 (变量_6B0A0125, 变量_690A0125)
            变量_700A0125 ＝ 文本替换 (变量_700A0125, 变量_6A0A0125 [变量_6B0A0125 － 变量_690A0125 ＋ 1], 1, )
        .计次循环尾 ()
    .如果真结束
    返回 (运算_内部计算 (变量_700A0125))

.子程序 运算_内部计算, 文本型, 公开, 加减乘除及乘方运算，失败返回空文本
    .参数 Text, 文本型
    .局部变量 变量_720A0125, 整数型
    .局部变量 变量_730A0125, 整数型, , "0"
    .局部变量 变量_740A0125, 整数型
    .局部变量 变量_750A0125, 文本型
    .局部变量 变量_760A0125, 文本型
    .局部变量 变量_770A0125, 文本型, , "2"
    .局部变量 变量_780A0125, 文本型
    .局部变量 变量_21DF0225, 整数型

    变量_760A0125 ＝ Text
    .如果真 (寻找文本 (变量_760A0125, “^”, , 假) ≠ -1)
        .判断循环首 (变量_720A0125 ≤ 取文本长度 (变量_760A0125))
            变量_750A0125 ＝ 取文本中间 (变量_760A0125, 变量_720A0125, 1)
            .判断开始 (变量_750A0125 ＝ “+” 或 (变量_750A0125 ＝ “-” 且 变量_720A0125 ＞ 1) 或 变量_750A0125 ＝ “*” 或 变量_750A0125 ＝ “/”)
                加入成员 (变量_730A0125, 变量_720A0125)
                变量_720A0125 ＝ 变量_720A0125 ＋ 1
            .判断 (变量_750A0125 ＝ “^”)
                变量_740A0125 ＝ 取数组成员数 (变量_730A0125)
                .判断开始 (变量_740A0125 ＞ 0)
                    变量_770A0125 [1] ＝ 取文本中间 (变量_760A0125, 变量_730A0125 [变量_740A0125] ＋ 1, 变量_720A0125 － 变量_730A0125 [变量_740A0125] － 1)
                    变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
                    变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
                    变量_780A0125 ＝ 到文本 (求次方 (到数值 (变量_770A0125 [1]), 到数值 (变量_770A0125 [2])))
                    .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                        变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
                    .判断循环尾 ()
                    变量_760A0125 ＝ 文本替换 (变量_760A0125, 变量_730A0125 [变量_740A0125] ＋ 1, 取文本长度 (变量_770A0125 [1] ＋ “^” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
                    变量_720A0125 ＝ 变量_730A0125 [变量_740A0125] ＋ 1
                .默认
                    变量_770A0125 [1] ＝ 取文本左边 (变量_760A0125, 变量_720A0125 － 1)
                    变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
                    变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
                    变量_780A0125 ＝ 到文本 (求次方 (到数值 (变量_770A0125 [1]), 到数值 (变量_770A0125 [2])))
                    .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                        变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
                    .判断循环尾 ()
                    变量_760A0125 ＝ 文本替换 (变量_760A0125, 1, 取文本长度 (变量_770A0125 [1] ＋ “^” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
                    变量_720A0125 ＝ 1
                .判断结束
                
            .默认
                变量_720A0125 ＝ 变量_720A0125 ＋ 1
            .判断结束
            
        .判断循环尾 ()
    .如果真结束
    变量_720A0125 ＝ 1
    清除数组 (变量_730A0125)
    .如果真 (寻找文本 (变量_760A0125, “*”, , 假) ≠ -1 或 寻找文本 (变量_760A0125, “/”, , 假) ≠ -1)
        .判断循环首 (变量_720A0125 ≤ 取文本长度 (变量_760A0125))
            变量_750A0125 ＝ 取文本中间 (变量_760A0125, 变量_720A0125, 1)
            .判断开始 (变量_750A0125 ＝ “+” 或 (变量_750A0125 ＝ “-” 且 变量_720A0125 ＞ 1))
                加入成员 (变量_730A0125, 变量_720A0125)
                变量_720A0125 ＝ 变量_720A0125 ＋ 1
            .判断 (变量_750A0125 ＝ “*”)
                变量_740A0125 ＝ 取数组成员数 (变量_730A0125)
                .判断开始 (变量_740A0125 ＞ 0)
                    变量_770A0125 [1] ＝ 取文本中间 (变量_760A0125, 变量_730A0125 [变量_740A0125] ＋ 1, 变量_720A0125 － 变量_730A0125 [变量_740A0125] － 1)
                    变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
                    变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
                    变量_780A0125 ＝ 到文本 (到数值 (变量_770A0125 [1]) × 到数值 (变量_770A0125 [2]))
                    .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                        变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
                    .判断循环尾 ()
                    变量_760A0125 ＝ 文本替换 (变量_760A0125, 变量_730A0125 [变量_740A0125] ＋ 1, 取文本长度 (变量_770A0125 [1] ＋ “*” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
                    变量_720A0125 ＝ 变量_730A0125 [变量_740A0125] ＋ 1
                .默认
                    变量_770A0125 [1] ＝ 取文本左边 (变量_760A0125, 变量_720A0125 － 1)
                    变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
                    变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
                    变量_780A0125 ＝ 到文本 (到数值 (变量_770A0125 [1]) × 到数值 (变量_770A0125 [2]))
                    .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                        变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
                    .判断循环尾 ()
                    变量_760A0125 ＝ 文本替换 (变量_760A0125, 1, 取文本长度 (变量_770A0125 [1] ＋ “*” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
                    变量_720A0125 ＝ 1
                .判断结束
                
            .判断 (变量_750A0125 ＝ “/”)
                变量_740A0125 ＝ 取数组成员数 (变量_730A0125)
                .判断开始 (变量_740A0125 ＞ 0)
                    变量_770A0125 [1] ＝ 取文本中间 (变量_760A0125, 变量_730A0125 [变量_740A0125] ＋ 1, 变量_720A0125 － 变量_730A0125 [变量_740A0125] － 1)
                    变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
                    变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
                    .如果真 (到数值 (变量_770A0125 [2]) ＝ 0)
                        返回 (“”)
                    .如果真结束
                    .如果 (到数值 (变量_770A0125 [1]) ＝ 0)
                        变量_780A0125 ＝ “0”
                    .否则
                        变量_780A0125 ＝ 到文本 (到数值 (变量_770A0125 [1]) ÷ 到数值 (变量_770A0125 [2]))
                    .如果结束
                    .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                        变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
                    .判断循环尾 ()
                    变量_760A0125 ＝ 文本替换 (变量_760A0125, 变量_730A0125 [变量_740A0125] ＋ 1, 取文本长度 (变量_770A0125 [1] ＋ “/” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
                    变量_720A0125 ＝ 变量_730A0125 [变量_740A0125] ＋ 1
                .默认
                    变量_770A0125 [1] ＝ 取文本左边 (变量_760A0125, 变量_720A0125 － 1)
                    变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
                    变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
                    .如果真 (到数值 (变量_770A0125 [2]) ＝ 0)
                        返回 (“”)
                    .如果真结束
                    .如果 (到数值 (变量_770A0125 [1]) ＝ 0)
                        变量_780A0125 ＝ “0”
                    .否则
                        变量_780A0125 ＝ 到文本 (到数值 (变量_770A0125 [1]) ÷ 到数值 (变量_770A0125 [2]))
                    .如果结束
                    .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                        变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
                    .判断循环尾 ()
                    变量_760A0125 ＝ 文本替换 (变量_760A0125, 1, 取文本长度 (变量_770A0125 [1] ＋ “/” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
                    变量_720A0125 ＝ 1
                .判断结束
                
            .默认
                变量_720A0125 ＝ 变量_720A0125 ＋ 1
            .判断结束
            
        .判断循环尾 ()
    .如果真结束
    变量_720A0125 ＝ 1
    .判断循环首 (变量_720A0125 ≤ 取文本长度 (变量_760A0125))
        变量_750A0125 ＝ 取文本中间 (变量_760A0125, 变量_720A0125, 1)
        .判断开始 (变量_750A0125 ＝ “+”)
            变量_770A0125 [1] ＝ 取文本左边 (变量_760A0125, 变量_720A0125 － 1)
            变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
            变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
            变量_780A0125 ＝ 到文本 (到数值 (变量_770A0125 [1]) ＋ 到数值 (变量_770A0125 [2]))
            .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
            .判断循环尾 ()
            变量_760A0125 ＝ 文本替换 (变量_760A0125, 1, 取文本长度 (变量_770A0125 [1] ＋ “+” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
            变量_720A0125 ＝ 1
        .判断 (变量_750A0125 ＝ “-” 且 变量_720A0125 ＞ 1)
            变量_770A0125 [1] ＝ 取文本左边 (变量_760A0125, 变量_720A0125 － 1)
            变量_770A0125 [2] ＝ 取文本右边 (变量_760A0125, 取文本长度 (变量_760A0125) － 变量_720A0125)
            变量_770A0125 [2] ＝ 到文本 (到数值 (变量_770A0125 [2]))
            变量_780A0125 ＝ 到文本 (到数值 (变量_770A0125 [1]) － 到数值 (变量_770A0125 [2]))
            .判断循环首 (取文本中间 (变量_760A0125, 变量_720A0125 ＋ 取文本长度 (变量_770A0125 [2]) ＋ 1 ＋ 变量_21DF0225, 1) ＝ “0”)
                变量_21DF0225 ＝ 变量_21DF0225 ＋ 1
            .判断循环尾 ()
            变量_760A0125 ＝ 文本替换 (变量_760A0125, 1, 取文本长度 (变量_770A0125 [1] ＋ “-” ＋ 变量_770A0125 [2]) ＋ 变量_21DF0225, 变量_780A0125)
            变量_720A0125 ＝ 1
        .默认
            变量_720A0125 ＝ 变量_720A0125 ＋ 1
        .判断结束
        
    .判断循环尾 ()
    返回 (变量_760A0125)

.子程序 运算_取圆周率, 文本型, 公开, 返回小数最大1000位圆周率,实际上有10位计算就已很精确了
    .参数 位数, 整数型, , 返回圆周率小数点后的位数
    .局部变量 变量_7A0A0125, 文本型
    .局部变量 变量_7B0A0125, 文本型
    .局部变量 变量_7C0A0125, 文本型
    .局部变量 变量_7D0A0125, 文本型
    .局部变量 变量_7E0A0125, 文本型
    .局部变量 变量_7F0A0125, 文本型
    .局部变量 变量_800A0125, 文本型
    .局部变量 变量_810A0125, 文本型
    .局部变量 变量_820A0125, 文本型
    .局部变量 变量_830A0125, 文本型

    变量_7A0A0125 ＝ “1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679”
    变量_7B0A0125 ＝ “8214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196”
    变量_7C0A0125 ＝ “4428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273”
    变量_7D0A0125 ＝ “7245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094”
    变量_7E0A0125 ＝ “3305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912”
    变量_7F0A0125 ＝ “9833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132”
    变量_800A0125 ＝ “0005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235”
    变量_810A0125 ＝ “4201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859”
    变量_820A0125 ＝ “5024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303”
    变量_830A0125 ＝ “5982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989”
    返回 (取文本左边 (“3.” ＋ 变量_7A0A0125 ＋ 变量_7B0A0125 ＋ 变量_7C0A0125 ＋ 变量_7D0A0125 ＋ 变量_7E0A0125 ＋ 变量_7F0A0125 ＋ 变量_800A0125 ＋ 变量_810A0125 ＋ 变量_820A0125 ＋ 变量_830A0125, 位数 ＋ 2))

.子程序 运算_求反正弦, 双精度小数型, 公开, 返回弧度值
    .参数 正弦值, 双精度小数型, , -1到1，否则返回0

    .如果真 (正弦值 ＜ -1 或 正弦值 ＞ 1)
        返回 (0)
    .如果真结束
    返回 (求反正切 (正弦值 ÷ 求平方根 (1 － 正弦值 × 正弦值)))

.子程序 运算_求反余弦, 双精度小数型, 公开, 返回弧度值
    .参数 余弦值, 双精度小数型, , -1到1，否则返回0

    .如果真 (余弦值 ＞ 1 或 余弦值 ＜ -1)
        返回 (0)
    .如果真结束
    返回 (#pi ÷ 2 － 运算_求反正弦 (余弦值))

.子程序 运算_颜色转换, 文本型, 公开, 将10进制的颜色值转到16进制的颜色值；   还原调用 网页_取十进制颜色值
    .参数 待转换颜色值, 整数型
    .局部变量 变量_55440125, 字节集
    .局部变量 变量_56440125, 文本型

    变量_55440125 ＝ 到字节集 (待转换颜色值)
    变量_56440125 ＝ 取文本右边 (“00” ＋ 取十六进制文本 (变量_55440125 [1]), 2)
    变量_56440125 ＝ 变量_56440125 ＋ 取文本右边 (“00” ＋ 取十六进制文本 (变量_55440125 [2]), 2)
    变量_56440125 ＝ 变量_56440125 ＋ 取文本右边 (“00” ＋ 取十六进制文本 (变量_55440125 [3]), 2)
    返回 (变量_56440125)

.子程序 运算_表达式计算, 文本型, 公开, 成功返回计算后的文本结果，失败返回空文本
    .参数 Text, 文本型
    .参数 单位, 逻辑型, , 函数计算时使用，真为弧度制，假为角度制
    .局部变量 变量_9D0A0125, 文本型

    变量_9D0A0125 ＝ 运算_函数计算 (Text, 单位)
    返回 (运算_括号计算 (变量_9D0A0125))

.子程序 运算_象素到厘米, 双精度小数型, 公开
    .参数 象素值, 整数型
    .局部变量 变量_870A0125, 双精度小数型

    变量_870A0125 ＝ 象素值 ÷ 28.346
    返回 (变量_870A0125)

.子程序 运算_厘米到象素, 双精度小数型, 公开
    .参数 厘米值, 双精度小数型
    .局部变量 变量_890A0125, 双精度小数型

    变量_890A0125 ＝ 厘米值 × 28.346
    返回 (变量_890A0125)

.子程序 运算_求直线距离, 双精度小数型, 公开, 返回两个点之间的直线距离,可以返回象素,也可以返回厘米
    .参数 水平象素1, 整数型
    .参数 垂直象素1, 整数型
    .参数 水平象素2, 整数型
    .参数 垂直象素2, 整数型
    .参数 类型, 整数型, 可空, 1为返回象素,2为返回厘米
    .局部变量 变量_8F0A0125, 整数型
    .局部变量 变量_900A0125, 小数型

    变量_8F0A0125 ＝ 求平方根 (求次方 (水平象素2 － 水平象素1, 2) ＋ 求次方 (垂直象素2 － 垂直象素1, 2))
    .如果 (是否为空 (类型) ＝ 真 或 类型 ＝ 1)
        返回 (变量_8F0A0125)
    .否则
        变量_900A0125 ＝ 变量_8F0A0125 ÷ 28
        返回 (变量_900A0125)
    .如果结束
    返回 (-1)

.子程序 运算_四舍六入五留双, 双精度小数型, 公开
    .参数 欲修约值, 双精度小数型
    .参数 保留位数, 整数型

    .如果真 (欲修约值 × 求次方 (10, 保留位数) － 取整 (欲修约值 × 求次方 (10, 保留位数)) ≠ 0.5)
        返回 (四舍五入 (欲修约值, 保留位数))
    .如果真结束
    .如果真 (欲修约值 × 求次方 (10, 保留位数) － 取整 (欲修约值 × 求次方 (10, 保留位数)) ＝ 0.5)
        .如果真 (取整 (欲修约值 × 求次方 (10, 保留位数)) ％ 2 ＝ 0)
            返回 (四舍五入 (欲修约值 － 求次方 (10, 保留位数 × -1), 保留位数))
        .如果真结束
        .如果真 (取整 (欲修约值 × 求次方 (10, 保留位数)) ％ 2 ＝ 1)
            返回 (四舍五入 (欲修约值, 保留位数))
        .如果真结束
        
    .如果真结束
    返回 (0)

.子程序 运算_大小端转换, 整数型, 公开
    .参数 需要转换的值, 整数型
    .局部变量 变量_70E10225, 整数型
    .局部变量 变量_71E10225, 整数型
    .局部变量 变量_72E10225, 整数型
    .局部变量 变量_73E10225, 整数型

    变量_70E10225 ＝ 位与 (需要转换的值, 255)
    变量_70E10225 ＝ Int_Shl (变量_70E10225, 24)
    
    变量_71E10225 ＝ 位与 (需要转换的值, 65280)
    变量_71E10225 ＝ Int_Shl (变量_71E10225, 8)
    
    变量_72E10225 ＝ 位与 (需要转换的值, 16711680)
    变量_72E10225 ＝ Int_Shr (变量_72E10225, 8)
    
    变量_73E10225 ＝ 位与 (需要转换的值, 4278190080)
    变量_73E10225 ＝ Int_Shr (变量_73E10225, 24)
    返回 (位或 (变量_70E10225, 变量_71E10225, 变量_72E10225, 变量_73E10225))

.子程序 Int_Shr, 整数型
    .参数 变量_74E10225, 整数型
    .参数 变量_75E10225, 字节型

    置入代码 ({ 139, 69, 8, 138, 77, 12, 131, 225, 31, 211, 232, 201, 194, 8, 0 })
    返回 (0)

.子程序 Int_Shl, 整数型
    .参数 变量_76E10225, 整数型
    .参数 变量_77E10225, 字节型

    置入代码 ({ 139, 69, 8, 138, 77, 12, 131, 225, 31, 211, 224, 201, 194, 8, 0 })
    返回 (0)

