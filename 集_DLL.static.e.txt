.版本 2

.程序集 集_DLL
.子程序 投递消息整数, , 公开
    .参数 窗口句柄, 整数型
    .参数 消息号, 整数型
    .参数 消息参数1, 整数型
    .参数 消息参数2, 整数型

    PostMessageA (窗口句柄, 消息号, 消息参数1, 消息参数2)

.子程序 发送消息整数, 整数型, 公开, 发送特定的消息到一个或多个窗口。该命令不会立即返回，只有在消息被处理完毕后才返回结果。返回值的具体含义随消息的不同而不同
    .参数 窗口句柄, 整数型, , 本参数指定接收消息的窗口的句柄
    .参数 消息号, 整数型, , 本参数指定欲发送的消息
    .参数 消息参数1, 整数型, , 本参数指定消息的第一个参数。具体含义随消息的不同而不同
    .参数 消息参数2, 整数型, , 本参数指定消息的第二个参数。具体含义随消息的不同而不同

    返回 (SendMessageA (窗口句柄, 消息号, 消息参数1, 消息参数2))

.子程序 发送消息文本, 整数型, 公开, 发送特定的消息到一个或多个窗口。该命令不会立即返回，只有在消息被处理完毕后才返回结果。返回值的具体含义随消息的不同而不同
    .参数 窗口句柄, 整数型, , 本参数指定接收消息的窗口的句柄
    .参数 消息号, 整数型, , 本参数指定欲发送的消息
    .参数 消息参数1, 整数型, , 本参数指定消息的第一个参数。具体含义随消息的不同而不同
    .参数 消息参数2, 文本型, , 本参数指定消息的第二个参数。具体含义随消息的不同而不同

    返回 (SendMessageA (窗口句柄, 消息号, 消息参数1, 取指针文本_ (消息参数2)))

.子程序 发送消息逻辑, 整数型, 公开, 发送特定的消息到一个或多个窗口。该命令不会立即返回，只有在消息被处理完毕后才返回结果。返回值的具体含义随消息的不同而不同
    .参数 窗口句柄, 整数型, , 本参数指定接收消息的窗口的句柄
    .参数 消息号, 整数型, , 本参数指定欲发送的消息
    .参数 消息参数1, 逻辑型, , 本参数指定消息的第一个参数。具体含义随消息的不同而不同
    .参数 消息参数2, 整数型, , 本参数指定消息的第二个参数。具体含义随消息的不同而不同

    返回 (SendMessageA (窗口句柄, 消息号, 到整数 (消息参数1), 消息参数2))

.子程序 API_取空白文本, 文本型, 公开, 返回具有指定数目半角空格的文本。
    .参数 重复次数, 整数型
    .局部变量 变量_91740125, 整数型

    
    .如果真 (重复次数 ≤ 0)
        
        置入代码 ({ 51, 192, 139, 229, 93, 194, 4, 0 })
        
        
        
        
    .如果真结束
    
    
    变量_91740125 ＝ HeapAlloc (GetProcessHeap (), 0, 重复次数 ＋ 1)
    
    .如果真 (变量_91740125 ＝ 0)
        
        置入代码 ({ 139, 229, 93, 194, 4, 0 })
        
        
        
    .如果真结束
    
    DLL_RtlFillMemory (变量_91740125, 重复次数, 32)
    
    
    置入代码 ({ 139, 69, 8, 3, 69, 252, 198, 0, 0, 139, 69, 252, 139, 229, 93, 194, 4, 0 })
    
    
    返回 (“”)

.子程序 API_取空白字节集, 字节集, 公开, 返回具有特定数目 0 字节的字节集
    .参数 零字节数目, 整数型
    .局部变量 变量_93740125, 整数型

    .如果真 (零字节数目 ≤ 0)
        
        置入代码 ({ 51, 192, 139, 229, 93, 194, 4, 0 })
        
        
        
        
    .如果真结束
    
    变量_93740125 ＝ HeapAlloc (GetProcessHeap (), 8, 零字节数目 ＋ 8)
    .如果真 (变量_93740125 ＝ 0)
        
        置入代码 ({ 139, 229, 93, 194, 4, 0 })
        
        
        
    .如果真结束
    
    
    置入代码 ({ 254, 0, 255, 117, 8, 143, 64, 4, 139, 229, 93, 194, 4, 0 })
    返回 ({ })

