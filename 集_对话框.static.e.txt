.版本 2

.程序集 集_对话框
.子程序 对话框_打开文件, 文本型, 公开, 成功打开返回文件路径,失败返回空文本
    .参数 窗口句柄, 整数型, , 拥有者窗口句柄,如启动窗口的句柄
    .参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录,如果留空将跳转到当前目录
    .参数 对话框标题, 文本型, 可空, 对话框的标题，可空:默认为"打开文件"
    .参数 过滤器, 文本型, 可空, 可空，默认为“所有文件(*.*)|*.*”  每对中的第一个字符串是描述过滤器的显示字符串（例如，文本文件），第二个字符串指定过滤器模式（例如，*.TXT）。要为单个显示字符串指定多个过滤器模式，请使用分号分隔模式（例如，*.TXT; *.DOC; *.BAK）。模式字符串可以是有效文件名字和星号（*）通配符的组合。模式字符串中不要包含空格。
    .参数 修改当前目录, 逻辑型, 可空, 可以为空。默认为假，不改变当前目录。真 = 把初始目录改成当前目录。
    .局部变量 变量_E2730125, OPENFILENAME
    .局部变量 变量_E3730125, 整数型
    .局部变量 变量_E4730125, 文本型, , "0"
    .局部变量 变量_CB830125, 文本型

    变量_CB830125 ＝ 取当前目录 ()
    .如果真 (是否为空 (对话框标题))
        对话框标题 ＝ “打开文件”
    .如果真结束
    .如果真 (是否为空 (过滤器))
        过滤器 ＝ “所有文件(*.*)|*.*”
    .如果真结束
    变量_E2730125.结构大小 ＝ 76
    变量_E2730125.窗口句柄 ＝ 窗口句柄
    变量_E2730125.实例句柄 ＝ 0
    变量_E4730125 ＝ 分割文本 (过滤器, “|”, )
    .计次循环首 (取数组成员数 (变量_E4730125), 变量_E3730125)
        .如果 (取数组成员数 (变量_E4730125) ＝ 变量_E3730125)
            变量_E2730125.过滤器 ＝ 变量_E2730125.过滤器 ＋ 到字节集 (变量_E4730125 [变量_E3730125]) ＋ { 0, 0 }
        .否则
            变量_E2730125.过滤器 ＝ 变量_E2730125.过滤器 ＋ 到字节集 (变量_E4730125 [变量_E3730125]) ＋ { 0 }
        .如果结束
        
    .计次循环尾 ()
    变量_E2730125.自定义过滤器 ＝ 字符 (0)
    变量_E2730125.自定义过滤器最大长度 ＝ 0
    变量_E2730125.过滤器索引 ＝ 1
    变量_E2730125.文件名 ＝ { 0 } ＋ 取空白字节集 (512)
    变量_E2730125.文件名最大长度 ＝ 512
    变量_E2730125.文件标题 ＝ 取空白文本 (512)
    变量_E2730125.文件标题最大长度 ＝ 512
    变量_E2730125.初始目录 ＝ 选择 (是否为空 (初始目录), 变量_CB830125, 初始目录)
    变量_E2730125.标题 ＝ 对话框标题
    变量_E2730125.标志 ＝ 0
    变量_E2730125.文件扩展名 ＝ 0
    .如果 (GetOpenFileNameA (变量_E2730125))
        .如果真 (修改当前目录 ＝ 假)
            改变目录 (变量_CB830125)
        .如果真结束
        返回 (到文本 (变量_E2730125.文件名))
    .否则
        .如果真 (修改当前目录 ＝ 假)
            改变目录 (变量_CB830125)
        .如果真结束
        返回 (“”)
    .如果结束
    

.子程序 对话框_另存文件, 文本型, 公开, 成功打开返回文件路径,失败返回空文本
    .参数 窗口句柄, 整数型, , 拥有者窗口句柄,如启动窗口的句柄
    .参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录,如果留空将跳转到当前目录
    .参数 对话框标题, 文本型, 可空, 对话框的标题，可空:默认为"保存文件"
    .参数 默认文件名, 文本型, 可空
    .参数 过滤器, 文本型, 可空, 可空，每对中的第一个字符串是描述过滤器的显示字符串（例如，文本文件），第二个字符串指定过滤器模式（例如，*.TXT）。要为单个显示字符串指定多个过滤器模式，请使用分号分隔模式（例如，*.TXT; *.DOC; *.BAK）。模式字符串可以是有效文件名字和星号（*）通配符的组合。模式字符串中不要包含空格。
    .参数 初始过滤器, 整数型, 可空, 可空，默认为1，指定初始的过滤器，1为第一个过滤器
    .参数 修改当前目录, 逻辑型, 可空, 可以为空。默认为假，不改变当前目录。真 = 把初始目录改成当前目录。
    .局部变量 变量_EA730125, 整数型
    .局部变量 变量_EB730125, OPENFILENAME
    .局部变量 变量_EC730125, 整数型
    .局部变量 变量_ED730125, 文本型, , "0"
    .局部变量 变量_C9830125, 文本型

    变量_C9830125 ＝ 取当前目录 ()
    .如果真 (是否为空 (对话框标题))
        对话框标题 ＝ “保存文件”
    .如果真结束
    .如果真 (是否为空 (过滤器))
        过滤器 ＝ “TXT文档(*.txt)|*.txt|所有文件(*.*)|*.*”
    .如果真结束
    .如果真 (初始过滤器 ＝ 0)
        初始过滤器 ＝ 1
    .如果真结束
    .如果真 (是否为空 (默认文件名))
        默认文件名 ＝ 到文本 ({ 0 })
    .如果真结束
    
    变量_EB730125.结构大小 ＝ 76
    变量_EB730125.窗口句柄 ＝ 窗口句柄
    变量_EB730125.实例句柄 ＝ 0
    变量_ED730125 ＝ 分割文本 (过滤器, “|”, )
    .计次循环首 (取数组成员数 (变量_ED730125), 变量_EC730125)
        .如果 (取数组成员数 (变量_ED730125) ＝ 变量_EC730125)
            变量_EB730125.过滤器 ＝ 变量_EB730125.过滤器 ＋ 到字节集 (变量_ED730125 [变量_EC730125]) ＋ { 0, 0 }
        .否则
            变量_EB730125.过滤器 ＝ 变量_EB730125.过滤器 ＋ 到字节集 (变量_ED730125 [变量_EC730125]) ＋ { 0 }
        .如果结束
        
    .计次循环尾 ()
    变量_EB730125.自定义过滤器 ＝ 字符 (0)
    变量_EB730125.自定义过滤器最大长度 ＝ 0
    变量_EB730125.过滤器索引 ＝ 初始过滤器
    
    
    变量_EB730125.文件名 ＝ 到字节集 (默认文件名) ＋ 取空白字节集 (512 － 取字节集长度 (到字节集 (默认文件名)))
    变量_EB730125.文件名最大长度 ＝ 512 － 取字节集长度 (到字节集 (默认文件名))
    
    变量_EB730125.文件标题 ＝ 取空白文本 (512)
    变量_EB730125.文件标题最大长度 ＝ 512
    变量_EB730125.初始目录 ＝ 选择 (是否为空 (初始目录), 变量_C9830125, 初始目录)
    
    变量_EB730125.标题 ＝ 对话框标题
    变量_EB730125.标志 ＝ 0
    变量_EB730125.文件扩展名 ＝ 0
    变量_EB730125.默认扩展名 ＝ “”
    .如果 (GetSaveFileNameA (变量_EB730125))
        .如果真 (修改当前目录 ＝ 假)
            改变目录 (变量_C9830125)
        .如果真结束
        返回 (到文本 (变量_EB730125.文件名))
    .否则
        .如果真 (修改当前目录 ＝ 假)
            改变目录 (变量_C9830125)
        .如果真结束
        返回 (“”)
    .如果结束
    

.子程序 对话框_打开颜色选择框, 整数型, 公开, 打开颜色选择框,成功返回指定的颜色值,取消或失败返回-1
    .参数 窗口句柄, 整数型, , 拥有者窗口句柄
    .局部变量 变量_04740125, 精易_颜色对话框
    .局部变量 变量_86830125, 整数型

    变量_04740125.窗口句柄 ＝ 窗口句柄
    变量_04740125.颜色数长度 ＝ 取空白文本 (15)
    变量_04740125.长度 ＝ 36
    变量_86830125 ＝ ChooseColorA (变量_04740125)
    .如果真 (变量_86830125 ＝ 1)
        返回 (变量_04740125.rgbResult)
    .如果真结束
    返回 (-1)

.子程序 对话框_打开文件多选框, 文本型, 公开, 打开多选文件对话框,可单个一个文件,将直接返回文件路径,如果选择多个文件,将以换行符分隔
    .参数 窗口句柄, 整数型, 可空, 拥有者窗口句柄
    .参数 窗口标题, 文本型, 可空, 对话框窗口标题
    .参数 过滤器, 文本型, 可空, 可为空,默认即所有文件,过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；第二个指定实际的过滤匹配符，如：“*.txt”，所有各文本串之间用“|”号隔开
    .参数 初始目录, 文本型, 可空, 可以为空。如果留空将跳转到当前目录
    .参数 修改当前目录, 逻辑型, 可空, 可以为空。默认为假，不改变当前目录。真 = 把初始目录改成当前目录。
    .局部变量 变量_13740125, OPENFILENAME
    .局部变量 变量_14740125, 字节集
    .局部变量 变量_15740125, 文本型, , "0"
    .局部变量 变量_16740125, 整数型
    .局部变量 变量_17740125, 文本型
    .局部变量 变量_18740125, 整数型
    .局部变量 变量_CE830125, 文本型

    变量_CE830125 ＝ 取当前目录 ()
    变量_18740125 ＝ 98192
    变量_13740125.结构大小 ＝ 76
    变量_13740125.窗口句柄 ＝ 窗口句柄
    变量_13740125.过滤器 ＝ 子字节集替换 (到字节集 (过滤器), { 124 }, { 0 }, , ) ＋ { 0 } ＋ { 0 }
    变量_13740125.文件名 ＝ 取空白字节集 (变量_18740125)
    变量_13740125.文件名最大长度 ＝ 变量_18740125
    变量_13740125.文件标题 ＝ 取空白文本 (变量_18740125)
    变量_13740125.文件标题最大长度 ＝ 变量_18740125
    变量_13740125.初始目录 ＝ 选择 (是否为空 (初始目录), 变量_CE830125, 初始目录)
    变量_13740125.标题 ＝ 窗口标题
    变量_13740125.标志 ＝ 524800
    
    .如果 (GetOpenFileNameA (变量_13740125))
        变量_14740125 ＝ 变量_13740125.文件名
        变量_14740125 ＝ 取字节集左边 (变量_14740125, 寻找字节集 (变量_14740125, { 0, 0 }, ) － 1)
        .如果 (寻找字节集 (变量_14740125, { 0 }, ) ≠ -1)
            变量_15740125 ＝ 分割文本 (到文本 (子字节集替换 (变量_14740125, { 0 }, { 124 }, , )), “|”, )
            .如果真 (取文本右边 (变量_15740125 [1], 1) ≠ “\”)
                变量_15740125 [1] ＝ 变量_15740125 [1] ＋ “\”
            .如果真结束
            .计次循环首 (取数组成员数 (变量_15740125) － 1, 变量_16740125)
                .如果 (取数组成员数 (变量_15740125) － 1 ≠ 变量_16740125)
                    变量_17740125 ＝ 变量_17740125 ＋ 变量_15740125 [1] ＋ 变量_15740125 [变量_16740125 ＋ 1] ＋ #换行符
                .否则
                    变量_17740125 ＝ 变量_17740125 ＋ 变量_15740125 [1] ＋ 变量_15740125 [变量_16740125 ＋ 1]
                .如果结束
                
            .计次循环尾 ()
            .如果真 (修改当前目录 ＝ 假)
                改变目录 (变量_CE830125)
            .如果真结束
            返回 (变量_17740125)
        .否则
            .如果真 (修改当前目录 ＝ 假)
                改变目录 (变量_CE830125)
            .如果真结束
            返回 (到文本 (变量_14740125))
        .如果结束
        
    .否则
        返回 (“”)
    .如果结束
    

.子程序 对话框_整理收藏夹, , 公开
    .参数 窗口句柄, 整数型, , 直接用 取窗口句柄() 命令即可

    DoOrganizeFavDlg (窗口句柄, 目录_取特定目录 (2))

.子程序 对话框_添加到收藏夹, , 公开
    .参数 窗口句柄, 整数型, , 直接用 取窗口句柄() 命令即可
    .参数 网页标题, 文本型
    .参数 网页地址, 文本型
    .局部变量 变量_25750125, 整数型
    .局部变量 变量_26750125, 文本型

    变量_26750125 ＝ 目录_取特定目录 (2)
    .如果真 (网页标题 ＝ “” 或 网页地址 ＝ “about:blank”)
        返回 ()
    .如果真结束
    SHGetSpecialFolderLocation (窗口句柄, 6, 变量_25750125)
    .如果真 (DoAddToFavDlg (窗口句柄, 变量_26750125, 256, 网页标题, 256, 变量_25750125))
        .如果真 (写配置项 (变量_26750125, “InternetShortcut”, “URL”, 网页地址))
            提示框 (“已经添加到收藏夹”, #信息图标, , 窗口句柄)
        .如果真结束
        
    .如果真结束
    DLL_CoTaskMemFree (变量_25750125)

.子程序 对话框_打开文件夹, 文本型, 公开, 打开选择文件夹对话框，成功返回文件夹路径
    .参数 标题, 文本型, 可空
    .参数 父窗口句柄, 整数型, 可空
    .局部变量 变量_FAEE0225, 字节集

    变量_FAEE0225 ＝ 对话框_打开文件夹W (编码_Ansi到Unicode (标题, ), 父窗口句柄)
    返回 (编码_Unicode到Ansi (变量_FAEE0225))

.子程序 对话框_打开文件夹W, 字节集, 公开, 打开选择文件夹对话框，成功返回文件夹路径
    .参数 标题, 字节集, 可空
    .参数 父窗口句柄, 整数型, 可空
    .局部变量 变量_F3EE0225, 字节集, , "0"
    .局部变量 变量_90F60225, 整数型

    变量_90F60225 ＝ OpenWindowsDlg (, , 真, , , 标题, 父窗口句柄, 变量_F3EE0225)
    .如果真 (变量_90F60225 ＞ 0)
        返回 (变量_F3EE0225 [1])
    .如果真结束
    返回 ({ })

.子程序 OpenWindowsDlg, 整数型, 公开, 通用对话框W
    .参数 isMultiSelect, 逻辑型, 可空, 多选
    .参数 IsSave, 逻辑型, 可空, 保存
    .参数 IsPickFolder, 逻辑型, 可空, 文件夹
    .参数 FilterSpec, 字节集, 可空, 类型
    .参数 FilterSpecIndex, 整数型, 可空, 类型索引
    .参数 SetTitle, 字节集, 可空, 标题
    .参数 hWnd, 整数型, 可空, 窗口句柄
    .参数 GetDisplayName, 字节集, 参考 数组, 获取显示名称
    .参数 InitialFolder, 字节集, 可空, 初始目录
    .参数 SetCodingOption, 整数型, 可空, 编码选项
    .参数 GetCodingItem, 整数型, 参考 可空, 获取编码选项
    .局部变量 变量_26F60225, 整数型
    .局部变量 变量_27F60225, 整数型
    .局部变量 变量_9E080325, 整数型
    .局部变量 变量_28F60225, 整数型
    .局部变量 变量_3DF60225, 字节集
    .局部变量 变量_47F60225, 整数型
    .局部变量 变量_4BF60225, 整数型
    .局部变量 变量_4FF60225, 整数型
    .局部变量 变量_42F60225, 整数型, , "0"
    .局部变量 变量_66F60225, 整数型
    .局部变量 变量_67F60225, 整数型
    .局部变量 变量_69F60225, 整数型
    .局部变量 变量_6AF60225, 整数型
    .局部变量 变量_11FB0225, 整数型
    .局部变量 变量_08FB0225, 整数型
    .局部变量 变量_A6080325, 文本型, , "0"
    .局部变量 变量_A2080325, 字节集
    .局部变量 变量_AA080325, 整数型
    .局部变量 变量_6BF60225, 整数型

    .如果真 (_WIN32_WINNT ＜ #_WIN32_WINNT_VISTA)
        输出调试文本 (#<?未知本地类型?>)
        返回 (0)
    .如果真结束
    清除数组 (GetDisplayName)
    CoInitialize (#NULL)
    .如果 (IsSave)
        变量_26F60225 ＝ DLL_CoCreateInstance3 (取指针_字节集型 (#图片资源_21F60228), #NULL, #CLSCTX_INPROC_SERVER, 取指针_字节集型 (#图片资源_22F60228), 变量_27F60225)
    .否则
        变量_26F60225 ＝ DLL_CoCreateInstance3 (取指针_字节集型 (#图片资源_23F60228), #NULL, #CLSCTX_INPROC_SERVER, 取指针_字节集型 (#图片资源_24F60228), 变量_27F60225)
    .如果结束
    .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_27F60225 ≠ #NULL)
        变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 取指针整数_ (变量_28F60225), , , , , , , , )
        .如果真 (isMultiSelect)
            变量_28F60225 ＝ 位或 (变量_28F60225, #<?未知本地类型?>)
        .如果真结束
        .如果 (IsPickFolder)
            变量_28F60225 ＝ 位或 (变量_28F60225, #<?未知本地类型?>)
        .否则
            变量_28F60225 ＝ 位或 (变量_28F60225, #<?未知本地类型?>)
        .如果结束
        变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 变量_28F60225, , , , , , , , )
        .如果真 (IsPickFolder ＝ 假)
            .如果 (FilterSpec ＝ { })
                变量_3DF60225 ＝ 编码_Ansi到Unicode (“所有文件”, ) ＋ 编码_Ansi到Unicode (“*.*”, ) ＋ { 0, 0 }
            .否则
                变量_3DF60225 ＝ FilterSpec ＋ { 0, 0 }
            .如果结束
            变量_47F60225 ＝ 取指针_字节集型 (变量_3DF60225)
            .循环判断首 ()
                变量_4BF60225 ＝ DLL_lstrlenW (变量_47F60225)
                .如果真 (变量_4BF60225 ≤ 0)
                    跳出循环 ()
                .如果真结束
                加入成员 (变量_42F60225, 变量_47F60225)
                变量_47F60225 ＝ 变量_47F60225 ＋ 变量_4BF60225 × 2 ＋ 2
            .循环判断尾 (变量_4BF60225 ＞ 0)
            变量_4FF60225 ＝ 取数组成员数 (变量_42F60225)
            .如果真 (变量_4FF60225 ％ 2 ≠ 0)
                
                SafeRelease (变量_27F60225)
                CoUninitialize ()
                返回 (0)
            .如果真结束
            变量_4FF60225 ＝ 变量_4FF60225 ÷ 2
            变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 变量_4FF60225, 取数据_通用型_数组 (变量_42F60225), , , , , , , )
            变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, FilterSpecIndex ＋ 1, , , , , , , , )
        .如果真结束
        .如果真 (SetTitle ≠ { })
            变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 取指针_字节集型 (SetTitle), , , , , , , , )
        .如果真结束
        .如果真 (InitialFolder ≠ { })
            变量_11FB0225 ＝ DLL_ILCreateFromPathW (InitialFolder)
            变量_26F60225 ＝ DLL_SHCreateShellItem (#NULL, #NULL, 变量_11FB0225, 变量_08FB0225)
            .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_08FB0225 ≠ #NULL)
                变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 变量_08FB0225, , , , , , , , )
            .如果真结束
            .如果真 (变量_11FB0225 ≠ #NULL)
                ILFree (变量_11FB0225)
            .如果真结束
            
        .如果真结束
        .如果真 (LOWORD (SetCodingOption) ＝ 1)
            变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 取指针_字节集型 (#图片资源_7D080328), 取指针整数_ (变量_9E080325), , , , , , , )
            .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_9E080325 ≠ #NULL)
                变量_A2080325 ＝ 编码_Ansi到Unicode (“编码(&E):”, )
                变量_26F60225 ＝ CallObject (变量_9E080325, #<?未知本地类型?>, 2, 取指针字节集_ (变量_A2080325), , , , , , , )
                变量_26F60225 ＝ CallObject (变量_9E080325, #<?未知本地类型?>, 1, , , , , , , , )
                变量_A6080325 ＝ { “自动检测”, “ANSI”, “UTF-16 LE”, “UTF-16 BE”, “带有 BOM 的 UTF-8”, “UTF-8” }
                变量_AA080325 ＝ 取数组成员数 (变量_A6080325)
                .计次循环首 (变量_AA080325, 变量_6BF60225)
                    变量_A2080325 ＝ 编码_Ansi到Unicode (变量_A6080325 [变量_6BF60225], )
                    变量_26F60225 ＝ CallObject (变量_9E080325, #<?未知本地类型?>, 1, 变量_6BF60225 － 1, 取指针字节集_ (变量_A2080325), , , , , , )
                .计次循环尾 ()
                变量_26F60225 ＝ CallObject (变量_9E080325, #<?未知本地类型?>, , , , , , , , , )
                变量_26F60225 ＝ CallObject (变量_9E080325, #<?未知本地类型?>, 1, HIWORD (SetCodingOption), , , , , , , )
            .如果真结束
            
        .如果真结束
        变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, hWnd, , , , , , , , )
        .如果真 (变量_08FB0225 ≠ #NULL)
            SafeRelease (变量_08FB0225)
        .如果真结束
        .如果 (isMultiSelect 且 IsSave ＝ 假)
            变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 取指针整数_ (变量_66F60225), , , , , , , , )
            .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_66F60225 ≠ #NULL)
                变量_26F60225 ＝ CallObject (变量_66F60225, #<?未知本地类型?>, 取指针整数_ (变量_67F60225), , , , , , , , )
                .计次循环首 (变量_67F60225, 变量_6BF60225)
                    变量_26F60225 ＝ CallObject (变量_66F60225, #<?未知本地类型?>, 变量_6BF60225 － 1, 取指针整数_ (变量_69F60225), , , , , , , )
                    .如果真 (变量_69F60225 ＝ #NULL)
                        到循环尾 ()
                    .如果真结束
                    变量_26F60225 ＝ CallObject (变量_69F60225, #<?未知本地类型?>, #<?未知本地类型?>, 取指针整数_ (变量_6AF60225), , , , , , , )
                    .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_6AF60225 ≠ #NULL)
                        加入成员 (GetDisplayName, 指针_到字节集W (变量_6AF60225))
                        DLL_CoTaskMemFree (变量_6AF60225)
                    .如果真结束
                    SafeRelease (变量_69F60225)
                    变量_69F60225 ＝ #NULL
                .计次循环尾 ()
                SafeRelease (变量_66F60225)
            .如果真结束
            
        .否则
            变量_26F60225 ＝ CallObject (变量_27F60225, #<?未知本地类型?>, 取指针整数_ (变量_66F60225), , , , , , , , )
            .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_66F60225 ≠ #NULL)
                变量_26F60225 ＝ CallObject (变量_66F60225, #<?未知本地类型?>, #<?未知本地类型?>, 取指针整数_ (变量_6AF60225), , , , , , , )
                .如果真 (变量_26F60225 ＝ #<?未知本地类型?> 且 变量_6AF60225 ≠ #NULL)
                    加入成员 (GetDisplayName, 指针_到字节集W (变量_6AF60225))
                    DLL_CoTaskMemFree (变量_6AF60225)
                .如果真结束
                SafeRelease (变量_66F60225)
            .如果真结束
            
        .如果结束
        .如果真 (LOWORD (SetCodingOption) ＝ 1 且 变量_9E080325 ≠ #NULL)
            变量_26F60225 ＝ CallObject (变量_9E080325, #<?未知本地类型?>, 1, 取指针整数_ (GetCodingItem), , , , , , , )
            SafeRelease (变量_9E080325)
        .如果真结束
        SafeRelease (变量_27F60225)
    .如果真结束
    CoUninitialize ()
    返回 (取数组成员数 (GetDisplayName))

.子程序 对话框_打开方式, 逻辑型, 公开, 显示“打开方式”对话框。
    .参数 父窗口的句柄, 整数型, 可空
    .参数 文件路径, 文本型

    返回 (对话框_打开方式W (父窗口的句柄, 编码_Ansi到Unicode (文件路径, )))

.子程序 对话框_打开方式W, 逻辑型, 公开, 显示“打开方式”对话框。
    .参数 父窗口的句柄, 整数型, 可空
    .参数 文件路径, 字节集
    .局部变量 变量_C7060325, 自定义_B4060341
    .局部变量 变量_C8060325, 整数型

    .如果真 (_WIN32_WINNT ＜ #_WIN32_WINNT_VISTA)
        输出调试文本 (#<?未知本地类型?>)
        返回 (假)
    .如果真结束
    变量_C7060325.成员_B5060335 ＝ 文件路径
    变量_C7060325.成员_B7060335 ＝ 位或 (#<?未知本地类型?>, #<?未知本地类型?>)
    变量_C8060325 ＝ DLL_SHOpenWithDialog (父窗口的句柄, 变量_C7060325)
    返回 (变量_C8060325 ＝ #<?未知本地类型?>)

