.版本 2

.程序集 类_环境存取, , 公开
.子程序 _初始化
    

.子程序 _销毁
    CoUninitialize ()

.子程序 读环境变量, 文本型, 公开, 返回文本，它关连于一个操作系统环境变量。成功时返回所取得的值，失败则返回空文本。
    .参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
    .参数 环境变量名称, 文本型
    .局部变量 变量_C5E20125, 对象
    .局部变量 变量_C6E20125, 对象
    .局部变量 变量_C7E20125, 文本型
    .局部变量 变量_C8E20125, 整数型

    CoInitialize (0)
    .如果真 (变量_C5E20125.创建 (“WScript.Shell”, ))
        变量_C6E20125 ＝ 变量_C5E20125.对象型方法 (“Environment”, 选择 (用户环境变量, “user”, “system”))
        变量_C7E20125 ＝ 变量_C6E20125.读文本属性 (“Item”, 环境变量名称)
        变量_C5E20125.清除 ()
        .如果真 (变量_C7E20125 ＝ “”)
            变量_C7E20125 ＝ 取空白文本 (256)
            变量_C8E20125 ＝ GetEnvironmentVariable (环境变量名称, 变量_C7E20125, 256)
            返回 (选择 (变量_C8E20125 ＞ 0, 变量_C7E20125, “”))
        .如果真结束
        返回 (变量_C7E20125)
    .如果真结束
    返回 (“”)

.子程序 写环境变量, 逻辑型, 公开, 修改或建立指定的操作系统环境变量。成功返回真，失败返回假。
    .参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
    .参数 环境变量名称, 文本型
    .参数 欲写入内容, 文本型
    .局部变量 变量_6FE00125, 对象
    .局部变量 变量_70E00125, 对象
    .局部变量 变量_F4E00125, 逻辑型

    CoInitialize (0)
    .如果真 (变量_6FE00125.创建 (“WScript.Shell”, ))
        变量_70E00125 ＝ 变量_6FE00125.对象型方法 (“Environment”, 选择 (用户环境变量, “user”, “system”))
        变量_F4E00125 ＝ 变量_70E00125.写属性 (“Item”, 环境变量名称, 欲写入内容)
        变量_6FE00125.清除 ()
        返回 (变量_F4E00125)
    .如果真结束
    返回 (假)

.子程序 删除环境变量, 逻辑型, 公开, 删除系统环境变量，成功返回真，失败返回假。
    .参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
    .参数 环境变量名称, 文本型
    .局部变量 变量_75E00125, 对象
    .局部变量 变量_76E00125, 对象
    .局部变量 变量_FBE00125, 逻辑型

    CoInitialize (0)
    .如果真 (变量_75E00125.创建 (“WScript.Shell”, ))
        变量_76E00125 ＝ 变量_75E00125.对象型方法 (“Environment”, 选择 (用户环境变量, “user”, “system”))
        变量_FBE00125 ＝ 变量_76E00125.数值方法 (“Remove”, 环境变量名称) ＝ 0
        变量_76E00125.清除 ()
        变量_75E00125.清除 ()
        返回 (变量_FBE00125)
    .如果真结束
    返回 (假)

.子程序 取环境变量数, 整数型, 公开, 返回当前用户环境变量数量，失败返回-1。
    .参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
    .局部变量 变量_7AE00125, 对象
    .局部变量 变量_7BE00125, 对象
    .局部变量 变量_7CE00125, 整数型

    CoInitialize (0)
    .如果真 (变量_7AE00125.创建 (“WScript.Shell”, ))
        变量_7BE00125 ＝ 变量_7AE00125.对象型方法 (“Environment”, 选择 (用户环境变量, “user”, “system”))
        变量_7CE00125 ＝ 变量_7BE00125.读数值属性 (“length”, )
        变量_7BE00125.清除 ()
        变量_7AE00125.清除 ()
        返回 (变量_7CE00125)
    .如果真结束
    返回 (-1)

.子程序 枚举环境变量, 整数型, 公开, 成功返回环境系统或当前用户环境变量数量失败返回-1。
    .参数 用户环境变量, 逻辑型, 可空, 真为当前用户环境变量，假为系统环境变量。
    .参数 环境变量列表, 文本型, 数组, 变量储存返回值。
    .局部变量 变量_86E00125, 对象
    .局部变量 变量_87E00125, 对象
    .局部变量 变量_8AE00125, 对象
    .局部变量 变量_8CE00125, 整数型
    .局部变量 变量_8DE00125, 变体型
    .局部变量 变量_8EE00125, 整数型

    CoInitialize (0)
    .如果真 (变量_86E00125.创建 (“WScript.Shell”, ))
        变量_87E00125 ＝ 变量_86E00125.对象型方法 (“Environment”, 选择 (用户环境变量, “user”, “system”))
        变量_8AE00125 ＝ 变量_87E00125.对象型方法 (“_NewEnum”, )
        .循环判断首 ()
            变量_8CE00125 ＝ CallObject (取对象指针 (变量_8AE00125), 3, 1, 取变体型指针 (变量_8DE00125), 取指针整数_ (变量_8EE00125), , , , , , )
            .如果真 (变量_8EE00125 ＝ 1)
                加入成员 (环境变量列表, 变量_8DE00125.取文本 ())
            .如果真结束
            处理事件 ()
        .循环判断尾 (变量_8CE00125 ＝ 0)
        变量_87E00125.清除 ()
        变量_86E00125.清除 ()
        返回 (取数组成员数 (环境变量列表))
    .如果真结束
    返回 (-1)

.子程序 取命令行, 整数型, 公开, 本命令可以取出在启动易程序时附加在其可执行文件名后面的所有以空格分隔的命令行文本段
    .参数 命令行数组, 文本型, 数组, 存放被取回命令行文本的数组变量,本变量数组内被顺序填入在启动易程序时附加在其可执行文件名后面的以空格分隔的命令行文本段
    .局部变量 变量_26AD0225, 整数型
    .局部变量 变量_27AD0225, 整数型
    .局部变量 变量_28AD0225, 整数型, , "0"
    .局部变量 变量_29AD0225, 整数型
    .局部变量 变量_2AAD0225, 整数型

    清除数组 (命令行数组)
    变量_26AD0225 ＝ DLL_CommandLineToArgvW (DLL_GetCommandLineW (), 变量_27AD0225)
    .如果真 (变量_27AD0225 ＝ 1)
        返回 (0)
    .如果真结束
    重定义数组 (变量_28AD0225, 假, 变量_27AD0225)
    变量_29AD0225 ＝ lstrlen (变量_26AD0225) × 2
    RtlMoveMemory (取数据_通用型_数组 (变量_28AD0225), 变量_26AD0225, 变量_29AD0225)
    .变量循环首 (2, 变量_27AD0225, 1, 变量_2AAD0225)
        加入成员 (命令行数组, 编码_Unicode到Ansi (指针到字节集 (变量_28AD0225 [变量_2AAD0225], lstrlen (变量_28AD0225 [变量_2AAD0225]) × 2)))
    .变量循环尾 ()
    LocalFree (变量_26AD0225)
    返回 (取数组成员数 (命令行数组))
    

.子程序 取运行目录, 文本型, 公开, 取当前被执行的易程序文件所处的目录。
    .局部变量 变量_D8E00125, 文本型
    .局部变量 变量_DAE00125, 整数型

    变量_D8E00125 ＝ 取空白文本 (255)
    变量_DAE00125 ＝ GetCurrentDirectory (255, 变量_D8E00125)
    返回 (选择 (变量_DAE00125 ＞ 0, 变量_D8E00125, “”))

.子程序 取执行文件名, 文本型, 公开, 取当前被执行的易程序文件的名称。
    .参数 是否带路径, 逻辑型, 可空
    .局部变量 变量_DCE00125, 文本型
    .局部变量 变量_E0E00125, 整数型

    变量_DCE00125 ＝ 取空白文本 (256)
    变量_E0E00125 ＝ GetModuleFileNameExA (GetCurrentProcess (), GetModuleHandleA (字符 (0)), 变量_DCE00125, 256)
    .如果真 (变量_E0E00125 ＞ 0)
        .如果 (是否带路径)
            返回 (变量_DCE00125)
        .否则
            返回 (文件_取文件名 (变量_DCE00125, 真))
        .如果结束
        
    .如果真结束
    返回 (“”)

.子程序 取CMD路径, 文本型, 公开
    .局部变量 变量_EBE00125, 文本型
    .局部变量 变量_EFE00125, 整数型

    变量_EBE00125 ＝ 取空白文本 (256)
    变量_EFE00125 ＝ GetEnvironmentVariable (“COMSPEC”, 变量_EBE00125, 256)
    返回 (选择 (变量_EFE00125 ＞ 0, 变量_EBE00125, “”))

