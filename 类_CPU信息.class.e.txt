.版本 2

.程序集 类_CPU信息, , 公开
.程序集变量 InitializeSecurity, 逻辑型
.程序集变量 WbemLocator, 整数型
.程序集变量 ppNamespace, 整数型
.程序集变量 pEnumerator, 整数型

.子程序 _初始化
    

.子程序 _销毁
    

.子程序 Init, 逻辑型
    .参数 变量_42D40125, 文本型
    .参数 变量_43D40125, 文本型
    .局部变量 变量_44D40125, GUID
    .局部变量 变量_45D40125, GUID
    .局部变量 变量_46D40125, 整数型

    CoUninitialize ()
    DLL_CoInitializeEx (0, 0)
    .如果真 (InitializeSecurity ＝ 假)
        DLL_CoInitializeSecurity (0, -1, 0, 0, 0, 3, 0, 0, 0)
        InitializeSecurity ＝ 真
    .如果真结束
    变量_44D40125 ＝ COM_StringToCLSID (“{4590f811-1d3a-11d0-891f-00aa004b2e24}”)
    变量_45D40125 ＝ COM_StringtoIID (“{dc12a687-737f-11cf-884d-00aa004b2e24}”)
    变量_46D40125 ＝ DLL_CoCreateInstance2 (变量_44D40125, 0, 1, 变量_45D40125, WbemLocator)
    .如果真 (变量_46D40125 ≠ 0)
        CoUninitialize ()
        返回 (假)
    .如果真结束
    变量_46D40125 ＝ CallObject (WbemLocator, 3, COM_bstr_t (变量_42D40125), 0, 0, 0, 0, 0, 0, 取指针_通用型 (ppNamespace), )
    .如果真 (变量_46D40125 ≠ 0)
        CoUninitialize ()
        返回 (假)
    .如果真结束
    变量_46D40125 ＝ DLL_CoSetProxyBlanket (ppNamespace, 10, 0, 0, 3, 3, 0, 0)
    .如果真 (变量_46D40125 ≠ 0)
        CoUninitialize ()
        返回 (假)
    .如果真结束
    变量_46D40125 ＝ CallObject (ppNamespace, 20, COM_bstr_t (“WQL”), COM_bstr_t (变量_43D40125), 位或 (32, 16), 0, 取指针_通用型 (pEnumerator), , , , )
    .如果真 (变量_46D40125 ≠ 0)
        CoUninitialize ()
        返回 (假)
    .如果真结束
    返回 (真)

.子程序 Uninit
    COM_Release (WbemLocator)
    COM_Release (pEnumerator)
    COM_Release (ppNamespace)
    CoUninitialize ()

.子程序 取地址宽度, 整数型, 公开, 失败返回-1。
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_BCD40125, 整数型
    .局部变量 变量_C1D40125, 整数型
    .局部变量 变量_C2D40125, 整数型
    .局部变量 变量_C3D40125, 整数型
    .局部变量 变量_C4D40125, 整数型
    .局部变量 变量_D4D40125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_BCD40125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_C3D40125)
        变量_D4D40125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_C1D40125), 取指针_通用型 (变量_C2D40125), , , , , )
        .如果 (变量_C2D40125 ＝ 1)
            .如果真 (变量_C3D40125 ＝ CPU索引)
                CallObject (变量_C1D40125, 4, COM_bstr_t (“AddressWidth”), 0, 变量_BCD40125, 0, 0, , , , )
                变量_C4D40125 ＝ 取字节集数据 (指针到字节集 (变量_BCD40125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_C1D40125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_C4D40125)

.子程序 取架构, 整数型, 公开, 失败返回-1。返回值：0=x86；1=MiPs；2=Alpha；3=PowerPC；5=ARM；6=Itanium-based systems；9=x64
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_11D50125, 整数型
    .局部变量 变量_12D50125, 整数型
    .局部变量 变量_13D50125, 整数型
    .局部变量 变量_14D50125, 整数型
    .局部变量 变量_15D50125, 整数型
    .局部变量 变量_16D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_11D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_14D50125)
        变量_16D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_12D50125), 取指针_通用型 (变量_13D50125), , , , , )
        .如果 (变量_13D50125 ＝ 1)
            .如果真 (变量_14D50125 ＝ CPU索引)
                CallObject (变量_12D50125, 4, COM_bstr_t (“Architecture”), 0, 变量_11D50125, 0, 0, , , , )
                变量_15D50125 ＝ 取字节集数据 (指针到字节集 (变量_11D50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_12D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_15D50125)

.子程序 取状态, 整数型, 公开, 失败返回-1。返回值；0=未知；1=启用；2=用户通过CPU禁用BIOS设置；3=CPU禁用BIOS(POST错误)；4=CPU空闲。
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_3CD50125, 整数型
    .局部变量 变量_3DD50125, 整数型
    .局部变量 变量_3ED50125, 整数型
    .局部变量 变量_3FD50125, 整数型
    .局部变量 变量_40D50125, 整数型
    .局部变量 变量_41D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_3CD50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_3FD50125)
        变量_41D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_3DD50125), 取指针_通用型 (变量_3ED50125), , , , , )
        .如果 (变量_3ED50125 ＝ 1)
            .如果真 (变量_3FD50125 ＝ CPU索引)
                CallObject (变量_3DD50125, 4, COM_bstr_t (“CpuStatus”), 0, 变量_3CD50125, 0, 0, , , , )
                变量_40D50125 ＝ 取字节集数据 (指针到字节集 (变量_3CD50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_3DD50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_40D50125)

.子程序 取当前时钟速度, 整数型, 公开, 失败返回-1。
    .参数 CPU索引, 整数型, 可空
    .局部变量 变量_25D50125, 整数型
    .局部变量 变量_26D50125, 整数型
    .局部变量 变量_27D50125, 整数型
    .局部变量 变量_28D50125, 整数型
    .局部变量 变量_29D50125, 整数型
    .局部变量 变量_2AD50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_25D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_28D50125)
        变量_2AD50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_26D50125), 取指针_通用型 (变量_27D50125), , , , , )
        .如果 (变量_27D50125 ＝ 1)
            .如果真 (变量_28D50125 ＝ CPU索引)
                CallObject (变量_26D50125, 4, COM_bstr_t (“CurrentClockSpeed”), 0, 变量_25D50125, 0, 0, , , , )
                变量_29D50125 ＝ 取字节集数据 (指针到字节集 (变量_25D50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_26D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_29D50125)

.子程序 取当前电压, 整数型, 公开, 失败返回-1。
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_F9D40125, 整数型
    .局部变量 变量_FAD40125, 整数型
    .局部变量 变量_FBD40125, 整数型
    .局部变量 变量_FCD40125, 整数型
    .局部变量 变量_FDD40125, 整数型
    .局部变量 变量_FED40125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_F9D40125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_FCD40125)
        变量_FED40125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_FAD40125), 取指针_通用型 (变量_FBD40125), , , , , )
        .如果 (变量_FBD40125 ＝ 1)
            .如果真 (变量_FCD40125 ＝ CPU索引)
                CallObject (变量_FAD40125, 4, COM_bstr_t (“CurrentVoltage”), 0, 变量_F9D40125, 0, 0, , , , )
                变量_FDD40125 ＝ 取字节集数据 (指针到字节集 (变量_F9D40125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_FAD40125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_FDD40125)
    

.子程序 取数据宽度, 整数型, 公开, 失败返回-1。
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_53D50125, 整数型
    .局部变量 变量_54D50125, 整数型
    .局部变量 变量_55D50125, 整数型
    .局部变量 变量_56D50125, 整数型
    .局部变量 变量_57D50125, 整数型
    .局部变量 变量_58D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_53D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_56D50125)
        变量_58D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_54D50125), 取指针_通用型 (变量_55D50125), , , , , )
        .如果 (变量_55D50125 ＝ 1)
            .如果真 (变量_56D50125 ＝ CPU索引)
                CallObject (变量_54D50125, 4, COM_bstr_t (“DataWidth”), 0, 变量_53D50125, 0, 0, , , , )
                变量_57D50125 ＝ 取字节集数据 (指针到字节集 (变量_53D50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_54D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_57D50125)

.子程序 取描述, 文本型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_68D50125, 整数型
    .局部变量 变量_69D50125, 整数型
    .局部变量 变量_6AD50125, 整数型
    .局部变量 变量_6BD50125, 整数型
    .局部变量 变量_6CD50125, 整数型
    .局部变量 变量_7AD50125, 文本型
    .局部变量 变量_6DD50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (“”)
    .如果真结束
    变量_68D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_6BD50125)
        变量_6DD50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_69D50125), 取指针_通用型 (变量_6AD50125), , , , , )
        .如果 (变量_6AD50125 ＝ 1)
            .如果真 (变量_6BD50125 ＝ CPU索引)
                CallObject (变量_69D50125, 4, COM_bstr_t (“Description”), 0, 变量_68D50125, 0, 0, , , , )
                变量_6CD50125 ＝ 取字节集数据 (指针到字节集 (变量_68D50125 ＋ 8, 4), #整数型, )
                变量_7AD50125 ＝ 编码_Unicode到Ansi (指针到字节集 (变量_6CD50125, lstrlen (变量_6CD50125) × 3))
            .如果真结束
            SafeRelease (变量_69D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_7AD50125)

.子程序 取设备编号, 文本型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_84D50125, 整数型
    .局部变量 变量_85D50125, 整数型
    .局部变量 变量_86D50125, 整数型
    .局部变量 变量_87D50125, 整数型
    .局部变量 变量_88D50125, 整数型
    .局部变量 变量_89D50125, 文本型
    .局部变量 变量_8AD50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (“”)
    .如果真结束
    变量_84D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_87D50125)
        变量_8AD50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_85D50125), 取指针_通用型 (变量_86D50125), , , , , )
        .如果 (变量_86D50125 ＝ 1)
            .如果真 (变量_87D50125 ＝ CPU索引)
                CallObject (变量_85D50125, 4, COM_bstr_t (“DeviceID”), 0, 变量_84D50125, 0, 0, , , , )
                变量_88D50125 ＝ 取字节集数据 (指针到字节集 (变量_84D50125 ＋ 8, 4), #整数型, )
                变量_89D50125 ＝ 编码_Unicode到Ansi (指针到字节集 (变量_88D50125, lstrlen (变量_88D50125) × 3))
            .如果真结束
            SafeRelease (变量_85D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_89D50125)

.子程序 取二级缓存, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_9ED50125, 整数型
    .局部变量 变量_9FD50125, 整数型
    .局部变量 变量_A0D50125, 整数型
    .局部变量 变量_A1D50125, 整数型
    .局部变量 变量_A2D50125, 整数型
    .局部变量 变量_A3D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_9ED50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_A1D50125)
        变量_A3D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_9FD50125), 取指针_通用型 (变量_A0D50125), , , , , )
        .如果 (变量_A0D50125 ＝ 1)
            .如果真 (变量_A1D50125 ＝ CPU索引)
                CallObject (变量_9FD50125, 4, COM_bstr_t (“L2CacheSize”), 0, 变量_9ED50125, 0, 0, , , , )
                变量_A2D50125 ＝ 取字节集数据 (指针到字节集 (变量_9ED50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_9FD50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_A2D50125)

.子程序 取三级缓存, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_B4D50125, 整数型
    .局部变量 变量_B5D50125, 整数型
    .局部变量 变量_B6D50125, 整数型
    .局部变量 变量_B7D50125, 整数型
    .局部变量 变量_B8D50125, 整数型
    .局部变量 变量_B9D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_B4D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_B7D50125)
        变量_B9D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_B5D50125), 取指针_通用型 (变量_B6D50125), , , , , )
        .如果 (变量_B6D50125 ＝ 1)
            .如果真 (变量_B7D50125 ＝ CPU索引)
                CallObject (变量_B5D50125, 4, COM_bstr_t (“L3CacheSize”), 0, 变量_B4D50125, 0, 0, , , , )
                变量_B8D50125 ＝ 取字节集数据 (指针到字节集 (变量_B4D50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_B5D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_B8D50125)

.子程序 取占用率, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_CCD50125, 整数型
    .局部变量 变量_CDD50125, 整数型
    .局部变量 变量_CED50125, 整数型
    .局部变量 变量_CFD50125, 整数型
    .局部变量 变量_D0D50125, 整数型
    .局部变量 变量_D1D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_CCD50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_CFD50125)
        变量_D1D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_CDD50125), 取指针_通用型 (变量_CED50125), , , , , )
        .如果 (变量_CED50125 ＝ 1)
            .如果真 (变量_CFD50125 ＝ CPU索引)
                CallObject (变量_CDD50125, 4, COM_bstr_t (“LoadPercentage”), 0, 变量_CCD50125, 0, 0, , , , )
                变量_D0D50125 ＝ 取字节集数据 (指针到字节集 (变量_CCD50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_CDD50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_D0D50125)

.子程序 取制造商, 文本型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_E0D50125, 整数型
    .局部变量 变量_E1D50125, 整数型
    .局部变量 变量_E2D50125, 整数型
    .局部变量 变量_E3D50125, 整数型
    .局部变量 变量_E4D50125, 整数型
    .局部变量 变量_E5D50125, 文本型
    .局部变量 变量_E6D50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (“”)
    .如果真结束
    变量_E0D50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_E3D50125)
        变量_E6D50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_E1D50125), 取指针_通用型 (变量_E2D50125), , , , , )
        .如果 (变量_E2D50125 ＝ 1)
            .如果真 (变量_E3D50125 ＝ CPU索引)
                CallObject (变量_E1D50125, 4, COM_bstr_t (“Manufacturer”), 0, 变量_E0D50125, 0, 0, , , , )
                变量_E4D50125 ＝ 取字节集数据 (指针到字节集 (变量_E0D50125 ＋ 8, 4), #整数型, )
                变量_E5D50125 ＝ 编码_Unicode到Ansi (指针到字节集 (变量_E4D50125, lstrlen (变量_E4D50125) × 3))
            .如果真结束
            SafeRelease (变量_E1D50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_E5D50125)

.子程序 最大时钟速度, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_FAD50125, 整数型
    .局部变量 变量_FBD50125, 整数型
    .局部变量 变量_FCD50125, 整数型
    .局部变量 变量_FDD50125, 整数型
    .局部变量 变量_FED50125, 整数型
    .局部变量 变量_FFD50125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_FAD50125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_FDD50125)
        变量_FFD50125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_FBD50125), 取指针_通用型 (变量_FCD50125), , , , , )
        .如果 (变量_FCD50125 ＝ 1)
            .如果真 (变量_FDD50125 ＝ CPU索引)
                CallObject (变量_FBD50125, 4, COM_bstr_t (“MaxClockSpeed”), 0, 变量_FAD50125, 0, 0, , , , )
                变量_FED50125 ＝ 取字节集数据 (指针到字节集 (变量_FAD50125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_FBD50125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_FED50125)

.子程序 取名称, 文本型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_0ED60125, 整数型
    .局部变量 变量_0FD60125, 整数型
    .局部变量 变量_10D60125, 整数型
    .局部变量 变量_11D60125, 整数型
    .局部变量 变量_12D60125, 整数型
    .局部变量 变量_13D60125, 文本型
    .局部变量 变量_14D60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (“”)
    .如果真结束
    变量_0ED60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_11D60125)
        变量_14D60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_0FD60125), 取指针_通用型 (变量_10D60125), , , , , )
        .如果 (变量_10D60125 ＝ 1)
            .如果真 (变量_11D60125 ＝ CPU索引)
                CallObject (变量_0FD60125, 4, COM_bstr_t (“Name”), 0, 变量_0ED60125, 0, 0, , , , )
                变量_12D60125 ＝ 取字节集数据 (指针到字节集 (变量_0ED60125 ＋ 8, 4), #整数型, )
                变量_13D60125 ＝ 编码_Unicode到Ansi (指针到字节集 (变量_12D60125, lstrlen (变量_12D60125) × 3))
            .如果真结束
            SafeRelease (变量_0FD60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_13D60125)

.子程序 取型号, 文本型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_26D60125, 整数型
    .局部变量 变量_27D60125, 整数型
    .局部变量 变量_28D60125, 整数型
    .局部变量 变量_29D60125, 整数型
    .局部变量 变量_2AD60125, 整数型
    .局部变量 变量_2BD60125, 文本型
    .局部变量 变量_2CD60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (“”)
    .如果真结束
    变量_26D60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_29D60125)
        变量_2CD60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_27D60125), 取指针_通用型 (变量_28D60125), , , , , )
        .如果 (变量_28D60125 ＝ 1)
            .如果真 (变量_29D60125 ＝ CPU索引)
                CallObject (变量_27D60125, 4, COM_bstr_t (“Name”), 0, 变量_26D60125, 0, 0, , , , )
                变量_2AD60125 ＝ 取字节集数据 (指针到字节集 (变量_26D60125 ＋ 8, 4), #整数型, )
                变量_2BD60125 ＝ 编码_Unicode到Ansi (指针到字节集 (变量_2AD60125, lstrlen (变量_2AD60125) × 3))
            .如果真结束
            SafeRelease (变量_27D60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_2BD60125)

.子程序 取核心数, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_40D60125, 整数型
    .局部变量 变量_41D60125, 整数型
    .局部变量 变量_42D60125, 整数型
    .局部变量 变量_43D60125, 整数型
    .局部变量 变量_44D60125, 整数型
    .局部变量 变量_45D60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_40D60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_43D60125)
        变量_45D60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_41D60125), 取指针_通用型 (变量_42D60125), , , , , )
        .如果 (变量_42D60125 ＝ 1)
            .如果真 (变量_43D60125 ＝ CPU索引)
                CallObject (变量_41D60125, 4, COM_bstr_t (“NumberOfCores”), 0, 变量_40D60125, 0, 0, , , , )
                变量_44D60125 ＝ 取字节集数据 (指针到字节集 (变量_40D60125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_41D60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_44D60125)

.子程序 取线程数, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_55D60125, 整数型
    .局部变量 变量_56D60125, 整数型
    .局部变量 变量_57D60125, 整数型
    .局部变量 变量_58D60125, 整数型
    .局部变量 变量_59D60125, 整数型
    .局部变量 变量_5AD60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_55D60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_58D60125)
        变量_5AD60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_56D60125), 取指针_通用型 (变量_57D60125), , , , , )
        .如果 (变量_57D60125 ＝ 1)
            .如果真 (变量_58D60125 ＝ CPU索引)
                CallObject (变量_56D60125, 4, COM_bstr_t (“NumberOfLogicalProcessors”), 0, 变量_55D60125, 0, 0, , , , )
                变量_59D60125 ＝ 取字节集数据 (指针到字节集 (变量_55D60125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_56D60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_59D60125)

.子程序 取序列号, 文本型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_69D60125, 整数型
    .局部变量 变量_6AD60125, 整数型
    .局部变量 变量_6BD60125, 整数型
    .局部变量 变量_6CD60125, 整数型
    .局部变量 变量_6DD60125, 整数型
    .局部变量 变量_6ED60125, 文本型
    .局部变量 变量_6FD60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (“”)
    .如果真结束
    变量_69D60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_6CD60125)
        变量_6FD60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_6AD60125), 取指针_通用型 (变量_6BD60125), , , , , )
        .如果 (变量_6BD60125 ＝ 1)
            .如果真 (变量_6CD60125 ＝ CPU索引)
                CallObject (变量_6AD60125, 4, COM_bstr_t (“ProcessorId”), 0, 变量_69D60125, 0, 0, , , , )
                变量_6DD60125 ＝ 取字节集数据 (指针到字节集 (变量_69D60125 ＋ 8, 4), #整数型, )
                变量_6ED60125 ＝ 编码_Unicode到Ansi (指针到字节集 (变量_6DD60125, lstrlen (变量_6DD60125) × 3))
            .如果真结束
            SafeRelease (变量_6AD60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_6ED60125)

.子程序 取处理器类型, 整数型, 公开, 失败返回-1。返回值；1=其它；2=未知；3=中央处理器；4=数学处理器；5=DSP处理器；6=视频处理器
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_81D60125, 整数型
    .局部变量 变量_82D60125, 整数型
    .局部变量 变量_83D60125, 整数型
    .局部变量 变量_84D60125, 整数型
    .局部变量 变量_85D60125, 整数型
    .局部变量 变量_86D60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_81D60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_84D60125)
        变量_86D60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_82D60125), 取指针_通用型 (变量_83D60125), , , , , )
        .如果 (变量_83D60125 ＝ 1)
            .如果真 (变量_84D60125 ＝ CPU索引)
                CallObject (变量_82D60125, 4, COM_bstr_t (“ProcessorType”), 0, 变量_81D60125, 0, 0, , , , )
                变量_85D60125 ＝ 取字节集数据 (指针到字节集 (变量_81D60125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_82D60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_85D60125)

.子程序 取修订号, 整数型, 公开
    .参数 CPU索引, 整数型, 可空, 可为空，如有多个CPU默认取第1个。
    .局部变量 变量_98D60125, 整数型
    .局部变量 变量_99D60125, 整数型
    .局部变量 变量_9AD60125, 整数型
    .局部变量 变量_9BD60125, 整数型
    .局部变量 变量_9CD60125, 整数型
    .局部变量 变量_9DD60125, 整数型

    .如果真 (Init (“root\CIMV2”, “Select * From Win32_Processor”) ＝ 假)
        返回 (-1)
    .如果真结束
    变量_98D60125 ＝ COM_bstr_t (取空白文本 (16))
    CPU索引 ＝ 选择 (是否为空 (CPU索引), 1, CPU索引)
    .计次循环首 (10, 变量_9BD60125)
        变量_9DD60125 ＝ CallObject (pEnumerator, 4, 4294967295, 1, 取指针_通用型 (变量_99D60125), 取指针_通用型 (变量_9AD60125), , , , , )
        .如果 (变量_9AD60125 ＝ 1)
            .如果真 (变量_9BD60125 ＝ CPU索引)
                CallObject (变量_99D60125, 4, COM_bstr_t (“Revision”), 0, 变量_98D60125, 0, 0, , , , )
                变量_9CD60125 ＝ 取字节集数据 (指针到字节集 (变量_98D60125 ＋ 8, 4), #整数型, )
            .如果真结束
            SafeRelease (变量_99D60125)
        .否则
            跳出循环 ()
        .如果结束
        处理事件 ()
    .计次循环尾 ()
    Uninit ()
    返回 (变量_9CD60125)

