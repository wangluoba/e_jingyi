.版本 2

.程序集 类_任务栏, , 公开, http://msdn.microsoft.com/en-us/library/windows/desktop/bb774652(v=vs.85).aspx
.程序集变量 ppv, 整数型
.程序集变量 objShell, 整数型
.程序集变量 HotKeyStatus, 逻辑型

.子程序 _初始化
    .局部变量 变量_D6DE0125, GUID
    .局部变量 变量_D7DE0125, GUID
    .局部变量 变量_C3DF0125, GUID
    .局部变量 变量_C6DF0125, GUID

    变量_D6DE0125 ＝ COM_StringToCLSID (“{56FDF344-FD6D-11d0-958A-006097C9A090}”)
    变量_D7DE0125 ＝ COM_StringtoIID (“{56FDF342-FD6D-11d0-958A-006097C9A090}”)
    .如果真 (DLL_CoCreateInstance2 (变量_D6DE0125, 0, 1, 变量_D7DE0125, ppv) ＝ 0)
        CallObject (ppv, 3, , , , , , , , , )
    .如果真结束
    变量_C3DF0125 ＝ COM_StringToCLSID (“{13709620-C279-11CE-A49E-444553540000}”)
    变量_C6DF0125 ＝ COM_StringtoIID (“{866738b9-6cf2-4de8-8767-f794ebe74f4e}”)
    DLL_CoCreateInstance2 (变量_C3DF0125, 0, 1, 变量_C6DF0125, objShell)

.子程序 _销毁
    .如果真 (ppv ≠ 0)
        COM_Release (ppv)
    .如果真结束
    .如果真 (objShell ≠ 0)
        COM_Release (objShell)
    .如果真结束
    

.子程序 显示图标, 逻辑型, 公开
    .参数 窗口句柄, 整数型

    返回 (CallObject (ppv, 4, 窗口句柄, , , , , , , , ) ＝ 0)

.子程序 隐藏图标, 逻辑型, 公开
    .参数 窗口句柄, 整数型

    返回 (CallObject (ppv, 5, 窗口句柄, , , , , , , , ) ＝ 0)

.子程序 激活图标, 逻辑型, 公开, 激活任务栏指定图标，并非激活窗口。
    .参数 窗口句柄, 整数型

    返回 (CallObject (ppv, 6, 窗口句柄, , , , , , , , ) ＝ 0)

.子程序 取消激活, 逻辑型, 公开, 取消指定激活指定图标。
    .参数 窗口句柄, 整数型

    返回 (CallObject (ppv, 7, 窗口句柄, , , , , , , , ) ＝ 0)

.子程序 注册热键, , 公开
    .参数 功能键, 整数型, , 1=Alt键；2=Ctrl键；4=Shift键；8=Win键，组合则相加。
    .参数 主热键, 整数型, , 键代码，可以使用易语言中的键代码常量。
    .参数 执行事件, 子程序指针
    .局部变量 变量_E7DE0125, 逻辑型
    .局部变量 变量_E8DE0125, 自定义_FBB90141

    HotKeyStatus ＝ 假
    .如果真 (RegisterHotKey (0, 1268, 功能键, 主热键))
        .判断循环首 (GetMessageA (变量_E8DE0125, 0, 0, 0))
            .判断开始 (变量_E8DE0125.成员_FDB90135 ＝ 786)
                程序_Call (到整数 (执行事件))
            .判断 (HotKeyStatus)
                跳出循环 ()
            .默认
                
            .判断结束
            DLL_TranslateMessage (变量_E8DE0125)
            DLL_DispatchMessageA (变量_E8DE0125)
        .判断循环尾 ()
    .如果真结束
    

.子程序 取消热键, 逻辑型, 公开
    .如果真 (UnregisterHotKey (0, 1268))
        HotKeyStatus ＝ 真
        返回 (真)
    .如果真结束
    返回 (假)

.子程序 取句柄, 整数型, 公开
    返回 (FindWindowA (“Shell_TrayWnd”, 字符 (0)))

.子程序 隐藏, 逻辑型, 公开
    返回 (ShowWindow (取句柄 (), 0))

.子程序 显示, 逻辑型, 公开
    返回 (ShowWindow (取句柄 (), 1))

.子程序 取高度, 整数型, 公开
    .局部变量 变量_07DF0125, 自定义_8F260141
    .局部变量 变量_08DF0125, 整数型
    .局部变量 变量_09DF0125, 整数型

    SHAppBarMessage (5, 变量_07DF0125)
    变量_08DF0125 ＝ SHAppBarMessage (4, 变量_07DF0125)
    系统_取屏幕分辨率 (, , , 变量_09DF0125, )
    返回 (变量_09DF0125 － 变量_07DF0125.成员_94260135.顶边)

.子程序 监视全屏, , 公开
    .参数 窗口句柄, 整数型, , 第三方窗口无效，易中用 取窗口句柄()
    .参数 处理程序, 子程序指针, , 参数1；事件类型【整数型】输出值：1全屏；0退出全屏
    .局部变量 变量_1EDF0125, 自定义_8F260141
    .局部变量 变量_2EDF0125, 整数型

    变量_1EDF0125.成员_90260135 ＝ 36
    变量_1EDF0125.成员_91260135 ＝ 窗口句柄
    变量_1EDF0125.成员_92260135 ＝ 11286
    SetPropA (变量_1EDF0125.成员_91260135, “Callback AppBar”, 到整数 (处理程序))
    SHAppBarMessage (0, 变量_1EDF0125)
    变量_2EDF0125 ＝ 类回调_取类地址 (14, 4, , )
    SetPropA (变量_1EDF0125.成员_91260135, “Callback Proc”, SetWindowLongA (变量_1EDF0125.成员_91260135, -4, 变量_2EDF0125))

.子程序 WindowProc, 整数型
    .参数 变量_26DF0125, 整数型
    .参数 变量_27DF0125, 整数型
    .参数 变量_28DF0125, 整数型
    .参数 变量_29DF0125, 整数型
    .局部变量 变量_31DF0125, 整数型
    .局部变量 变量_32DF0125, 整数型

    .判断开始 (变量_27DF0125 ＝ 11286)
        .如果真 (变量_28DF0125 ＝ 2)
            变量_31DF0125 ＝ GetPropA (变量_26DF0125, “Callback AppBar”)
            程序_Call (变量_31DF0125, 变量_29DF0125)
        .如果真结束
        
    .默认
        
    .判断结束
    变量_32DF0125 ＝ GetPropA (变量_26DF0125, “Callback Proc”)
    返回 (CallWindowProcA (变量_32DF0125, 变量_26DF0125, 变量_27DF0125, 变量_28DF0125, 变量_29DF0125))

.子程序 是否隐藏, 逻辑型, 公开, 判断任务栏是否隐藏状态。
    .局部变量 变量_5CDF0125, 自定义_8F260141
    .局部变量 变量_5DDF0125, 整数型

    变量_5DDF0125 ＝ SHAppBarMessage (4, 变量_5CDF0125)
    返回 (选择 (变量_5DDF0125 ＝ 0 或 变量_5DDF0125 ＝ 2, 假, 真))

.子程序 自动隐藏, 逻辑型, 公开, 设置任务栏自动隐藏，成功返回真，失败返回假。
    .参数 启用, 逻辑型
    .局部变量 变量_65DF0125, 自定义_8F260141
    .局部变量 变量_66DF0125, 整数型

    变量_65DF0125.成员_95260135 ＝ 选择 (启用, 1, 0)
    变量_66DF0125 ＝ SHAppBarMessage (10, 变量_65DF0125)
    返回 (变量_66DF0125 ＝ 1)

.子程序 取矩形, 整数型, 公开, 成功返回1，失败返回错误代码。
    .参数 矩形, 精易_矩形, , 变量储存返回值。
    .局部变量 变量_71DF0125, 自定义_8F260141
    .局部变量 变量_72DF0125, 整数型

    变量_72DF0125 ＝ SHAppBarMessage (5, 变量_71DF0125)
    矩形 ＝ 变量_71DF0125.成员_94260135
    返回 (变量_72DF0125)

.子程序 取位置, 整数型, 公开, 返回任务栏位置，返回值：0=左部；1=顶部；2=右部；3=底部
    .局部变量 变量_95DF0125, 自定义_8F260141

    SHAppBarMessage (5, 变量_95DF0125)
    返回 (变量_95DF0125.成员_93260135)

.子程序 全部最小化, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 14, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 撤销全部最小化, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 15, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 层叠窗口, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 17, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 堆叠显示窗口, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 19, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 并排显示窗口, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 18, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 显示桌面, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 41, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 属性, 逻辑型, 公开
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 24, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)

.子程序 切换窗口, 逻辑型, 公开, 最底平台Vista，类似于按下键盘alt+Tab
    .如果真 (objShell ≠ 0)
        返回 (CallObject (objShell, 44, , , , , , , , , ) ＝ 0)
    .如果真结束
    返回 (假)
    

.子程序 锁定, 逻辑型, 公开, 锁定任务栏禁止更改任务大小与移动。重启explorer或重启后生效。
    .参数 开启, 逻辑型
    .局部变量 变量_FBDF0125, 整数型
    .局部变量 变量_FCDF0125, 整数型
    .局部变量 变量_03E00125, 逻辑型
    .局部变量 变量_04E00125, 整数型

    IsWow64Process (GetCurrentProcess (), 变量_03E00125)
    变量_04E00125 ＝ 选择 (变量_03E00125, #KEY_WOW64_64KEY, #KEY_WOW64_32KEY)
    变量_FCDF0125 ＝ RegOpenKeyExA (2147483649, “Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced”, 0, 位或 (变量_04E00125, #KEY_ALL_ACCESS), 变量_FBDF0125)
    .如果真 (变量_FCDF0125 ＝ 0)
        变量_FCDF0125 ＝ RegSetValueExA (变量_FBDF0125, “TaskbarSizeMove”, 0, 4, 到字节集 (选择 (开启, 1, 0)), 4)
        DLL_RegFlushKey (变量_FBDF0125)
        RegCloseKey (变量_FBDF0125)
        返回 (变量_FCDF0125 ＝ 0)
    .如果真结束
    返回 (假)

