.版本 2

.程序集 类_HTML实体, , 公开, 源码收录自【https://bbs.125.la/forum.php?mod=viewthread&tid=14088175】
.程序集变量 m_HashTable, HashMap_StrInt, , , 这里用到了网络上的 hashmap，我觉得很轻量，内部用的是数组，所以特点是加入稍慢，但是查询速度非常好，很符合这里的应用场景
.程序集变量 m_UTF8, 字节集
.程序集变量 m_UTF8Len, 整数型

.子程序 _初始化
    Init ()

.子程序 _销毁
    

.子程序 Init
    .局部变量 变量_72A00225, 文本型, , "0"
    .局部变量 变量_73A00225, 整数型
    .局部变量 变量_74A00225, 文本型, , "0"
    .局部变量 变量_75A00225, 文本型

    m_HashTable.初始化 ()
    变量_72A00225 ＝ 分割文本 (#HtmlEntitiesTable, #换行符, )
    变量_75A00225 ＝ 字符 (9)
    .计次循环首 (取数组成员数 (变量_72A00225), 变量_73A00225)
        变量_74A00225 ＝ 分割文本 (变量_72A00225 [变量_73A00225], 变量_75A00225, )
        .如果真 (取数组成员数 (变量_74A00225) ＝ 2)
            m_HashTable.加入 (变量_74A00225 [1], 到整数 (变量_74A00225 [2]))
        .如果真结束
        
    .计次循环尾 ()
    
    
    

.子程序 解码_ANSI, , 公开, 反转义 ANSI 文本
    .参数 ANSI, 文本型

    解码_UTF8 (编码_Ansi到Utf8 (ANSI))

.子程序 解码_UTF8, , 公开, 反转义 UTF8 文本，内码最终选择了 UTF8，大部分网页的编码也都是 UTF8，而且可以囊括目前世界上所有的字符
    .参数 UTF8, 字节集
    .局部变量 变量_78A00225, 整数型
    .局部变量 变量_79A00225, 长整数型
    .局部变量 变量_7AA00225, 整数型
    .局部变量 变量_7BA00225, 整数型
    .局部变量 变量_7CA00225, 字节型
    .局部变量 变量_7DA00225, 长整数型
    .局部变量 变量_7EA00225, 字节型
    .局部变量 变量_7FA00225, 整数型
    .局部变量 变量_80A00225, 逻辑型
    .局部变量 变量_81A00225, 整数型
    .局部变量 变量_82A00225, 整数型
    .局部变量 变量_83A00225, 整数型
    .局部变量 变量_84A00225, 长整数型
    .局部变量 变量_85A00225, 长整数型

    
    
    
    m_UTF8 ＝ 取空白字节集 (取字节集长度 (UTF8) ＋ 1)
    RtlMoveMemory (取指针字节集_ (m_UTF8), 取指针字节集_ (UTF8), 取字节集长度 (UTF8))
    
    
    变量_79A00225 ＝ 取指针字节集_ (m_UTF8)
    
    m_UTF8Len ＝ lstrlenA (变量_79A00225)
    
    .判断循环首 (变量_78A00225 ＜ m_UTF8Len)
        
        变量_85A00225 ＝ strchr (变量_79A00225 ＋ 变量_78A00225, 38)
        .如果真 (变量_85A00225 ＝ 0)
            跳出循环 ()
        .如果真结束
        
        变量_78A00225 ＝ 变量_85A00225 － 变量_79A00225 ＋ 1
        变量_7AA00225 ＝ m_UTF8Len － 变量_78A00225
        .如果真 (变量_7AA00225 ＜ 3)
            跳出循环 ()
        .如果真结束
        
        
        
        .如果 (变量_7AA00225 ＜ 21)
            
            变量_7BA00225 ＝ m_UTF8Len ＋ 1
        .否则
            变量_7BA00225 ＝ 变量_78A00225 ＋ 22
        .如果结束
        
        
        变量_7CA00225 ＝ m_UTF8 [变量_7BA00225]
        m_UTF8 [变量_7BA00225] ＝ 0
        
        
        变量_7DA00225 ＝ strchr (变量_79A00225 ＋ 变量_78A00225 － 1, 59)
        
        
        
        
        
        .如果 (变量_7DA00225 ≠ 0)
            
            变量_7DA00225 ＝ 变量_7DA00225 － 变量_79A00225 ＋ 1
            .如果 (变量_7DA00225 － 变量_78A00225 ≥ 3)
                
                变量_7EA00225 ＝ m_UTF8 [变量_7DA00225]
                m_UTF8 [变量_7DA00225] ＝ 0
                
                变量_80A00225 ＝ 真
                .如果 (m_UTF8 [变量_78A00225 ＋ 1] ＝ 35)
                    .判断开始 (m_UTF8 [变量_78A00225 ＋ 2] ＝ 120 或 m_UTF8 [变量_78A00225 ＋ 2] ＝ 88)
                        .变量循环首 (变量_78A00225 ＋ 3, 变量_7DA00225 － 1, 1, 变量_7FA00225)
                            .如果真 (m_UTF8 [变量_7FA00225] ＜ 48 或 m_UTF8 [变量_7FA00225] ＞ 57)
                                .如果真 (m_UTF8 [变量_7FA00225] ＜ 65 或 m_UTF8 [变量_7FA00225] ＞ 70)
                                    .如果真 (m_UTF8 [变量_7FA00225] ＜ 97 或 m_UTF8 [变量_7FA00225] ＞ 102)
                                        变量_80A00225 ＝ 假
                                        跳出循环 ()
                                    .如果真结束
                                    
                                .如果真结束
                                
                            .如果真结束
                            
                        .变量循环尾 ()
                        .如果真 (变量_80A00225)
                            m_UTF8 [变量_78A00225 ＋ 1] ＝ 48
                            DLL_StrToIntExA (变量_79A00225 ＋ 变量_78A00225, #STIF_SUPPORT_HEX, 变量_81A00225)
                        .如果真结束
                        
                        
                    .判断 (48 ≤ m_UTF8 [变量_78A00225 ＋ 2] 且 m_UTF8 [变量_78A00225 ＋ 2] ≤ 57)
                        .变量循环首 (变量_78A00225 ＋ 3, 变量_7DA00225 － 1, 1, 变量_7FA00225)
                            .如果真 (m_UTF8 [变量_7FA00225] ＜ 48 或 m_UTF8 [变量_7FA00225] ＞ 57)
                                变量_80A00225 ＝ 假
                                跳出循环 ()
                            .如果真结束
                            
                        .变量循环尾 ()
                        
                        .如果真 (变量_80A00225)
                            DLL_StrToIntExA (变量_79A00225 ＋ 变量_78A00225 ＋ 1, #STIF_DEFAULT, 变量_81A00225)
                        .如果真结束
                        
                        
                    .默认
                        变量_80A00225 ＝ 假
                    .判断结束
                    
                    
                .否则
                    变量_81A00225 ＝ m_HashTable.取值 (指针到文本 (变量_79A00225 ＋ 变量_78A00225))
                    .如果真 (变量_81A00225 ＝ 0)
                        变量_80A00225 ＝ 假
                    .如果真结束
                    
                .如果结束
                
                .如果 (变量_80A00225)
                    
                    
                    
                    
                    变量_82A00225 ＝ UNICODE到UTF8_no_asm (变量_81A00225, m_UTF8 [变量_78A00225], m_UTF8 [变量_78A00225 ＋ 1], m_UTF8 [变量_78A00225 ＋ 2], m_UTF8 [变量_78A00225 ＋ 3])
                    
                    
                    
                    RtlMoveMemory (变量_79A00225 ＋ 变量_78A00225 － 1 ＋ 变量_82A00225, 变量_79A00225 ＋ 变量_7DA00225, m_UTF8Len － 变量_7DA00225 ＋ 1)
                    
                    变量_83A00225 ＝ 变量_7DA00225 － 变量_78A00225 ＋ 1 － 变量_82A00225
                    m_UTF8Len ＝ m_UTF8Len － 变量_83A00225
                    变量_78A00225 ＝ 变量_78A00225 ＋ 变量_82A00225 － 1
                    变量_7BA00225 ＝ 变量_7BA00225 － 变量_83A00225
                    
                .否则
                    
                    m_UTF8 [变量_78A00225] ＝ 0
                    变量_84A00225 ＝ strrchr (变量_79A00225 ＋ 变量_78A00225, 38)
                    m_UTF8 [变量_78A00225] ＝ 38
                    .如果 (变量_84A00225 ＝ 0)
                        变量_78A00225 ＝ 变量_7DA00225
                    .否则
                        变量_78A00225 ＝ 变量_84A00225 － 变量_79A00225
                    .如果结束
                    
                    
                    m_UTF8 [变量_7DA00225] ＝ 变量_7EA00225
                    变量_7EA00225 ＝ 0
                .如果结束
                
            .否则
                变量_78A00225 ＝ 变量_7DA00225
            .如果结束
            
        .否则
            m_UTF8 [变量_78A00225] ＝ 0
            变量_84A00225 ＝ strrchr (变量_79A00225 ＋ 变量_78A00225, 38)
            m_UTF8 [变量_78A00225] ＝ 38
            
            .如果 (变量_84A00225 ＝ 0)
                变量_78A00225 ＝ 变量_7BA00225 － 1
            .否则
                变量_78A00225 ＝ 变量_84A00225 － 变量_79A00225
            .如果结束
            
        .如果结束
        
        
        
        m_UTF8 [变量_7BA00225] ＝ 变量_7CA00225
        变量_7CA00225 ＝ 0
        
        
        
    .判断循环尾 ()
    
    

.子程序 取值_UTF8, 字节集, 公开, 返回反转义的结果，带尾部\0的 UTF8 文本
    返回 (取字节集左边 (m_UTF8, m_UTF8Len ＋ 1))

.子程序 取值_UNICODE, 字节集, 公开, 返回反转义的结果，带尾部\0\0的 UNICODE 文本
    返回 (编码_Utf8到Unicode (m_UTF8))

.子程序 取值_ANSI, 文本型, 公开, 返回反转义的结果，ANSI 文本 !!! 用到了 HTML Entity 的很多都是无法用 ANSI 表达的字符，很可能乱码
    返回 (编码_Utf8到Ansi (m_UTF8))
    

.子程序 UNICODE到UTF8_no_asm, 整数型
    .参数 变量_86A00225, 整数型
    .参数 变量_87A00225, 字节型, 参考
    .参数 变量_88A00225, 字节型, 参考
    .参数 变量_89A00225, 字节型, 参考
    .参数 变量_8AA00225, 字节型, 参考

    .判断开始 (进制_十六到十 (“10000”) ≤ 变量_86A00225 且 变量_86A00225 ≤ 进制_十六到十 (“10FFFF”))
        变量_8AA00225 ＝ 位或 (进制_十六到十 (“80”), 位与 (进制_十六到十 (“3F”), 变量_86A00225))
        变量_89A00225 ＝ 位或 (进制_十六到十 (“80”), 位与 (进制_十六到十 (“3F”), 右移 (变量_86A00225, 6)))
        变量_88A00225 ＝ 位或 (进制_十六到十 (“80”), 位与 (进制_十六到十 (“3F”), 右移 (变量_86A00225, 12)))
        变量_87A00225 ＝ 位或 (进制_十六到十 (“F0”), 右移 (变量_86A00225, 18))
        返回 (4)
    .判断 (进制_十六到十 (“0800”) ≤ 变量_86A00225 且 变量_86A00225 ≤ 进制_十六到十 (“FFFF”))
        变量_89A00225 ＝ 位或 (进制_十六到十 (“80”), 位与 (进制_十六到十 (“3F”), 变量_86A00225))
        变量_88A00225 ＝ 位或 (进制_十六到十 (“80”), 位与 (进制_十六到十 (“3F”), 右移 (变量_86A00225, 6)))
        变量_87A00225 ＝ 位或 (进制_十六到十 (“E0”), 右移 (变量_86A00225, 12))
        返回 (3)
    .判断 (进制_十六到十 (“0080”) ≤ 变量_86A00225 且 变量_86A00225 ≤ 进制_十六到十 (“07FF”))
        变量_88A00225 ＝ 位或 (进制_十六到十 (“80”), 位与 (进制_十六到十 (“3F”), 变量_86A00225))
        变量_87A00225 ＝ 位或 (进制_十六到十 (“C0”), 右移 (变量_86A00225, 6))
        返回 (2)
    .判断 (进制_十六到十 (“0000”) ≤ 变量_86A00225 且 变量_86A00225 ≤ 进制_十六到十 (“007F”))
        变量_87A00225 ＝ 变量_86A00225
        返回 (1)
    .默认
        返回 (0)
    .判断结束
    
    
    
    

