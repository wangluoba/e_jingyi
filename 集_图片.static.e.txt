.版本 2

.程序集 集_图片
.程序集变量 类变量_AEC00215, 文本型

.子程序 图片_平铺拉伸, 字节集, 公开, 按指定宽高  平铺/拉伸  成功返回图片字节集  失败返回空字节集
    .参数 参_原图片, 字节集
    .参数 参_设定宽度, 整数型, 可空, 默认：1920
    .参数 参_设定高度, 整数型, 可空, 默认：1080
    .参数 参_处理类型, 整数型, 可空, 可空，默认0=平铺  1=拉伸
    .局部变量 变量_5EC70225, 类_位图操作
    .局部变量 变量_5FC70225, 类_位图操作
    .局部变量 变量_60C70225, 整数型
    .局部变量 变量_61C70225, 整数型
    .局部变量 变量_62C70225, 整数型
    .局部变量 变量_63C70225, 整数型
    .局部变量 变量_64C70225, 字节集
    .局部变量 变量_65C70225, 整数型
    .局部变量 变量_66C70225, 整数型
    .局部变量 变量_67C70225, 整数型
    .局部变量 变量_68C70225, 整数型
    .局部变量 变量_69C70225, 整数型
    .局部变量 变量_6AC70225, 整数型
    .局部变量 变量_6BC70225, 整数型
    .局部变量 变量_6CC70225, 整数型
    .局部变量 变量_6DC70225, 字节集
    .局部变量 变量_6EC70225, 整数型

    .如果真 (图片_转换 (参_原图片, 1, , 变量_64C70225, ) ＝ 假)
        输出调试文本 (“转换图片失败”)
        返回 ({ })
    .如果真结束
    
    
    .如果真 (参_设定宽度 ＝ 0)
        参_设定宽度 ＝ 1920
    .如果真结束
    
    .如果真 (参_设定高度 ＝ 0)
        参_设定高度 ＝ 1080
    .如果真结束
    
    
    
    .如果真 (变量_5FC70225.从数据创建 (变量_64C70225) ＝ 假)
        输出调试文本 (“创建创建层位图失败”)
        返回 ({ })
    .如果真结束
    
    变量_60C70225 ＝ 变量_5FC70225.取宽度 ()
    变量_61C70225 ＝ 变量_5FC70225.取高度 ()
    
    .如果真 (参_处理类型 ＝ 0)
        .如果真 (参_设定宽度 ≤ 变量_60C70225 或 参_设定高度 ≤ 变量_61C70225)
            输出调试文本 (“平铺模式下，设定的宽高需要大于原图片的宽高”)
            返回 ({ })
        .如果真结束
        
    .如果真结束
    
    
    .如果真 (变量_5EC70225.创建空白位图 (参_设定宽度, 参_设定高度, 24) ＝ 假)
        输出调试文本 (“创建空白底位图失败”)
        返回 ({ })
    .如果真结束
    
    .判断开始 (参_处理类型 ＝ 0)
        变量_62C70225 ＝ 参_设定宽度 － 变量_60C70225
        变量_63C70225 ＝ 参_设定高度 － 变量_61C70225
        
        变量_68C70225 ＝ 参_设定宽度 ％ 变量_60C70225
        变量_6BC70225 ＝ (参_设定宽度 － 变量_68C70225) ÷ 变量_60C70225
        
        变量_69C70225 ＝ 参_设定高度 ％ 变量_61C70225
        变量_6CC70225 ＝ (参_设定高度 － 变量_69C70225) ÷ 变量_61C70225
        
        
        变量_67C70225 ＝ －变量_60C70225
        .计次循环首 (变量_6BC70225, 变量_65C70225)
            变量_67C70225 ＝ 变量_67C70225 ＋ 变量_60C70225
            变量_5FC70225.复制到 (变量_5EC70225, 0, 0, 变量_60C70225, 变量_61C70225, 变量_67C70225, 0)
            变量_6AC70225 ＝ －变量_61C70225
            .计次循环首 (变量_6CC70225, 变量_65C70225)
                变量_6AC70225 ＝ 变量_6AC70225 ＋ 变量_61C70225
                变量_5FC70225.复制到 (变量_5EC70225, 0, 0, 变量_60C70225, 变量_61C70225, 变量_67C70225, 变量_6AC70225)
                系统_处理事件 ()
            .计次循环尾 ()
            .如果真 (变量_69C70225 ≠ 0)
                变量_5FC70225.复制到 (变量_5EC70225, 0, 0, 变量_60C70225, 变量_69C70225, 变量_67C70225, 变量_6AC70225 ＋ 变量_61C70225)
            .如果真结束
            
            系统_处理事件 ()
        .计次循环尾 ()
        
        .如果真 (变量_68C70225 ≠ 0)
            变量_6AC70225 ＝ －变量_61C70225
            .计次循环首 (变量_6CC70225, 变量_6EC70225)
                变量_6AC70225 ＝ 变量_6AC70225 ＋ 变量_61C70225
                变量_5FC70225.复制到 (变量_5EC70225, 0, 0, 变量_68C70225, 变量_61C70225, 变量_67C70225 ＋ 变量_60C70225, 变量_6AC70225)
                系统_处理事件 ()
            .计次循环尾 ()
            .如果真 (变量_69C70225 ≠ 0)
                变量_5FC70225.复制到 (变量_5EC70225, 0, 0, 变量_60C70225, 变量_69C70225, 变量_67C70225 ＋ 变量_60C70225, 变量_6AC70225 ＋ 变量_61C70225)
            .如果真结束
            
        .如果真结束
        
        变量_6DC70225 ＝ 变量_5EC70225.取出位图数据 ()
    .默认
        变量_6DC70225 ＝ 图片_缩放 (变量_64C70225, 参_设定宽度, 参_设定高度, 真)
    .判断结束
    返回 (变量_6DC70225)

.子程序 图片_到24位图, 字节集, 公开, 把非24位BMP、JPG、GIF的图片转化为24位图
    .参数 参_原图片, 字节集
    .参数 参_执行结果, 逻辑型, 参考 可空, 可以被省略，提供参数数据时只能提供变量。如果提供本参数，其中将被写入本命令的执行结果——执行成功时为真，执行失败时为假。
    .局部变量 变量_4EC70225, 对象
    .局部变量 变量_55C70225, 字节集

    
    .如果真 (取字节集左边 (参_原图片, 2) ≠ { 66, 77 } 或 取字节集数据 (参_原图片, #短整数型, 29) ≠ 24)
        .如果真 (变量_4EC70225.创建图片对象 (参_原图片))
            变量_55C70225 ＝ 变量_4EC70225.取回图片 ()
            变量_4EC70225.清除 ()
            参_执行结果 ＝ 真
            返回 (变量_55C70225)
        .如果真结束
        
    .如果真结束
    参_执行结果 ＝ 假
    返回 (参_原图片)

.子程序 图片_分割, 逻辑型, 公开
    .参数 参_原图片, 字节集
    .参数 参_横向分割数量, 整数型, 可空, 默认：2
    .参数 参_纵向分割数量, 整数型, 可空, 默认：2
    .参数 参_图片数组, 字节集, 数组
    .局部变量 变量_20C60225, 类_位图操作
    .局部变量 变量_21C60225, 类_位图操作
    .局部变量 变量_22C60225, 整数型
    .局部变量 变量_23C60225, 整数型
    .局部变量 变量_24C60225, 整数型
    .局部变量 变量_25C60225, 整数型
    .局部变量 变量_26C60225, 整数型
    .局部变量 变量_27C60225, 整数型
    .局部变量 变量_28C60225, 整数型
    .局部变量 变量_29C60225, 整数型
    .局部变量 变量_2AC60225, 字节集
    .局部变量 变量_2BC60225, 字节集

    图片_转换 (参_原图片, 1, , 变量_2BC60225, )
    .如果真 (变量_20C60225.从数据创建 (变量_2BC60225) ＝ 假)
        返回 (假)
    .如果真结束
    
    .如果真 (是否为空 (参_横向分割数量))
        参_横向分割数量 ＝ 2
    .如果真结束
    
    .如果真 (是否为空 (参_纵向分割数量))
        参_纵向分割数量 ＝ 2
    .如果真结束
    
    
    变量_22C60225 ＝ 变量_20C60225.取宽度 ()
    变量_23C60225 ＝ 变量_20C60225.取高度 ()
    
    变量_24C60225 ＝ 变量_22C60225 ÷ 参_横向分割数量
    变量_25C60225 ＝ 变量_23C60225 ÷ 参_纵向分割数量
    
    变量_21C60225.创建空白位图 (变量_24C60225, 变量_25C60225, 32)
    变量_29C60225 ＝ 0 － 变量_25C60225
    .计次循环首 (参_纵向分割数量, 变量_26C60225)
        变量_29C60225 ＝ 变量_29C60225 ＋ 变量_25C60225
        变量_28C60225 ＝ 0 － 变量_24C60225
        .计次循环首 (参_横向分割数量, 变量_27C60225)
            变量_28C60225 ＝ 变量_28C60225 ＋ 变量_24C60225
            变量_20C60225.复制到 (变量_21C60225, 变量_28C60225, 变量_29C60225, 变量_24C60225, 变量_25C60225, 0, 0)
            变量_2AC60225 ＝ 变量_21C60225.取出位图数据 ()
            加入成员 (参_图片数组, 变量_2AC60225)
        .计次循环尾 ()
        变量_28C60225 ＝ 0 － 变量_24C60225
    .计次循环尾 ()
    返回 (真)
    

.子程序 图片_取照片拍摄日期, 逻辑型, 公开
    .参数 文件名, 文本型
    .参数 拍摄时间, 文本型, 参考
    .局部变量 变量_8AE90225, 自定义_29AB0141
    .局部变量 变量_8BE90225, 整数型
    .局部变量 变量_8CE90225, 整数型
    .局部变量 变量_8DE90225, 字节集
    .局部变量 变量_8EE90225, 整数型
    .局部变量 变量_8FE90225, 整数型

    变量_8AE90225.成员_2AAB0135 ＝ 1
    变量_8FE90225 ＝ GdiplusStartup (变量_8BE90225, 变量_8AE90225, 0)
    .如果真 (变量_8FE90225 ≠ 0)
        返回 (假)
    .如果真结束
    变量_8FE90225 ＝ DLL_GdipLoadImageFromFile (编码_Ansi到Unicode (文件名, ), 变量_8EE90225)
    .如果真 (变量_8FE90225 ＝ 0)
        变量_8FE90225 ＝ GdipGetPropertyItemSize (变量_8EE90225, #<?未知本地类型?>, 变量_8CE90225)
        .如果真 (变量_8FE90225 ＝ 0)
            变量_8DE90225 ＝ 取空白字节集 (变量_8CE90225)
            GdipGetPropertyItem (变量_8EE90225, #<?未知本地类型?>, 变量_8CE90225, 变量_8DE90225)
            拍摄时间 ＝ 取字节集数据 (变量_8DE90225, #文本型, 17)
        .如果真结束
        GdipDisposeImage (变量_8EE90225)
    .如果真结束
    GdiplusShutdown (变量_8BE90225)
    返回 (变量_8CE90225 ≠ 0)

.子程序 图片_缩放, 字节集, 公开
    .参数 图片, 字节集
    .参数 宽度, 整数型
    .参数 高度, 整数型
    .参数 无损, 逻辑型, 可空, 假为快速 真为无损，默认为假
    .局部变量 变量_B3C00225, 对象
    .局部变量 变量_B4C00225, 整数型, , "0"
    .局部变量 变量_B5C00225, 整数型, , "0"
    .局部变量 变量_B6C00225, 整数型
    .局部变量 变量_B7C00225, 整数型
    .局部变量 变量_B8C00225, 类_位图操作
    .局部变量 变量_B9C00225, 整数型
    .局部变量 变量_BAC00225, 整数型
    .局部变量 变量_BBC00225, 类_像素组

    
    CoInitialize (0)
    变量_B3C00225.创建图片对象 (图片)
    变量_B8C00225.从数据创建 (变量_B3C00225.取回图片 ())
    CoUninitialize ()
    变量_BBC00225.位图_转_像素组 (变量_B8C00225, 变量_B4C00225)
    变量_B6C00225 ＝ 变量_B8C00225.取宽度 ()
    变量_B7C00225 ＝ 变量_B8C00225.取高度 ()
    变量_B9C00225 ＝ 宽度
    变量_BAC00225 ＝ 高度
    .判断开始 (无损 ＝ 假)
        变量_BBC00225.像素组_缩放图片_快速 (变量_B4C00225, 变量_B6C00225, 变量_B7C00225, 变量_B9C00225, 变量_BAC00225, 变量_B5C00225)
    .默认
        变量_BBC00225.像素组_缩放图片_无损 (变量_B4C00225, 变量_B6C00225, 变量_B7C00225, 变量_B9C00225, 变量_BAC00225, 变量_B5C00225)
    .判断结束
    变量_B8C00225.创建空白位图 (1, 1, 24)
    变量_BBC00225.像素组_转_位图 (变量_B8C00225, 变量_B5C00225, 变量_B9C00225, 变量_BAC00225)
    返回 (变量_B8C00225.取出位图数据 ())

.子程序 图片_缩放_透明, 字节集, 公开, @大司命
    .参数 参_图片, 字节集
    .参数 参_宽度, 整数型, 可空, 留空或小于1默认取原来宽度
    .参数 参_高度, 整数型, 可空, 留空或小于1默认取原来高度
    .局部变量 变量_11D60225, 自定义_29AB0141
    .局部变量 变量_A4C20225, 整数型
    .局部变量 变量_A5C20225, 整数型
    .局部变量 变量_A6C20225, 整数型
    .局部变量 变量_A7C20225, 整数型
    .局部变量 变量_A8C20225, 整数型
    .局部变量 变量_A9C20225, 整数型
    .局部变量 变量_AAC20225, 整数型
    .局部变量 变量_ABC20225, 字节集

    
    变量_11D60225.成员_2AAB0135 ＝ 1
    GdiplusStartup (变量_A9C20225, 变量_11D60225, 0)
    变量_A5C20225 ＝ 取字节集长度 (参_图片)
    变量_A4C20225 ＝ GlobalAlloc (#GMEM_MOVEABLE, 变量_A5C20225)
    变量_A6C20225 ＝ GlobalLock (变量_A4C20225)
    CreateStreamOnHGlobal (变量_A4C20225, 假, 变量_A7C20225)
    RtlMoveMemory_字节集 (变量_A6C20225, 参_图片, 变量_A5C20225)
    GlobalUnlock (变量_A4C20225)
    GdipLoadImageFromStream (变量_A7C20225, 变量_A8C20225)
    .如果真 (参_宽度 ＜ 1)
        DLL_GdipGetImageWidth (变量_A8C20225, 参_宽度)
    .如果真结束
    .如果真 (参_高度 ＜ 1)
        DLL_GdipGetImageHeight (变量_A8C20225, 参_高度)
    .如果真结束
    GdipGetImageThumbnail (变量_A8C20225, 参_宽度, 参_高度, 变量_AAC20225, 0, 0)
    GdipDisposeImage (变量_A8C20225)
    GlobalFree (变量_A4C20225)
    变量_A4C20225 ＝ GlobalAlloc (位或 (#GMEM_ZEROINIT, #GMEM_MOVEABLE), 0)
    CreateStreamOnHGlobal (变量_A4C20225, 假, 变量_A7C20225)
    变量_ABC20225 ＝ 取空白字节集 (16)
    DLL_CLSIDFromString ({ 123, 0, 53, 0, 53, 0, 55, 0, 67, 0, 70, 0, 52, 0, 48, 0, 54, 0, 45, 0, 49, 0, 65, 0, 48, 0, 52, 0, 45, 0, 49, 0, 49, 0, 68, 0, 51, 0, 45, 0, 57, 0, 65, 0, 55, 0, 51, 0, 45, 0, 48, 0, 48, 0, 48, 0, 48, 0, 70, 0, 56, 0, 49, 0, 69, 0, 70, 0, 51, 0, 50, 0, 69, 0, 125, 0, 0, 0 }, 变量_ABC20225)
    DLL_GdipSaveImageToStream2 (变量_AAC20225, 变量_A7C20225, 变量_ABC20225, 0)
    变量_A6C20225 ＝ GlobalLock (变量_A4C20225)
    变量_A5C20225 ＝ GlobalSize (变量_A4C20225)
    变量_ABC20225 ＝ 指针到字节集 (变量_A6C20225, 变量_A5C20225)
    GlobalUnlock (变量_A4C20225)
    GlobalFree (变量_A4C20225)
    GdipDisposeImage (变量_AAC20225)
    GdiplusShutdown (变量_A9C20225)
    返回 (变量_ABC20225)

.子程序 加入_RGB
    .参数 变量_3BC20225, 整数型
    .参数 变量_3CC20225, 整数型, 参考
    .参数 变量_3DC20225, 整数型, 参考
    .参数 变量_3EC20225, 整数型, 参考
    .参数 变量_3FC20225, 整数型, 参考
    .局部变量 变量_40C20225, 字节集

    变量_40C20225 ＝ 到字节集 (变量_3BC20225)
    变量_3CC20225 ＝ 变量_3CC20225 ＋ 变量_40C20225 [1]
    变量_3DC20225 ＝ 变量_3DC20225 ＋ 变量_40C20225 [2]
    变量_3EC20225 ＝ 变量_3EC20225 ＋ 变量_40C20225 [3]
    变量_3FC20225 ＝ 变量_3FC20225 ＋ 1

.子程序 RGB_整数, 整数型
    .参数 变量_41C20225, 整数型
    .参数 变量_42C20225, 整数型
    .参数 变量_43C20225, 整数型
    .局部变量 变量_44C20225, 整数型
    .局部变量 变量_45C20225, 字节集

    变量_45C20225 ＝ 取空白字节集 (4)
    变量_45C20225 [1] ＝ 变量_41C20225
    变量_45C20225 [2] ＝ 变量_42C20225
    变量_45C20225 [3] ＝ 变量_43C20225
    写到内存 (变量_45C20225, 取变量地址_字节 (变量_44C20225), 4)
    返回 (变量_44C20225)

.子程序 图片_拼接, 字节集, 公开, 仅支持bmp格式的图片拼接，如需其他格式的图片请先转换
    .参数 参_图片数组, 文本型, 数组, 图片文件的路径数组
    .参数 参_列总数, 整数型
    .参数 参_行总数, 整数型
    .参数 参_图片宽度, 整数型
    .参数 参_图片高度, 整数型
    .局部变量 变量_C1C00225, 整数型
    .局部变量 变量_C2C00225, 整数型
    .局部变量 变量_C3C00225, 字节集
    .局部变量 变量_C4C00225, 类_位图操作
    .局部变量 变量_C5C00225, 类_位图操作
    .局部变量 变量_C6C00225, 整数型
    .局部变量 变量_C7C00225, 整数型
    .局部变量 变量_C8C00225, 短整数型
    .局部变量 变量_C9C00225, 整数型
    .局部变量 变量_CAC00225, 整数型
    .局部变量 变量_CBC00225, 字节集
    .局部变量 变量_CCC00225, 文本型, , "0"
    .局部变量 变量_CDC00225, 整数型

    变量_C6C00225 ＝ 参_图片宽度 × 参_列总数
    变量_C7C00225 ＝ 参_图片高度 × 参_行总数
    变量_C4C00225.创建空白位图 (变量_C6C00225, 变量_C7C00225, 32)
    .计次循环首 (参_列总数, 变量_C1C00225)
        变量_C9C00225 ＝ (变量_C1C00225 － 1) × 参_图片宽度
        .计次循环首 (参_行总数, 变量_C2C00225)
            变量_CAC00225 ＝ (变量_C2C00225 － 1) × 参_图片高度
            变量_CDC00225 ＝ 变量_CDC00225 ＋ 1
            .如果真 (变量_CDC00225 ＞ 取数组成员数 (参_图片数组))
                返回 ({ })
            .如果真结束
            变量_C3C00225 ＝ 读入文件 (参_图片数组 [变量_CDC00225])
            变量_C3C00225 ＝ 图片_缩放 (变量_C3C00225, 参_图片宽度, 参_图片高度, 真)
            变量_C5C00225.从数据创建 (变量_C3C00225)
            变量_C5C00225.复制到 (变量_C4C00225, 0, 0, 参_图片宽度, 参_图片高度, 变量_C9C00225, 变量_CAC00225)
            处理事件 ()
        .计次循环尾 ()
    .计次循环尾 ()
    变量_CBC00225 ＝ 变量_C4C00225.取出位图数据 ()
    返回 (变量_CBC00225)

.子程序 图片_拼接1, 字节集, 公开, 两张图片拼接为一张，支持上下拼接和左右拼接，图片自动居中
    .参数 图片1, 字节集
    .参数 图片2, 字节集
    .参数 拼接方式, 逻辑型, , 上下拼接传入：真 左右拼接传入：假
    .参数 合成底色, 整数型, 可空, 默认白底
    .局部变量 变量_F6C30225, 字节集
    .局部变量 变量_F7C30225, 字节集
    .局部变量 变量_F8C30225, 类_位图操作
    .局部变量 变量_F9C30225, 类_位图操作
    .局部变量 变量_FAC30225, 整数型
    .局部变量 变量_FBC30225, 整数型
    .局部变量 变量_FCC30225, 字节集
    .局部变量 变量_FDC30225, 整数型
    .局部变量 变量_FEC30225, 整数型
    .局部变量 变量_FFC30225, 整数型
    .局部变量 变量_00C40225, 整数型

    
    图片_转换 (图片1, 1, , 变量_F6C30225, )
    图片_转换 (图片2, 1, , 变量_F7C30225, )
    .如果真 (合成底色 ＝ 0)
        合成底色 ＝ #白色
    .如果真结束
    .如果 (拼接方式)
        
        变量_FAC30225 ＝ 图片_取宽度 (变量_F6C30225)
        .如果真 (变量_FAC30225 ＜ 图片_取宽度 (变量_F7C30225))
            变量_FAC30225 ＝ 图片_取宽度 (变量_F7C30225)
        .如果真结束
        
        变量_FBC30225 ＝ 图片_取高度 (变量_F6C30225) ＋ 图片_取高度 (变量_F7C30225)
        
        变量_F8C30225.创建空白位图 (变量_FAC30225, 变量_FBC30225, 32)
        
        .计次循环首 (变量_FAC30225, 变量_FEC30225)
            .计次循环首 (变量_FBC30225, 变量_FDC30225)
                变量_F8C30225.置某点颜色 (变量_FEC30225 － 1, 变量_FDC30225 － 1, 合成底色)
            .计次循环尾 ()
        .计次循环尾 ()
        
        变量_FFC30225 ＝ 0
        .如果真 (图片_取宽度 (变量_F6C30225) ≠ 变量_FAC30225)
            变量_FFC30225 ＝ 到整数 ((变量_FAC30225 － 图片_取宽度 (变量_F6C30225)) ÷ 2)
        .如果真结束
        变量_F9C30225.从数据创建 (变量_F6C30225)
        变量_F9C30225.复制到 (变量_F8C30225, 0, 0, 图片_取宽度 (变量_F6C30225), 图片_取高度 (变量_F6C30225), 变量_FFC30225, 0)
        处理事件 ()
        变量_FFC30225 ＝ 0
        .如果真 (图片_取宽度 (变量_F7C30225) ≠ 变量_FAC30225)
            变量_FFC30225 ＝ 到整数 ((变量_FAC30225 － 图片_取宽度 (变量_F7C30225)) ÷ 2)
        .如果真结束
        变量_F9C30225.从数据创建 (变量_F7C30225)
        变量_F9C30225.复制到 (变量_F8C30225, 0, 0, 图片_取宽度 (变量_F7C30225), 图片_取高度 (变量_F7C30225), 变量_FFC30225, 图片_取高度 (变量_F6C30225))
        处理事件 ()
        
    .否则
        
        
        变量_FBC30225 ＝ 图片_取高度 (变量_F6C30225)
        .如果真 (变量_FBC30225 ＜ 图片_取高度 (变量_F7C30225))
            变量_FBC30225 ＝ 图片_取高度 (变量_F7C30225)
        .如果真结束
        
        变量_FAC30225 ＝ 图片_取宽度 (变量_F6C30225) ＋ 图片_取宽度 (变量_F7C30225)
        
        变量_F8C30225.创建空白位图 (变量_FAC30225, 变量_FBC30225, 32)
        
        .计次循环首 (变量_FAC30225, 变量_FEC30225)
            .计次循环首 (变量_FBC30225, 变量_FDC30225)
                变量_F8C30225.置某点颜色 (变量_FEC30225 － 1, 变量_FDC30225 － 1, 合成底色)
            .计次循环尾 ()
        .计次循环尾 ()
        
        变量_00C40225 ＝ 0
        .如果真 (图片_取高度 (变量_F6C30225) ≠ 变量_FBC30225)
            变量_00C40225 ＝ 到整数 ((变量_FBC30225 － 图片_取高度 (变量_F6C30225)) ÷ 2)
        .如果真结束
        变量_F9C30225.从数据创建 (变量_F6C30225)
        变量_F9C30225.复制到 (变量_F8C30225, 0, 0, 图片_取宽度 (变量_F6C30225), 图片_取高度 (变量_F6C30225), 0, 变量_00C40225)
        处理事件 ()
        变量_00C40225 ＝ 0
        .如果真 (图片_取高度 (变量_F7C30225) ≠ 变量_FBC30225)
            变量_00C40225 ＝ 到整数 ((变量_FBC30225 － 图片_取高度 (变量_F7C30225)) ÷ 2)
        .如果真结束
        变量_F9C30225.从数据创建 (变量_F7C30225)
        变量_F9C30225.复制到 (变量_F8C30225, 0, 0, 图片_取宽度 (变量_F7C30225), 图片_取高度 (变量_F7C30225), 图片_取宽度 (变量_F6C30225), 变量_00C40225)
        处理事件 ()
    .如果结束
    变量_FCC30225 ＝ 变量_F8C30225.取出位图数据 ()
    返回 (变量_FCC30225)

.子程序 RGB2ARGB, 整数型
    .参数 变量_36C20225, 整数型
    .参数 变量_37C20225, 整数型, 可空
    .局部变量 变量_38C20225, 字节集

    .如果真 (是否为空 (变量_37C20225))
        变量_37C20225 ＝ 255
    .如果真结束
    变量_38C20225 ＝ 到字节集 (变量_36C20225)
    变量_36C20225 ＝ 位或 (变量_38C20225 [3] ＋ 变量_38C20225 [2] × 256 ＋ 变量_38C20225 [1] × 65536, 左移 (变量_37C20225, 24))
    返回 (变量_36C20225)

.子程序 图片_高斯模糊, 字节集, 公开, BMP
    .参数 参_BMP图片, 字节集
    .参数 参_衰减, 整数型, 可空
    .局部变量 变量_DEC00225, 整数型
    .局部变量 变量_DFC00225, 整数型
    .局部变量 变量_E0C00225, 整数型
    .局部变量 变量_E1C00225, 整数型
    .局部变量 变量_E2C00225, 整数型
    .局部变量 变量_E3C00225, 整数型
    .局部变量 变量_E4C00225, 整数型
    .局部变量 变量_E5C00225, 整数型
    .局部变量 变量_E6C00225, 整数型
    .局部变量 变量_E7C00225, 整数型
    .局部变量 变量_E8C00225, 整数型
    .局部变量 变量_E9C00225, 整数型
    .局部变量 变量_EAC00225, 整数型
    .局部变量 变量_EBC00225, 整数型
    .局部变量 变量_ECC00225, 整数型
    .局部变量 变量_EDC00225, 整数型
    .局部变量 变量_EEC00225, 字节集
    .局部变量 变量_EFC00225, 整数型
    .局部变量 变量_6FEE0225, 整数型

    变量_EEC00225 ＝ 参_BMP图片
    变量_E0C00225 ＝ 参_BMP图片 [3]
    变量_DEC00225 ＝ 参_BMP图片 [19] ＋ 参_BMP图片 [20] × 256
    变量_DFC00225 ＝ 参_BMP图片 [23] ＋ 参_BMP图片 [24] × 256
    变量_EFC00225 ＝ 0
    .如果真 (是否为空 (参_衰减) ＝ 假)
        变量_EFC00225 ＝ 参_衰减
    .如果真结束
    .变量循环首 (0, 变量_DFC00225 － 1, 1, 变量_E2C00225)
        .变量循环首 (0, 变量_DEC00225 － 1, 1, 变量_E3C00225)
            变量_E6C00225 ＝ 0
            变量_E8C00225 ＝ 0
            变量_E7C00225 ＝ 0
            变量_ECC00225 ＝ 0
            .如果真 (图片_取像素RGB (参_BMP图片, 变量_E3C00225 － 1, 变量_E2C00225, 变量_E9C00225, 变量_EAC00225, 变量_EBC00225))
                变量_E6C00225 ＝ 变量_E6C00225 ＋ 变量_E9C00225
                变量_E8C00225 ＝ 变量_E8C00225 ＋ 变量_EAC00225
                变量_E7C00225 ＝ 变量_E7C00225 ＋ 变量_EBC00225
                变量_ECC00225 ＝ 变量_ECC00225 ＋ 1
            .如果真结束
            .如果真 (图片_取像素RGB (参_BMP图片, 变量_E3C00225 ＋ 1, 变量_E2C00225, 变量_E9C00225, 变量_EAC00225, 变量_EBC00225))
                变量_E6C00225 ＝ 变量_E6C00225 ＋ 变量_E9C00225
                变量_E8C00225 ＝ 变量_E8C00225 ＋ 变量_EAC00225
                变量_E7C00225 ＝ 变量_E7C00225 ＋ 变量_EBC00225
                变量_ECC00225 ＝ 变量_ECC00225 ＋ 1
            .如果真结束
            .如果真 (图片_取像素RGB (参_BMP图片, 变量_E3C00225, 变量_E2C00225 ＋ 1, 变量_E9C00225, 变量_EAC00225, 变量_EBC00225))
                变量_E6C00225 ＝ 变量_E6C00225 ＋ 变量_E9C00225
                变量_E8C00225 ＝ 变量_E8C00225 ＋ 变量_EAC00225
                变量_E7C00225 ＝ 变量_E7C00225 ＋ 变量_EBC00225
                变量_ECC00225 ＝ 变量_ECC00225 ＋ 1
            .如果真结束
            .如果真 (图片_取像素RGB (参_BMP图片, 变量_E3C00225, 变量_E2C00225 － 1, 变量_E9C00225, 变量_EAC00225, 变量_EBC00225))
                变量_E6C00225 ＝ 变量_E6C00225 ＋ 变量_E9C00225
                变量_E8C00225 ＝ 变量_E8C00225 ＋ 变量_EAC00225
                变量_E7C00225 ＝ 变量_E7C00225 ＋ 变量_EBC00225
                变量_ECC00225 ＝ 变量_ECC00225 ＋ 1
            .如果真结束
            变量_E7C00225 ＝ 取整 (变量_E7C00225 ÷ 变量_ECC00225) － 变量_EFC00225
            变量_E8C00225 ＝ 取整 (变量_E8C00225 ÷ 变量_ECC00225) － 变量_EFC00225
            变量_E6C00225 ＝ 取整 (变量_E6C00225 ÷ 变量_ECC00225) － 变量_EFC00225
            .如果真 (变量_E7C00225 ＜ 0)
                变量_E7C00225 ＝ 0
            .如果真结束
            .如果真 (变量_E8C00225 ＜ 0)
                变量_E8C00225 ＝ 0
            .如果真结束
            .如果真 (变量_E6C00225 ＜ 0)
                变量_E6C00225 ＝ 0
            .如果真结束
            
            
            
            变量_6FEE0225 ＝ 取整 ((变量_DEC00225 × 24 ＋ 31) ÷ 32) × 4
            变量_E0C00225 ＝ 55 ＋ (变量_DFC00225 － 变量_E2C00225 － 1) × 变量_6FEE0225 ＋ 变量_E3C00225 × 3
            变量_EEC00225 [变量_E0C00225] ＝ 变量_E7C00225
            变量_EEC00225 [变量_E0C00225 ＋ 1] ＝ 变量_E8C00225
            变量_EEC00225 [变量_E0C00225 ＋ 2] ＝ 变量_E6C00225
        .变量循环尾 ()
    .变量循环尾 ()
    返回 (变量_EEC00225)

.子程序 图片_取像素RGB, 逻辑型, 公开
    .参数 BMP图片, 字节集
    .参数 图片X, 整数型
    .参数 图片Y, 整数型
    .参数 图片R, 整数型, 参考
    .参数 图片G, 整数型, 参考
    .参数 图片B, 整数型, 参考
    .局部变量 变量_F6C00225, 整数型
    .局部变量 变量_F7C00225, 整数型
    .局部变量 变量_F8C00225, 整数型
    .局部变量 变量_E9E00225, 整数型
    .局部变量 变量_F1DE0225, 整数型

    变量_F1DE0225 ＝ 取字节集长度 (BMP图片)
    .如果真 (变量_F1DE0225 ＜ 24)
        返回 (假)
    .如果真结束
    .如果真 (BMP图片 [3] ＜ 58 或 BMP图片 [29] ≠ 24)
        返回 (假)
    .如果真结束
    变量_F6C00225 ＝ BMP图片 [19] ＋ BMP图片 [20] × 256
    变量_F7C00225 ＝ BMP图片 [23] ＋ BMP图片 [24] × 256
    变量_E9E00225 ＝ 取整 ((变量_F6C00225 × 24 ＋ 31) ÷ 32) × 4
    .如果真 (图片X ＜ 0 或 图片X ≥ 变量_F6C00225)
        返回 (假)
    .如果真结束
    .如果真 (图片Y ＜ 0 或 图片Y ≥ 变量_F7C00225)
        返回 (假)
    .如果真结束
    变量_F8C00225 ＝ 55 ＋ (变量_F7C00225 － 图片Y － 1) × 变量_E9E00225 ＋ 图片X × 3
    图片R ＝ BMP图片 [变量_F8C00225 ＋ 2]
    图片G ＝ BMP图片 [变量_F8C00225 ＋ 1]
    图片B ＝ BMP图片 [变量_F8C00225]
    返回 (真)

.子程序 图片_置像素RGB, 逻辑型, 公开
    .参数 BMP图片, 字节集
    .参数 图片X, 整数型
    .参数 图片Y, 整数型
    .参数 图片R, 整数型
    .参数 图片G, 整数型
    .参数 图片B, 整数型
    .局部变量 变量_FFC00225, 整数型
    .局部变量 变量_00C10225, 整数型
    .局部变量 变量_01C10225, 整数型

    变量_01C10225 ＝ BMP图片 [3]
    变量_FFC00225 ＝ BMP图片 [19] ＋ BMP图片 [20] × 256
    变量_00C10225 ＝ BMP图片 [23] ＋ BMP图片 [24] × 256
    .如果真 (图片X ＜ 0 或 图片X ≥ 变量_FFC00225)
        返回 (假)
    .如果真结束
    .如果真 (图片Y ＜ 0 或 图片Y ≥ 变量_00C10225)
        返回 (假)
    .如果真结束
    BMP图片 [变量_01C10225 ＋ (图片Y × 变量_FFC00225 ＋ 图片X) × 3 ＋ 1] ＝ 图片B
    BMP图片 [变量_01C10225 ＋ (图片Y × 变量_FFC00225 ＋ 图片X) × 3 ＋ 2] ＝ 图片G
    BMP图片 [变量_01C10225 ＋ (图片Y × 变量_FFC00225 ＋ 图片X) × 3 ＋ 3] ＝ 图片R
    返回 (真)

.子程序 图片_加水印, 字节集, 公开, 给24位图加水印,如不是24位图请先转换
    .参数 源图_图数据, 字节集
    .参数 水印_图数据, 字节集
    .参数 水印图_左边, 整数型, 可空, 默认：水印右边空白留20，水印左边程序自动计算
    .参数 水印图_顶边, 整数型, 可空, 默认：水印底边空白留20，水印顶边程序自动计算
    .参数 透明颜色, 整数型, 可空, 默认：白色
    .局部变量 变量_07C10225, 字节集
    .局部变量 变量_08C10225, 整数型
    .局部变量 变量_09C10225, 整数型
    .局部变量 变量_0AC10225, 整数型
    .局部变量 变量_0BC10225, 整数型
    .局部变量 变量_0CC10225, 整数型
    .局部变量 变量_0DC10225, 整数型
    .局部变量 变量_0EC10225, 整数型
    .局部变量 变量_0FC10225, 整数型
    .局部变量 变量_10C10225, 整数型
    .局部变量 变量_11C10225, 整数型
    .局部变量 变量_12C10225, 整数型
    .局部变量 变量_13C10225, 整数型
    .局部变量 变量_14C10225, 整数型
    .局部变量 变量_15C10225, 整数型
    .局部变量 变量_16C10225, 整数型
    .局部变量 变量_17C10225, 整数型
    .局部变量 变量_18C10225, 整数型
    .局部变量 变量_19C10225, 整数型
    .局部变量 变量_1AC10225, 整数型
    .局部变量 变量_1BC10225, 整数型

    .如果真 (取字节集数据 (源图_图数据, #短整数型, 29) ≠ 24 或 取字节集数据 (水印_图数据, #短整数型, 29) ≠ 24)
        返回 ({ })
    .如果真结束
    透明颜色 ＝ 选择 (是否为空 (透明颜色), 16777215, 透明颜色)
    变量_08C10225 ＝ 取字节集数据 (源图_图数据, #短整数型, 11)
    变量_09C10225 ＝ 取字节集数据 (源图_图数据, #整数型, 19)
    变量_0AC10225 ＝ 取字节集数据 (源图_图数据, #整数型, 23)
    变量_0BC10225 ＝ 位与 (变量_09C10225, 3)
    变量_0CC10225 ＝ 变量_09C10225 × 3 ＋ 变量_0BC10225
    变量_0DC10225 ＝ 变量_0CC10225 × 变量_0AC10225
    变量_0EC10225 ＝ 变量_0DC10225 ＋ 变量_08C10225
    变量_0FC10225 ＝ 取字节集数据 (水印_图数据, #短整数型, 11)
    变量_10C10225 ＝ 取字节集数据 (水印_图数据, #整数型, 19)
    变量_11C10225 ＝ 取字节集数据 (水印_图数据, #整数型, 23)
    变量_12C10225 ＝ 位与 (变量_10C10225, 3)
    变量_13C10225 ＝ 变量_10C10225 × 3 ＋ 变量_12C10225
    变量_14C10225 ＝ 变量_13C10225 × 变量_11C10225
    变量_15C10225 ＝ 变量_14C10225 ＋ 变量_0FC10225
    .如果真 (是否为空 (水印图_左边))
        水印图_左边 ＝ 变量_09C10225 － 变量_10C10225 － 20
    .如果真结束
    .如果真 (是否为空 (水印图_顶边))
        水印图_顶边 ＝ 变量_0AC10225 － 变量_11C10225 － 20
    .如果真结束
    .如果真 (水印图_左边 ＜ 0)
        水印图_左边 ＝ 0
    .如果真结束
    .如果真 (水印图_顶边 ＜ 0)
        水印图_顶边 ＝ 0
    .如果真结束
    .如果真 (变量_0AC10225 ＜ 变量_11C10225)
        变量_11C10225 ＝ 变量_0AC10225
    .如果真结束
    .如果真 (变量_09C10225 ＜ 变量_10C10225)
        变量_10C10225 ＝ 变量_09C10225
    .如果真结束
    .如果真 (变量_09C10225 － 水印图_左边 － 变量_10C10225 ＜ 0)
        变量_10C10225 ＝ 变量_09C10225 － 水印图_左边
    .如果真结束
    .如果真 (变量_0AC10225 － 水印图_顶边 － 变量_11C10225 ＜ 0)
        变量_11C10225 ＝ 变量_0AC10225 － 水印图_顶边
    .如果真结束
    变量_07C10225 ＝ 源图_图数据
    .计次循环首 (变量_11C10225, 变量_1AC10225)
        变量_18C10225 ＝ 变量_0EC10225 － (水印图_顶边 ＋ 变量_1AC10225) × 变量_0CC10225 ＋ 水印图_左边 × 3
        变量_19C10225 ＝ 变量_15C10225 － 变量_1AC10225 × 变量_13C10225
        .计次循环首 (变量_10C10225, )
            .如果真 (取颜色值 (水印_图数据 [变量_19C10225 ＋ 3], 水印_图数据 [变量_19C10225 ＋ 2], 水印_图数据 [变量_19C10225 ＋ 1]) ≠ 透明颜色)
                变量_07C10225 [变量_18C10225 ＋ 1] ＝ 水印_图数据 [变量_19C10225 ＋ 1]
                变量_07C10225 [变量_18C10225 ＋ 2] ＝ 水印_图数据 [变量_19C10225 ＋ 2]
                变量_07C10225 [变量_18C10225 ＋ 3] ＝ 水印_图数据 [变量_19C10225 ＋ 3]
            .如果真结束
            变量_18C10225 ＝ 变量_18C10225 ＋ 3
            变量_19C10225 ＝ 变量_19C10225 ＋ 3
        .计次循环尾 ()
    .计次循环尾 ()
    返回 (变量_07C10225)

.子程序 图片_转换, 逻辑型, 公开, 支持bmp、jpg、gif、tiff、png互转；成功返回转换好的图片数据，失败返回空字节集；
    .参数 图像数据, 字节集, , 被转换的图像数据；
    .参数 转换格式, 整数型, , 要转换成的图像格式：1=bmp；2=jpg；3=gif；4=tiff；5=png；
    .参数 保存路径, 文本型, 可空, 把转换后的图像保存到指定位置；
    .参数 返回数据, 字节集, 参考 可空, 变量储存返回数据.
    .参数 含透明色, 逻辑型, 可空, 转换PNG图片时是否需要处理透明色，可为空，默认不处理。
    .局部变量 变量_21C10225, 字节集
    .局部变量 变量_22C10225, GUID
    .局部变量 变量_23C10225, 文本型
    .局部变量 变量_24C10225, 整数型
    .局部变量 变量_25C10225, 整数型
    .局部变量 变量_26C10225, 整数型
    .局部变量 变量_27C10225, 整数型
    .局部变量 变量_28C10225, 整数型
    .局部变量 变量_29C10225, 整数型
    .局部变量 变量_2AC10225, 整数型
    .局部变量 变量_2BC10225, 整数型
    .局部变量 变量_2CC10225, 整数型
    .局部变量 变量_2DC10225, 逻辑型
    .局部变量 变量_2EC10225, 自定义_29AB0141
    .局部变量 变量_2FC10225, 整数型
    .局部变量 变量_30C10225, 整数型
    .局部变量 变量_31C10225, 文本型

    .如果真 (取字节集长度 (图像数据) ＜ 3)
        返回 (假)
    .如果真结束
    变量_2EC10225.成员_2AAB0135 ＝ 1
    GdiplusStartup (变量_2FC10225, 变量_2EC10225, 0)
    .判断开始 (转换格式 ＝ 1)
        变量_23C10225 ＝ “{557CF400-1A04-11D3-9A73-0000F81EF32E}”
        变量_31C10225 ＝ “.bmp”
    .判断 (转换格式 ＝ 2)
        变量_23C10225 ＝ “{557CF401-1A04-11D3-9A73-0000F81EF32E}”
        变量_31C10225 ＝ “.jpg”
    .判断 (转换格式 ＝ 3)
        变量_23C10225 ＝ “{557CF402-1A04-11D3-9A73-0000F81EF32E}”
        变量_31C10225 ＝ “.gif”
    .判断 (转换格式 ＝ 4)
        变量_23C10225 ＝ “{557CF405-1A04-11D3-9A73-0000F81EF32E}”
        变量_31C10225 ＝ “.tiff”
    .判断 (转换格式 ＝ 5)
        变量_23C10225 ＝ “{557CF406-1A04-11D3-9A73-0000F81EF32E}”
        变量_31C10225 ＝ “.png”
    .默认
        
    .判断结束
    
    
    变量_22C10225 ＝ COM_StringToCLSID (变量_23C10225)
    变量_24C10225 ＝ GlobalAlloc (2, 取字节集长度 (图像数据))
    CreateStreamOnHGlobal (变量_24C10225, 假, 变量_25C10225)
    
    变量_26C10225 ＝ GlobalLock (变量_24C10225)
    写到内存 (图像数据, 变量_26C10225, 取字节集长度 (图像数据))
    GlobalUnlock (变量_24C10225)
    
    变量_27C10225 ＝ lstrcpyn_整数型 (变量_25C10225, 变量_25C10225, 0)
    DLL_GdipCreateBitmapFromStream (取字节集数据 (指针到字节集 (变量_27C10225, 4), #整数型, ), 变量_28C10225)
    .如果真 (含透明色)
        GdipCreateHBITMAPFromBitmap (变量_28C10225, 变量_30C10225, #白色)
        GdipCreateBitmapFromHBITMAP (变量_30C10225, 0, 变量_28C10225)
        DeleteObject (变量_30C10225)
    .如果真结束
    
    CreateStreamOnHGlobal (0, 真, 变量_29C10225)
    变量_27C10225 ＝ lstrcpyn_整数型 (变量_29C10225, 变量_29C10225, 0)
    变量_27C10225 ＝ 取字节集数据 (指针到字节集 (变量_27C10225, 4), #整数型, )
    
    GDIpSaveImageToStream_GUID (变量_28C10225, 变量_27C10225, 变量_22C10225, 0)
    DLL_GetHGlobalFromStream2 (变量_27C10225, 变量_2AC10225)
    变量_2BC10225 ＝ GlobalLock (变量_2AC10225)
    变量_2CC10225 ＝ GlobalSize (变量_2AC10225)
    .如果真 (变量_2BC10225 ≠ 0)
        变量_21C10225 ＝ 取空白字节集 (变量_2CC10225)
        RtlMoveMemory_int2Bytes (变量_21C10225, 变量_2BC10225, 变量_2CC10225)
        .如果真 (删首尾空 (保存路径) ≠ “”)
            写到文件 (选择 (到小写 (取文本右边 (保存路径, 取文本长度 (变量_31C10225))) ≠ 到小写 (变量_31C10225), 保存路径 ＋ 变量_31C10225, 保存路径), 变量_21C10225)
        .如果真结束
        返回数据 ＝ 变量_21C10225
        变量_2DC10225 ＝ 真
    .如果真结束
    COM_Release (变量_25C10225)
    COM_Release (变量_29C10225)
    GlobalUnlock (变量_2AC10225)
    GlobalFree (变量_2AC10225)
    GdipDisposeImage (变量_28C10225)
    GlobalFree (变量_24C10225)
    GdiplusShutdown (变量_2FC10225)
    返回 (变量_2DC10225)

.子程序 图片_转换1, 字节集, 公开
    .参数 参_原始图片, 字节集
    .参数 参_转换格式, 整数型, , 要转换成的图像格式：1=bmp；2=jpg；3=gif；4=tiff；5=png；
    .参数 参_输出质量, 整数型, , 0-100
    .局部变量 变量_35C10225, 类_图像格式转换类
    .局部变量 变量_36C10225, 字节集

    .如果真 (变量_35C10225.载入图像 (参_原始图片) ＝ 假)
        返回 ({ })
    .如果真结束
    变量_36C10225 ＝ 变量_35C10225.转换到字节集 (参_转换格式, 参_输出质量)
    返回 (变量_36C10225)

.子程序 图片_转换Ex, 字节集, 公开, 支持bmp、jpg、gif、tiff、png互转；成功返回转换好的图片数据，失败返回空字节集；
    .参数 图像数据, 字节集, , 被转换的图像数据；
    .参数 转换格式, 整数型, 可空, 要转换成的图像格式：1=bmp；2=jpg；3=gif；4=tiff；其他=png；
    .参数 保存路径, 文本型, 可空, 把转换后的图像保存到指定位置；
    .参数 含透明色, 逻辑型, 可空, 转换PNG图片时是否需要处理透明色，可为空，默认不处理。
    .局部变量 变量_3BC10225, 字节集
    .局部变量 变量_3CC10225, 文本型
    .局部变量 变量_3DC10225, 整数型
    .局部变量 变量_3EC10225, 整数型
    .局部变量 变量_3FC10225, 整数型
    .局部变量 变量_40C10225, 整数型
    .局部变量 变量_41C10225, 整数型
    .局部变量 变量_42C10225, 整数型
    .局部变量 变量_43C10225, 整数型
    .局部变量 变量_44C10225, 整数型
    .局部变量 变量_45C10225, 整数型
    .局部变量 变量_46C10225, 字节集
    .局部变量 变量_47C10225, 整数型
    .局部变量 变量_48C10225, 文本型
    .局部变量 变量_49C10225, 整数型
    .局部变量 变量_4AC10225, 自定义_29AB0141
    .局部变量 变量_4BC10225, 字节集

    .如果真 (取字节集长度 (图像数据) ＜ 3)
        返回 ({ })
    .如果真结束
    
    
    
    变量_4AC10225.成员_2AAB0135 ＝ 1
    变量_49C10225 ＝ GdiplusStartup (变量_47C10225, 变量_4AC10225, 0)
    .如果真 (变量_49C10225 ≠ 0)
        返回 ({ })
    .如果真结束
    .判断开始 (转换格式 ＝ 1)
        变量_3CC10225 ＝ “{557CF400-1A04-11D3-9A73-0000F81EF32E}”
        变量_48C10225 ＝ “.bmp”
    .判断 (转换格式 ＝ 2)
        变量_3CC10225 ＝ “{557CF401-1A04-11D3-9A73-0000F81EF32E}”
        变量_48C10225 ＝ “.jpg”
    .判断 (转换格式 ＝ 3)
        变量_3CC10225 ＝ “{557CF402-1A04-11D3-9A73-0000F81EF32E}”
        变量_48C10225 ＝ “.gif”
    .判断 (转换格式 ＝ 4)
        变量_3CC10225 ＝ “{557CF405-1A04-11D3-9A73-0000F81EF32E}”
        变量_48C10225 ＝ “.tiff”
    .默认
        变量_3CC10225 ＝ “{557CF406-1A04-11D3-9A73-0000F81EF32E}”
        变量_48C10225 ＝ “.png”
    .判断结束
    
    
    变量_3BC10225 ＝ 取空白字节集 (16)
    变量_4BC10225 ＝ 编码_Ansi到Unicode (变量_3CC10225, )
    DLL_CLSIDFromString4 (取指针_字节集型 (变量_4BC10225), 变量_3BC10225)
    
    
    变量_3DC10225 ＝ GlobalAlloc (66, 取字节集长度 (图像数据))
    变量_42C10225 ＝ GlobalLock (变量_3DC10225)
    RtlMoveMemory (变量_42C10225, 取指针_字节集型 (图像数据), 取字节集长度 (图像数据))
    .如果真 (GlobalUnlock (变量_3DC10225) ≠ 0)
        类变量_AEC00215 ＝ “解锁原图片内存失败”
    .如果真结束
    
    DLL_CreateStreamOnHGlobal (变量_3DC10225, 0, 变量_41C10225)
    变量_49C10225 ＝ DLL_GdipCreateBitmapFromStream (变量_41C10225, 变量_3FC10225)
    .如果真 (变量_49C10225 ≠ 0)
        SafeRelease (变量_41C10225)
        .如果真 (GlobalFree (变量_3DC10225) ≠ 0)
            类变量_AEC00215 ＝ “从流里创建位图失败,并且释放内存失败”
        .如果真结束
        返回 ({ })
    .如果真结束
    
    .如果真 (含透明色)
        GdipCreateHBITMAPFromBitmap (变量_3FC10225, 变量_40C10225, #白色)
        GdipDisposeImage (变量_3FC10225)
        GdipCreateBitmapFromHBITMAP (变量_40C10225, 0, 变量_3FC10225)
    .如果真结束
    
    DLL_CreateStreamOnHGlobal (0, 0, 变量_43C10225)
    DLL_GdipSaveImageToStream2 (变量_3FC10225, 变量_43C10225, 变量_3BC10225, 0)
    DLL_GetHGlobalFromStream2 (变量_43C10225, 变量_3EC10225)
    
    变量_44C10225 ＝ GlobalLock (变量_3EC10225)
    变量_45C10225 ＝ GlobalSize (变量_3EC10225)
    .如果真 (变量_44C10225 ≠ 0)
        变量_46C10225 ＝ 取空白字节集 (变量_45C10225)
        RtlMoveMemory (取指针_字节集型 (变量_46C10225), 变量_44C10225, 变量_45C10225)
        .如果真 (删首尾空 (保存路径) ≠ “”)
            写到文件 (选择 (到小写 (取文本右边 (保存路径, 取文本长度 (变量_48C10225))) ≠ 到小写 (变量_48C10225), 保存路径 ＋ 变量_48C10225, 保存路径), 变量_46C10225)
        .如果真结束
        
    .如果真结束
    SafeRelease (变量_41C10225)
    SafeRelease (变量_43C10225)
    .如果真 (GlobalUnlock (变量_3EC10225) ≠ 0)
        类变量_AEC00215 ＝ “解锁转换后的内存失败”
    .如果真结束
    
    .如果真 (GlobalFree (变量_3EC10225) ≠ 0)
        类变量_AEC00215 ＝ “释放转换后的内存失败”
    .如果真结束
    
    .如果真 (变量_40C10225 ≠ 0)
        .如果真 (DeleteObject (变量_40C10225) ＝ 0)
            类变量_AEC00215 ＝ “删除位图失败”
        .如果真结束
        
    .如果真结束
    变量_49C10225 ＝ GdipDisposeImage (变量_3FC10225)
    .如果真 (变量_49C10225 ≠ 0)
        类变量_AEC00215 ＝ “释放gdi+位图失败”
    .如果真结束
    .如果真 (GlobalFree (变量_3DC10225) ≠ 0)
        类变量_AEC00215 ＝ “释放原图片内存失败”
    .如果真结束
    GdiplusShutdown (变量_47C10225)
    返回 (变量_46C10225)

.子程序 图片_转换Ex_取最后错误, 文本型, 公开
    返回 (类变量_AEC00215)

.子程序 图标_取数量, 整数型, 公开, 取出文件的图标数量
    .参数 文件路径, 文本型

    返回 (ExtractIconA (0, 文件路径, -1))

.子程序 图片_取句柄, 整数型, 公开, 取图片句柄,成功返回图片句柄,失败返回0
    .参数 参_图片, 字节集, , 欲添加为菜单图片的资源
    .局部变量 变量_4FC10225, 整数型
    .局部变量 变量_50C10225, 整数型

    变量_50C10225 ＝ 取数组成员数 (全局变量_4EC10205) ＋ 1
    重定义数组 (全局变量_4EC10205, 真, 变量_50C10225)
    CoInitialize (0)
    .如果真 (全局变量_4EC10205 [变量_50C10225].创建图片对象 (参_图片))
        CoUninitialize ()
        返回 (全局变量_4EC10205 [变量_50C10225].读数值属性 (“handle”, ))
    .如果真结束
    CoUninitialize ()
    返回 (0)

.子程序 图标_取句柄, 整数型, 公开, 取“位图 鼠标图片 图标“句柄,成功返回句柄,失败返回0
    .参数 图片路径, 文本型
    .参数 图像类型, 整数型, 可空, IMAGE_ 开头的常量  默认为 #IMAGE_ICON 图标
    .局部变量 变量_53C10225, 整数型
    .局部变量 变量_54C10225, 整数型

    变量_54C10225 ＝ GetSystemMetrics (71)
    变量_53C10225 ＝ GetSystemMetrics (72)
    .如果真 (是否为空 (图像类型))
        图像类型 ＝ #IMAGE_ICON
    .如果真结束
    返回 (LoadImage (0, 图片路径, 图像类型, 变量_54C10225, 变量_53C10225, 16))

.子程序 颜色_取反色, 整数型, 公开, 取一个颜色的反色
    .参数 要取反色的10进制颜色, 整数型
    .局部变量 变量_56C10225, 字节集

    变量_56C10225 ＝ 到字节集 (要取反色的10进制颜色)
    变量_56C10225 [1] ＝ 255 － 变量_56C10225 [1]
    变量_56C10225 [2] ＝ 255 － 变量_56C10225 [2]
    变量_56C10225 [3] ＝ 255 － 变量_56C10225 [3]
    返回 (取字节集数据 (变量_56C10225, #整数型, ))

.子程序 图片_后台截图, 字节集, 公开, 后台截图
    .参数 窗口句柄, 整数型, , 要截取的图片的窗口句柄
    .局部变量 变量_58C10225, 精易_矩形
    .局部变量 变量_59C10225, 整数型
    .局部变量 变量_5AC10225, 整数型
    .局部变量 变量_5BC10225, 整数型
    .局部变量 变量_5CC10225, 整数型
    .局部变量 变量_5DC10225, 自定义_7D4D0141
    .局部变量 变量_5EC10225, 字节集
    .局部变量 变量_5FC10225, 自定义_7C4D0141
    .局部变量 变量_60C10225, 字节集
    .局部变量 变量_61C10225, 自定义_7A4D0141
    .局部变量 变量_62C10225, 字节集

    .如果真 (取反 (窗口_句柄是否有效 (窗口句柄)))
        返回 ({ })
    .如果真结束
    GetWindowRect (窗口句柄, 变量_58C10225)
    变量_59C10225 ＝ GetDC (0)
    变量_5AC10225 ＝ CreateCompatibleDC (变量_59C10225)
    变量_5BC10225 ＝ CreateCompatibleBitmap (变量_59C10225, 变量_58C10225.右边 － 变量_58C10225.左边, 变量_58C10225.底边 － 变量_58C10225.顶边)
    变量_5CC10225 ＝ SelectObject (变量_5AC10225, 变量_5BC10225)
    .如果真 (取反 (PrintWindow (窗口句柄, 变量_5AC10225, 0)))
        SelectObject (变量_5AC10225, 变量_5CC10225)
        DeleteObject (变量_5BC10225)
        DeleteDC (变量_5AC10225)
        ReleaseDC (0, 变量_59C10225)
        返回 ({ })
    .如果真结束
    GetObjectA (变量_5BC10225, 5 × 4 ＋ 2 ＋ 2, 变量_5DC10225)
    变量_61C10225.成员_7E4D0135.成员_804D0135 ＝ 4 × 11
    GetDIBits1 (变量_5AC10225, 变量_5BC10225, 0, 0, 0, 变量_61C10225, 0)
    变量_5EC10225 ＝ 取空白字节集 (变量_61C10225.成员_7E4D0135.成员_864D0135)
    变量_61C10225.成员_7E4D0135.成员_854D0135 ＝ 0
    GetDIBits (变量_5AC10225, 变量_5BC10225, 0, 变量_5DC10225.成员_924D0135, 变量_5EC10225, 变量_61C10225, 0)
    
    变量_62C10225 ＝ 取空白字节集 (变量_61C10225.成员_7E4D0135.成员_804D0135)
    RtlMoveMemory_BITMAPINFO (变量_62C10225, 变量_61C10225, 变量_61C10225.成员_7E4D0135.成员_804D0135)
    
    变量_5FC10225.成员_8B4D0135 ＝ 19778
    变量_5FC10225.成员_8F4D0135 ＝ 2 × 4 ＋ 3 × 2 ＋ 变量_61C10225.成员_7E4D0135.成员_804D0135
    变量_5FC10225.成员_8C4D0135 ＝ 变量_5FC10225.成员_8F4D0135 ＋ 变量_61C10225.成员_7E4D0135.成员_864D0135
    变量_5FC10225.成员_8D4D0135 ＝ 0
    变量_5FC10225.成员_8E4D0135 ＝ 0
    变量_60C10225 ＝ 取空白字节集 (14)
    RtlMoveMemory_BITMAPFILEHEADER (变量_60C10225, 变量_5FC10225, 14)
    SelectObject (变量_5AC10225, 变量_5CC10225)
    DeleteObject (变量_5BC10225)
    DeleteDC (变量_5AC10225)
    ReleaseDC (0, 变量_59C10225)
    返回 (变量_60C10225 ＋ 变量_62C10225 ＋ 变量_5EC10225)

.子程序 图片_后台区域截图, 字节集, 公开, 可后台截取指定位置大小的图片。窗口不能最小化，否则会导致截取失败。
    .参数 窗口句柄, 整数型, , 要截取的图片的窗口句柄
    .参数 欲截取的左边, 整数型
    .参数 欲截取的顶边, 整数型
    .参数 欲截取的宽度, 整数型
    .参数 欲截取的高度, 整数型

    返回 (图片_取图片区域 (图片_后台截图 (窗口句柄), 欲截取的左边, 欲截取的顶边, 欲截取的宽度, 欲截取的高度))

.子程序 图片_取图片区域, 字节集, 公开, 提供一张图片，取出指定位置大小的图片。
    .参数 原位图, 字节集, , 24位BMP位图
    .参数 图片左边, 整数型, , 欲取出的图片左边
    .参数 图片顶边, 整数型, , 欲取出的图片顶边
    .参数 图片宽度, 整数型, , 欲取出的图片宽度
    .参数 图片高度, 整数型, , 欲取出的图片高度
    .局部变量 变量_6DC10225, 整数型
    .局部变量 变量_6EC10225, 整数型
    .局部变量 变量_6FC10225, 整数型
    .局部变量 变量_70C10225, 整数型
    .局部变量 变量_71C10225, 字节集
    .局部变量 变量_72C10225, 自定义_7B4D0141
    .局部变量 变量_73C10225, 自定义_7C4D0141
    .局部变量 变量_74C10225, 整数型
    .局部变量 变量_75C10225, 整数型
    .局部变量 变量_76C10225, 整数型
    .局部变量 变量_77C10225, 整数型
    .局部变量 变量_78C10225, 字节集
    .局部变量 变量_79C10225, 整数型
    .局部变量 变量_7AC10225, 整数型
    .局部变量 变量_7BC10225, 整数型
    .局部变量 变量_7CC10225, 整数型

    变量_6DC10225 ＝ 取字节集数据 (取字节集中间 (原位图, 19, 4), #整数型, )
    变量_6EC10225 ＝ 取字节集数据 (取字节集中间 (原位图, 23, 4), #整数型, )
    变量_6FC10225 ＝ 取字节集数据 (取字节集中间 (原位图, 29, 2), #短整数型, )
    变量_70C10225 ＝ 取字节集数据 (取字节集中间 (原位图, 31, 4), #整数型, )
    .如果真 (变量_70C10225 ≠ 0)
        返回 ({ })
    .如果真结束
    .如果真 (变量_6FC10225 ＝ 32)
        变量_76C10225 ＝ 54
        变量_77C10225 ＝ 4
    .如果真结束
    .如果真 (变量_6FC10225 ＝ 24)
        变量_76C10225 ＝ 54
        变量_77C10225 ＝ 3
    .如果真结束
    .如果真 (变量_6FC10225 ＝ 16)
        变量_76C10225 ＝ 54
        变量_77C10225 ＝ 2
    .如果真结束
    .如果真 (变量_6FC10225 ＝ 8)
        变量_76C10225 ＝ 1078
        变量_77C10225 ＝ 1
        变量_78C10225 ＝ 取字节集中间 (原位图, 55, 1024)
    .如果真结束
    .如果真 (变量_6FC10225 ＜ 8)
        输出调试文本 (“错误！ 图像位深小于8！”)
        返回 ({ })
    .如果真结束
    
    
    
    .如果真 (图片左边 ＜ 0)
        图片左边 ＝ 0
    .如果真结束
    .如果真 (图片顶边 ＜ 0)
        图片顶边 ＝ 0
    .如果真结束
    .如果真 (图片左边 ＞ 变量_6DC10225 或 图片顶边 ＞ 变量_6EC10225)
        输出调试文本 (“参数错误，错误原因：图片左边或图片顶边小于截取出来图片的宽度或高度”)
        返回 ({ })
    .如果真结束
    .如果真 (图片宽度 ≤ 0 或 图片高度 ≤ 0)
        输出调试文本 (“参数错误，错误原因：图片宽度或图片高度小于等于0”)
        返回 ({ })
    .如果真结束
    .如果真 (图片左边 ＋ 图片宽度 ＞ 变量_6DC10225)
        图片宽度 ＝ 变量_6DC10225 － 图片左边
    .如果真结束
    .如果真 (图片顶边 ＋ 图片高度 ＞ 变量_6EC10225)
        图片高度 ＝ 变量_6EC10225 － 图片顶边
    .如果真结束
    
    变量_7BC10225 ＝ 左移 (右移 (变量_6DC10225 × 变量_6FC10225 ＋ 31, 5), 2)
    变量_7AC10225 ＝ 左移 (右移 (图片宽度 × 变量_6FC10225 ＋ 31, 5), 2)
    变量_74C10225 ＝ 变量_7AC10225 × 图片高度
    变量_71C10225 ＝ 取空白字节集 (变量_74C10225 ＋ 54 ＋ 取字节集长度 (变量_78C10225))
    变量_73C10225.成员_8B4D0135 ＝ 19778
    变量_73C10225.成员_8F4D0135 ＝ 变量_76C10225
    变量_73C10225.成员_8C4D0135 ＝ 变量_76C10225 ＋ 变量_74C10225
    RtlMoveMemory_BITMAPFILEHEADER_字节型 (变量_71C10225 [1], 变量_73C10225, 14)
    变量_72C10225.成员_804D0135 ＝ 40
    变量_72C10225.成员_814D0135 ＝ 图片宽度
    变量_72C10225.成员_824D0135 ＝ 图片高度
    变量_72C10225.成员_834D0135 ＝ 1
    变量_72C10225.成员_844D0135 ＝ 变量_6FC10225
    RtlMoveMemory_BITMAPINFOHEADER (变量_71C10225 [15], 变量_72C10225, 40)
    .如果真 (变量_6FC10225 ＝ 8)
        RtlMoveMemory_字节型 (变量_71C10225 [55], 变量_78C10225 [1], 1024)
    .如果真结束
    变量_79C10225 ＝ 变量_7BC10225 × (变量_6EC10225 － 图片高度 － 图片顶边) ＋ 图片左边 × 变量_77C10225
    .计次循环首 (图片高度, 变量_75C10225)
        RtlMoveMemory_字节型 (变量_71C10225 [(变量_75C10225 － 1) × 变量_7AC10225 ＋ 变量_76C10225 ＋ 1], 原位图 [变量_76C10225 ＋ 变量_79C10225 ＋ (变量_75C10225 － 1) × 变量_7BC10225 ＋ 1], 变量_7AC10225)
    .计次循环尾 ()
    返回 (变量_71C10225)

.子程序 图片_屏幕截图, 字节集, 公开, 截取桌面指定大小的图片
    .参数 屏幕宽度, 整数型
    .参数 屏幕高度, 整数型
    .参数 图片位数, 整数型, 可空, 这里支持 4 8 24 32 默认是24位图!
    .局部变量 变量_80C10225, 整数型
    .局部变量 变量_81C10225, 整数型
    .局部变量 变量_82C10225, 整数型
    .局部变量 变量_83C10225, 字节集
    .局部变量 变量_84C10225, 自定义_7C4D0141
    .局部变量 变量_85C10225, 字节集
    .局部变量 变量_86C10225, 自定义_71960141
    .局部变量 变量_87C10225, 字节集
    .局部变量 变量_88C10225, 字节集
    .局部变量 变量_89C10225, 整数型

    .判断开始 (图片位数 ＝ 0)
        变量_86C10225.成员_76960135 ＝ 24
    .默认
        变量_86C10225.成员_76960135 ＝ 图片位数
    .判断结束
    变量_86C10225.成员_75960135 ＝ 1
    变量_86C10225.成员_73960135 ＝ 屏幕宽度
    变量_86C10225.成员_74960135 ＝ 屏幕高度
    变量_86C10225.成员_78960135 ＝ 变量_86C10225.成员_73960135 × 变量_86C10225.成员_74960135 × 变量_86C10225.成员_76960135 ÷ 8
    变量_86C10225.成员_72960135 ＝ 40
    变量_86C10225.成员_77960135 ＝ 0
    
    变量_89C10225 ＝ 取位图深度 (变量_86C10225.成员_76960135)
    变量_83C10225 ＝ 取空白字节集 (变量_86C10225.成员_78960135)
    变量_88C10225 ＝ 取空白字节集 (变量_89C10225)
    变量_80C10225 ＝ GetDC (0)
    变量_81C10225 ＝ CreateCompatibleDC (变量_80C10225)
    变量_82C10225 ＝ CreateDIBSection (变量_81C10225, 变量_86C10225, 1, 0, 0, 0)
    SelectObject (变量_81C10225, 变量_82C10225)
    GetDIBColorTable (变量_81C10225, 0, 变量_89C10225, 变量_88C10225)
    
    StretchBlt (变量_81C10225, 0, 0, 变量_86C10225.成员_73960135, 变量_86C10225.成员_74960135, 变量_80C10225, 0, 变量_86C10225.成员_74960135, 变量_86C10225.成员_73960135, －变量_86C10225.成员_74960135, 13369376)
    GetBitmapBits (变量_82C10225, 变量_86C10225.成员_78960135, 变量_83C10225)
    
    
    
    
    
    变量_87C10225 ＝ 取空白字节集 (变量_86C10225.成员_72960135)
    RtlMoveMemory_位图信息 (变量_87C10225, 变量_86C10225, 变量_86C10225.成员_72960135)
    变量_84C10225.成员_8B4D0135 ＝ 19778
    变量_84C10225.成员_8F4D0135 ＝ 变量_89C10225 ＋ 54
    变量_84C10225.成员_8C4D0135 ＝ 54 ＋ 变量_86C10225.成员_78960135
    变量_85C10225 ＝ 取空白字节集 (14)
    RtlMoveMemory_BITMAPFILEHEADER (变量_85C10225, 变量_84C10225, 14)
    DeleteObject (变量_82C10225)
    DeleteDC (变量_81C10225)
    ReleaseDC (0, 变量_80C10225)
    返回 (变量_85C10225 ＋ 变量_87C10225 ＋ 变量_88C10225 ＋ 变量_83C10225)

.子程序 图片_屏幕区域截图, 字节集, 公开, 截取桌面指定位置和大小的图片
    .参数 欲截取的左边, 整数型
    .参数 欲截取的顶边, 整数型
    .参数 欲截取的宽度, 整数型
    .参数 欲截取的高度, 整数型
    .局部变量 变量_8EC10225, 整数型
    .局部变量 变量_8FC10225, 整数型
    .局部变量 变量_90C10225, 字节集
    .局部变量 变量_91C10225, 字节集
    .局部变量 变量_92C10225, 自定义_7B4D0141
    .局部变量 变量_93C10225, 整数型
    .局部变量 变量_94C10225, 整数型
    .局部变量 变量_95C10225, 整数型
    .局部变量 变量_96C10225, 整数型
    .局部变量 变量_97C10225, 整数型

    变量_93C10225 ＝ GetDC (0)
    变量_94C10225 ＝ GetDeviceCaps (变量_93C10225, 12)
    变量_95C10225 ＝ CreateCompatibleDC (变量_93C10225)
    变量_96C10225 ＝ CreateCompatibleBitmap (变量_93C10225, 欲截取的宽度, 欲截取的高度)
    变量_97C10225 ＝ SelectObject (变量_95C10225, 变量_96C10225)
    BitBlt (变量_95C10225, 0, 0, 欲截取的宽度, 欲截取的高度, 变量_93C10225, 欲截取的左边, 欲截取的顶边, 13369376)
    ReleaseDC (0, 变量_93C10225)
    SelectObject (变量_95C10225, 变量_97C10225)
    变量_92C10225.成员_804D0135 ＝ 40
    变量_92C10225.成员_814D0135 ＝ 欲截取的宽度
    变量_92C10225.成员_824D0135 ＝ 欲截取的高度
    变量_92C10225.成员_834D0135 ＝ 1
    变量_92C10225.成员_844D0135 ＝ 到短整数 (变量_94C10225)
    变量_8EC10225 ＝ 左移 (右移 (欲截取的宽度 × 变量_94C10225 ＋ 31, 5), 2)
    变量_91C10225 ＝ 取空白字节集 (变量_92C10225.成员_804D0135 ＋ 变量_8EC10225 × 欲截取的高度)
    .如果真 (变量_91C10225 ＝ { })
        返回 ({ })
    .如果真结束
    RtlMoveMemory_BITMAPINFOHEADER (变量_91C10225 [1], 变量_92C10225, 变量_92C10225.成员_804D0135)
    .如果 (GetDIBits2 (变量_95C10225, 变量_96C10225, 0, 欲截取的高度, 变量_91C10225 [变量_92C10225.成员_804D0135 ＋ 1], 变量_91C10225 [1], 0) ≠ 0)
        变量_8FC10225 ＝ 14 ＋ 变量_8EC10225 × 欲截取的高度
        变量_91C10225 ＝ 到字节集 (“BM”) ＋ 到字节集 (变量_8FC10225) ＋ { 0, 0, 0, 0, 54, 0, 0, 0 } ＋ 变量_91C10225
    .否则
        变量_91C10225 ＝ { }
    .如果结束
    DeleteObject (变量_96C10225)
    DeleteDC (变量_95C10225)
    返回 (变量_91C10225)

.子程序 取位图深度, 整数型
    .参数 变量_98C10225, 整数型

    .判断开始 (变量_98C10225 ＝ 1)
        返回 (8)
    .判断 (变量_98C10225 ＝ 4)
        返回 (64)
    .判断 (变量_98C10225 ＝ 8)
        返回 (1024)
    .默认
        返回 (0)
    .判断结束
    

.子程序 图片_通过句柄取图标, 字节集, 公开
    .参数 窗口句柄, 整数型, , 当前窗口句柄
    .参数 图标句柄, 整数型
    .参数 图标宽度, 整数型, 可空
    .参数 图标高度, 整数型, 可空
    .参数 背景颜色, 整数型, 可空
    .局部变量 变量_9EC10225, 精易_矩形
    .局部变量 变量_9FC10225, 字节集
    .局部变量 变量_A0C10225, 类_位图操作
    .局部变量 变量_A1C10225, 整数型
    .局部变量 变量_A2C10225, 整数型
    .局部变量 变量_A3C10225, 整数型
    .局部变量 变量_A4C10225, 整数型
    .局部变量 变量_A5C10225, 整数型
    .局部变量 变量_A6C10225, 整数型

    .如果真 (是否为空 (图标宽度))
        图标宽度 ＝ 32
    .如果真结束
    .如果真 (是否为空 (图标高度))
        图标高度 ＝ 32
    .如果真结束
    .如果真 (是否为空 (背景颜色))
        背景颜色 ＝ #白色
    .如果真结束
    变量_9EC10225.顶边 ＝ 0
    变量_9EC10225.左边 ＝ 0
    变量_9EC10225.右边 ＝ 图标宽度
    变量_9EC10225.底边 ＝ 图标高度
    变量_A1C10225 ＝ GetDC (窗口句柄)
    变量_A2C10225 ＝ CreateCompatibleDC (变量_A1C10225)
    
    变量_A4C10225 ＝ CreateCompatibleBitmap (变量_A1C10225, 图标宽度, 图标高度)
    
    变量_A5C10225 ＝ SelectObject (变量_A2C10225, 变量_A4C10225)
    
    变量_A6C10225 ＝ CreateSolidBrush (背景颜色)
    FillRect (变量_A2C10225, 变量_9EC10225, 变量_A6C10225)
    DrawIconEx (变量_A2C10225, 0, 0, 图标句柄, 图标宽度, 图标高度, 0, 0, 3)
    变量_A0C10225.从场景创建 (变量_A2C10225, 变量_9EC10225, 32)
    变量_9FC10225 ＝ 变量_A0C10225.取出位图数据 ()
    ReleaseDC (变量_A3C10225, 变量_A1C10225)
    DeleteDC (变量_A2C10225)
    DeleteObject (变量_A5C10225)
    DeleteObject (变量_A4C10225)
    DeleteObject (变量_A6C10225)
    返回 (变量_9FC10225)

.子程序 图片_取宽度, 整数型, 公开, 快速读取图片宽度，失败返回零。
    .参数 参_图片数据, 字节集, , 支持文件路径与图片内容，路径非unicode编码，可用 到字节集()转换
    .局部变量 变量_A8C10225, 整数型
    .局部变量 变量_A9C10225, 整数型
    .局部变量 变量_AAC10225, 整数型
    .局部变量 变量_ABC10225, 整数型
    .局部变量 变量_ACC10225, 自定义_29AB0141
    .局部变量 变量_ADC10225, 整数型
    .局部变量 变量_AEC10225, 文本型
    .局部变量 变量_AFC10225, 逻辑型
    .局部变量 变量_B0C10225, 整数型
    .局部变量 变量_B1C10225, 整数型
    .局部变量 变量_B2C10225, 整数型
    .局部变量 变量_B3C10225, 整数型

    变量_AEC10225 ＝ 到文本 (参_图片数据)
    变量_AFC10225 ＝ 文件_是否存在 (变量_AEC10225)
    变量_ACC10225.成员_2AAB0135 ＝ 1
    变量_ABC10225 ＝ GdiplusStartup (变量_ADC10225, 变量_ACC10225, 0)
    .如果真 (变量_ABC10225 ＝ 0)
        .如果 (变量_AFC10225)
            变量_ABC10225 ＝ DLL_GdipLoadImageFromFile (编码_Ansi到Unicode (变量_AEC10225, ), 变量_A8C10225)
        .否则
            变量_B0C10225 ＝ 取字节集长度 (参_图片数据)
            变量_B1C10225 ＝ GlobalAlloc (#GMEM_MOVEABLE, 变量_B0C10225)
            变量_B2C10225 ＝ GlobalLock (变量_B1C10225)
            CopyMemory_Bytes2int (变量_B2C10225, 参_图片数据, 变量_B0C10225)
            变量_ABC10225 ＝ CreateStreamOnHGlobal (变量_B1C10225, 假, 变量_B3C10225)
            GdipLoadImageFromStream (变量_B3C10225, 变量_A8C10225)
            .如果真 (变量_ABC10225 ＝ 0)
                COM_Release (变量_B3C10225)
            .如果真结束
            GlobalUnlock (变量_B2C10225)
            GlobalFree (变量_B1C10225)
        .如果结束
        DLL_GdipGetImageWidth (变量_A8C10225, 变量_A9C10225)
        GdipDisposeImage (变量_A8C10225)
        GdiplusShutdown (变量_ADC10225)
    .如果真结束
    返回 (变量_A9C10225)

.子程序 图片_取高度, 整数型, 公开, 快速读取图片高度，失败返回零。
    .参数 参_图片数据, 字节集, , 支持文件路径与图片内容，路径非unicode编码，可用 到字节集()转换
    .局部变量 变量_B5C10225, 整数型
    .局部变量 变量_B6C10225, 整数型
    .局部变量 变量_B7C10225, 整数型
    .局部变量 变量_B8C10225, 整数型
    .局部变量 变量_B9C10225, 自定义_29AB0141
    .局部变量 变量_BAC10225, 整数型
    .局部变量 变量_BBC10225, 文本型
    .局部变量 变量_BCC10225, 逻辑型
    .局部变量 变量_BDC10225, 整数型
    .局部变量 变量_BEC10225, 整数型
    .局部变量 变量_BFC10225, 整数型
    .局部变量 变量_C0C10225, 整数型

    变量_BBC10225 ＝ 到文本 (参_图片数据)
    变量_BCC10225 ＝ 文件_是否存在 (变量_BBC10225)
    变量_B9C10225.成员_2AAB0135 ＝ 1
    变量_B8C10225 ＝ GdiplusStartup (变量_BAC10225, 变量_B9C10225, 0)
    .如果真 (变量_B8C10225 ＝ 0)
        .如果 (变量_BCC10225)
            变量_B8C10225 ＝ DLL_GdipLoadImageFromFile (编码_Ansi到Unicode (变量_BBC10225, ), 变量_B5C10225)
        .否则
            变量_BDC10225 ＝ 取字节集长度 (参_图片数据)
            变量_BEC10225 ＝ GlobalAlloc (#GMEM_MOVEABLE, 变量_BDC10225)
            变量_BFC10225 ＝ GlobalLock (变量_BEC10225)
            CopyMemory_Bytes2int (变量_BFC10225, 参_图片数据, 变量_BDC10225)
            CreateStreamOnHGlobal (变量_BEC10225, 假, 变量_C0C10225)
            GdipLoadImageFromStream (变量_C0C10225, 变量_B5C10225)
            .如果真 (变量_B8C10225 ＝ 0)
                COM_Release (变量_C0C10225)
            .如果真结束
            GlobalUnlock (变量_BFC10225)
            GlobalFree (变量_BEC10225)
        .如果结束
        DLL_GdipGetImageHeight (变量_B5C10225, 变量_B7C10225)
        GdipDisposeImage (变量_B5C10225)
        GdiplusShutdown (变量_BAC10225)
    .如果真结束
    返回 (变量_B7C10225)

.子程序 图片_取格式, 文本型, 公开, 根据文件头部判断文件格式，成功返回格式名称，失败返回空。
    .参数 绝对路径, 文本型, , 绝对路径

    返回 (图片_取格式W (编码_Ansi到Unicode (绝对路径)))

.子程序 图片_取格式W, 文本型, 公开, 根据文件头部判断文件格式，成功返回格式名称，失败返回空。
    .参数 绝对路径, 字节集, , 绝对路径->Unicode
    .局部变量 变量_C4E20225, 整数型
    .局部变量 变量_C5E20225, 字节集
    .局部变量 变量_C6E20225, 文本型
    .局部变量 变量_C7E20225, 整数型

    变量_C4E20225 ＝ DLL_CreateFileW (绝对路径, #<?未知本地类型?>, 位或 (#FILE_SHARE_READ, #FILE_SHARE_WRITE, #<?未知本地类型?>), #NULL, #OPEN_EXISTING, #FILE_ATTRIBUTE_NORMAL, #NULL)
    .如果真 (变量_C4E20225 ＝ #INVALID_HANDLE_VALUE)
        返回 (“”)
    .如果真结束
    变量_C5E20225 ＝ 取空白字节集 (16)
    ReadFile_字节集 (变量_C4E20225, 变量_C5E20225, 16, 变量_C7E20225, #NULL)
    CloseHandle (变量_C4E20225)
    .如果真 (变量_C7E20225 ＝ 16)
        变量_C6E20225 ＝ 字节集_字节集到十六进制 (变量_C5E20225)
        .判断开始 (变量_C6E20225 ≈ “FFD8FF”)
            返回 (“JPEG”)
        .判断 (变量_C6E20225 ≈ “89504E470D0A1A0A0000000D49484452”)
            返回 (“PNG”)
        .判断 (变量_C6E20225 ≈ “47494638” 或 变量_C6E20225 ≈ “474946383761” 或 变量_C6E20225 ≈ “474946383961”)
            返回 (“GIF”)
        .判断 (变量_C6E20225 ≈ “49492A00” 或 变量_C6E20225 ≈ “4D4D002A” 或 变量_C6E20225 ≈ “49492A00”)
            返回 (“TIFF”)
        .判断 (变量_C6E20225 ≈ “424D”)
            返回 (“BMP”)
        .判断 (变量_C6E20225 ≈ “0A”)
            返回 (“PCX”)
        .判断 (变量_C6E20225 ≈ “3C”)
            返回 (“SVG”)
        .判断 (变量_C6E20225 ≈ “38425053000100000000000000”)
            返回 (“PSD”)
        .判断 (变量_C6E20225 ≈ “465753”)
            返回 (“SWF”)
        .判断 (变量_C6E20225 ≈ “D7CDC69A0000”)
            返回 (“WMF”)
        .判断 (变量_C6E20225 ≈ “01000000”)
            返回 (“EMF”)
        .判断 (变量_C6E20225 ≈ “C5D0D3C6”)
            返回 (“EPS”)
        .判断 (变量_C6E20225 ≈ “0000020000” 或 变量_C6E20225 ≈ “0000100000”)
            返回 (“TGA”)
        .判断 (变量_C6E20225 ≈ “00000100”)
            返回 (“ICO”)
        .判断 (变量_C6E20225 ≈ “00000200”)
            返回 (“CUR”)
        .判断 (变量_C6E20225 ≈ “52494646”)
            返回 (“ANI”)
        .判断 (变量_C6E20225 ≈ “464F524D”)
            返回 (“IFF”)
        .默认
            
        .判断结束
        
    .如果真结束
    返回 (“”)

.子程序 SaveBitmapToImage, 字节集, 公开, Save => BMP
    .参数 hBitmap, 整数型
    .局部变量 变量_57FE0225, 整数型
    .局部变量 变量_58FE0225, 整数型
    .局部变量 变量_59FE0225, 短整数型
    .局部变量 变量_5AFE0225, 整数型
    .局部变量 变量_5BFE0225, 整数型
    .局部变量 变量_5CFE0225, 整数型
    .局部变量 变量_5DFE0225, 整数型
    .局部变量 变量_5EFE0225, 整数型
    .局部变量 变量_5FFE0225, 整数型
    .局部变量 变量_60FE0225, 整数型
    .局部变量 变量_62FE0225, 整数型
    .局部变量 变量_63FE0225, 整数型
    .局部变量 变量_67FE0225, 字节集

    变量_57FE0225 ＝ DLL_CreateDCW (编码_Ansi到Unicode (“DISPLAY”, ), #NULL, #NULL, #NULL)
    变量_58FE0225 ＝ GetDeviceCaps (变量_57FE0225, #<?未知本地类型?>) × GetDeviceCaps (变量_57FE0225, #<?未知本地类型?>)
    DeleteDC (变量_57FE0225)
    .判断开始 (变量_58FE0225 ≤ 1)
        变量_59FE0225 ＝ 1
    .判断 (变量_58FE0225 ≤ 4)
        变量_59FE0225 ＝ 4
    .判断 (变量_58FE0225 ≤ 8)
        变量_59FE0225 ＝ 8
    .默认
        变量_59FE0225 ＝ 24
    .判断结束
    变量_5AFE0225 ＝ LocalAlloc (#LMEM_ZEROINIT, 24)
    DLL_GetObjectW (hBitmap, 24, 变量_5AFE0225)
    变量_5CFE0225 ＝ (__get (变量_5AFE0225, 4) × 变量_59FE0225 ＋ 31) ÷ 32 × 4 × __get (变量_5AFE0225, 8)
    变量_5DFE0225 ＝ GlobalAlloc (位或 (#GMEM_MOVEABLE, #GMEM_ZEROINIT), 变量_5CFE0225 ＋ 变量_5EFE0225 ＋ 40)
    变量_5BFE0225 ＝ GlobalLock (变量_5DFE0225)
    __set (变量_5BFE0225, 0, 40)
    __set (变量_5BFE0225, 4, __get (变量_5AFE0225, 4))
    __set (变量_5BFE0225, 8, __get (变量_5AFE0225, 8))
    __set_short (变量_5BFE0225, 12, 1)
    __set_short (变量_5BFE0225, 14, 变量_59FE0225)
    __set (变量_5BFE0225, 16, 0)
    变量_5FFE0225 ＝ GetStockObject (#<?未知本地类型?>)
    .如果真 (变量_5FFE0225 ≠ #NULL)
        变量_57FE0225 ＝ GetDC (#NULL)
        变量_60FE0225 ＝ DLL_SelectPalette (变量_57FE0225, 变量_5FFE0225, 假)
        DLL_RealizePalette (变量_57FE0225)
    .如果真结束
    DLL_GetDIBits3 (变量_57FE0225, hBitmap, 0, __get (变量_5AFE0225, 8), 变量_5BFE0225 ＋ 40 ＋ 变量_5EFE0225, 变量_5BFE0225, #<?未知本地类型?>)
    .如果真 (变量_60FE0225 ≠ #NULL)
        DLL_SelectPalette (变量_57FE0225, 变量_60FE0225, 真)
        DLL_RealizePalette (变量_57FE0225)
        ReleaseDC (#NULL, 变量_57FE0225)
    .如果真结束
    变量_62FE0225 ＝ LocalAlloc (#LMEM_ZEROINIT, 14)
    __set_short (变量_62FE0225, 0, 19778)
    变量_63FE0225 ＝ 14 ＋ 40 ＋ 变量_5EFE0225 ＋ 变量_5CFE0225
    __set (变量_62FE0225, 2, 变量_63FE0225)
    __set (变量_62FE0225, 10, 14 ＋ 40 ＋ 变量_5EFE0225)
    变量_67FE0225 ＝ 指针到字节集 (变量_62FE0225, 14) ＋ 指针到字节集 (变量_5BFE0225, 变量_63FE0225)
    LocalFree (变量_62FE0225)
    GlobalUnlock (变量_5DFE0225)
    GlobalFree (变量_5DFE0225)
    LocalFree (变量_5BFE0225)
    LocalFree (变量_5AFE0225)
    返回 (变量_67FE0225)

.子程序 CopyBitmap, 整数型, 公开, Copy => hBitmap
    .参数 hBitmap, 整数型
    .参数 x, 整数型, 可空
    .参数 y, 整数型, 可空
    .参数 cx, 整数型, 可空
    .参数 cy, 整数型, 可空
    .局部变量 变量_4FFF0225, 整数型
    .局部变量 变量_50FF0225, 整数型
    .局部变量 变量_51FF0225, 整数型
    .局部变量 变量_52FF0225, 整数型
    .局部变量 变量_53FF0225, 整数型
    .局部变量 变量_54FF0225, 整数型
    .局部变量 变量_55FF0225, 整数型

    变量_4FFF0225 ＝ GetDC (#NULL)
    变量_50FF0225 ＝ CreateCompatibleDC (变量_4FFF0225)
    变量_51FF0225 ＝ SelectObject (变量_50FF0225, hBitmap)
    变量_52FF0225 ＝ LocalAlloc (#LMEM_ZEROINIT, 24)
    DLL_GetObjectW (hBitmap, 24, 变量_52FF0225)
    .如果真 (是否为空 (cx))
        cx ＝ __get (变量_52FF0225, 4)
    .如果真结束
    .如果真 (是否为空 (cy))
        cy ＝ __get (变量_52FF0225, 8)
    .如果真结束
    LocalFree (变量_52FF0225)
    变量_53FF0225 ＝ CreateCompatibleDC (变量_4FFF0225)
    变量_54FF0225 ＝ CreateCompatibleBitmap (变量_4FFF0225, cx, cy)
    变量_55FF0225 ＝ SelectObject (变量_53FF0225, 变量_54FF0225)
    BitBlt (变量_53FF0225, 0, 0, cx, cy, 变量_50FF0225, x, y, #SRCCOPY)
    SelectObject (变量_53FF0225, 变量_55FF0225)
    DeleteDC (变量_53FF0225)
    SelectObject (变量_50FF0225, 变量_51FF0225)
    DeleteDC (变量_50FF0225)
    ReleaseDC (#NULL, 变量_4FFF0225)
    返回 (变量_54FF0225)

.子程序 图片_WIA缩放, 字节集, 公开, 返回修改大小后的图片
    .参数 文件名, 文本型
    .参数 设置宽度, 整数型
    .参数 设置高度, 整数型
    .参数 按比例缩放, 逻辑型, 可空, 默认假
    .参数 输出路径, 文本型, 可空, 保存修改大小的图片文件
    .局部变量 变量_DE020325, 对象
    .局部变量 变量_DF020325, 对象

    变量_DE020325.创建 (“WIA.ImageFile”, )
    变量_DF020325.创建 (“WIA.ImageProcess”, )
    变量_DE020325.方法 (“LoadFile”, 文件名)
    变量_DF020325.读对象型属性 (“Filters”, ).方法 (“Add”, 变量_DF020325.读对象型属性 (“FilterInfos”, ).读对象型属性 (“Item”, “Scale”).读文本属性 (“FilterID”, ), 0)
    变量_DF020325.读对象型属性 (“Filters”, ).读对象型属性 (“Item”, 1).读对象型属性 (“Properties”, ).读对象型属性 (“Item”, “MaximumHeight”).写属性 (“Value”, 设置高度)
    变量_DF020325.读对象型属性 (“Filters”, ).读对象型属性 (“Item”, 1).读对象型属性 (“Properties”, ).读对象型属性 (“Item”, “MaximumWidth”).写属性 (“Value”, 设置宽度)
    变量_DF020325.读对象型属性 (“Filters”, ).读对象型属性 (“Item”, 1).读对象型属性 (“Properties”, ).读对象型属性 (“Item”, “PreserveAspectRatio”).写属性 (“Value”, 按比例缩放)
    变量_DE020325 ＝ 变量_DF020325.对象型方法 (“Apply”, 变量_DE020325)
    .如果真 (是否为空 (输出路径) ＝ 假)
        变量_DE020325.方法 (“SaveFile”, 输出路径)
    .如果真结束
    返回 (变量_DE020325.读对象型属性 (“FileData”, ).读属性 (“BinaryData”, ).取字节集 ())

.子程序 GetImageFileToBitmap, 整数型, 公开, ImageFile => hBitmap
    .参数 wszFileName, 字节集, , jpg; gif
    .局部变量 变量_65030325, 整数型
    .局部变量 变量_6A030325, 整数型
    .局部变量 变量_6B030325, 整数型
    .局部变量 变量_6C030325, 整数型
    .局部变量 变量_6D030325, 整数型
    .局部变量 变量_78030325, 整数型
    .局部变量 变量_7A030325, 整数型
    .局部变量 变量_7B030325, 整数型
    .局部变量 变量_7C030325, 整数型
    .局部变量 变量_7D030325, 整数型

    变量_65030325 ＝ DLL_CreateFileW (wszFileName, #GENERIC_READ, #FILE_SHARE_READ, #NULL, #OPEN_EXISTING, #FILE_ATTRIBUTE_NORMAL, #NULL)
    .如果真 (变量_65030325 ≠ #INVALID_HANDLE_VALUE)
        变量_6A030325 ＝ DLL_GetFileSize (变量_65030325, #NULL)
        变量_6B030325 ＝ GlobalAlloc (#GMEM_MOVEABLE, 变量_6A030325)
        .如果真 (变量_6B030325 ≠ #NULL)
            变量_6C030325 ＝ GlobalLock (变量_6B030325)
            DLL_ReadFile2 (变量_65030325, 变量_6C030325, 变量_6A030325, 变量_6D030325, #NULL)
            GlobalUnlock (变量_6B030325)
            变量_7D030325 ＝ CreateStreamOnHGlobal (变量_6B030325, 假, 变量_78030325)
            .如果真 (变量_7D030325 ＝ #<?未知本地类型?> 且 变量_78030325 ≠ #NULL)
                变量_7D030325 ＝ DLL_OleLoadPicture (变量_78030325, 0, 假, 取指针_字节集型 (#图片资源_79030328), 变量_7A030325)
                .如果真 (变量_7D030325 ＝ #<?未知本地类型?> 且 变量_7A030325 ≠ #NULL)
                    变量_7D030325 ＝ CallObject (变量_7A030325, #<?未知本地类型?>, 取指针整数_ (变量_7B030325), , , , , , , , )
                    .如果真 (变量_7D030325 ＝ #<?未知本地类型?> 且 变量_7B030325 ≠ #NULL)
                        变量_7C030325 ＝ DLL_CopyImage (变量_7B030325, #IMAGE_BITMAP, 0, 0, #<?未知本地类型?>)
                    .如果真结束
                    SafeRelease (变量_7A030325)
                .如果真结束
                SafeRelease (变量_78030325)
            .如果真结束
            GlobalFree (变量_6B030325)
        .如果真结束
        CloseHandle (变量_65030325)
    .如果真结束
    返回 (变量_7C030325)

.子程序 GetImageToBitmap, 整数型, 公开, Image => hBitmap
    .参数 imageData, 字节集, , image
    .局部变量 变量_94030325, 整数型
    .局部变量 变量_98030325, 整数型
    .局部变量 变量_99030325, 整数型
    .局部变量 变量_AD030325, 整数型
    .局部变量 变量_AE030325, 整数型
    .局部变量 变量_AF030325, 整数型
    .局部变量 变量_B0030325, 整数型
    .局部变量 变量_B1030325, 整数型

    变量_94030325 ＝ 取字节集长度 (imageData)
    .如果真 (变量_94030325 ＞ 0)
        变量_98030325 ＝ GlobalAlloc (#GMEM_MOVEABLE, 变量_94030325)
        .如果真 (变量_98030325 ≠ #NULL)
            变量_99030325 ＝ GlobalLock (变量_98030325)
            memcpy (变量_99030325, 取指针字节集_ (imageData), 变量_94030325)
            GlobalUnlock (变量_98030325)
            变量_B1030325 ＝ CreateStreamOnHGlobal (变量_98030325, 假, 变量_AD030325)
            .如果真 (变量_B1030325 ＝ #<?未知本地类型?> 且 变量_AD030325 ≠ #NULL)
                变量_B1030325 ＝ DLL_OleLoadPicture (变量_AD030325, 0, 假, 取指针_字节集型 (#图片资源_79030328), 变量_AE030325)
                .如果真 (变量_B1030325 ＝ #<?未知本地类型?> 且 变量_AE030325 ≠ #NULL)
                    变量_B1030325 ＝ CallObject (变量_AE030325, #<?未知本地类型?>, 取指针整数_ (变量_AF030325), , , , , , , , )
                    .如果真 (变量_B1030325 ＝ #<?未知本地类型?> 且 变量_AF030325 ≠ #NULL)
                        变量_B0030325 ＝ DLL_CopyImage (变量_AF030325, #IMAGE_BITMAP, 0, 0, #<?未知本地类型?>)
                    .如果真结束
                    SafeRelease (变量_AE030325)
                .如果真结束
                SafeRelease (变量_AD030325)
            .如果真结束
            GlobalFree (变量_98030325)
        .如果真结束
        
    .如果真结束
    返回 (变量_B0030325)

