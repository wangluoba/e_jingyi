.版本 2

.程序集 类_通用对话框, , 公开
.程序集变量 hComdlg32, 整数型
.程序集变量 pOFNProc, 整数型
.程序集变量 pflOldProtect, 整数型
.程序集变量 pNewOFNProc, 整数型
.程序集变量 pOFNHookProc, 整数型
.程序集变量 aryOldAddr, 字节集
.程序集变量 aryNewAddr, 字节集
.程序集变量 wszFilePath, 字节集

.子程序 _初始化
    

.子程序 _销毁
    

.子程序 打开文件, 文本型, 公开, 与支持库通用对话框功能一样，成功返回一个通用对话框文件名，失败返回空。
    .参数 易样式, 逻辑型, 可空, 是否使用易语言样式。可为空，默认不使用。
    .参数 标题, 文本型, 可空, 仅适用于打开文件和保存文件对话框。
    .参数 文件名, 文本型, 可空, 从本属性中读取的文件名包括驱动器符和全路径目录，同时本属性也用作初始对话框中的文件名编辑框。
    .参数 过滤器, 文本型, 可空, 文本型。过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；第二个指定实际的过滤匹配符，如：“*.txt”，所有各文本串之间用“|”号隔开。
    .参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录。
    .参数 默认文件后缀, 文本型, 可空, 指定当用户没有输入文件的后缀名称时所自动使用的文件后缀名称。
    .参数 创建时提示, 逻辑型, 可空, 当类型为打开文件对话框时，如果用户指定了一个不存在的文件名称，是否提示用户即将创建它。
    .参数 文件必须存在, 逻辑型, 可空, 当类型为打开文件对话框时，是否允许用户指定一个不存在的文件。
    .参数 目录必须存在, 逻辑型, 可空, 是否允许用户指定一个不存在的目录。
    .参数 不改变目录, 逻辑型, 可空, 在对话框关闭后是否自动返回到进入对话框时的文件目录。
    .局部变量 变量_F7DC0125, OPENFILENAME
    .局部变量 变量_F8DC0125, 逻辑型
    .局部变量 变量_F5E20125, 整数型

    变量_F7DC0125.结构大小 ＝ 76
    变量_F7DC0125.窗口句柄 ＝ DLL_GetActiveWindow ()
    变量_F7DC0125.文件标题 ＝ “Open a file”
    变量_F7DC0125.过滤器 ＝ 子字节集替换 (到字节集 (过滤器), { 124 }, { 0 }, , ) ＋ { 0, 0 }
    变量_F7DC0125.文件名 ＝ 取空白字节集 (255)
    DLL_lstrcpyA (变量_F7DC0125.文件名, 到字节集 (文件名) ＋ { 0, 0 })
    变量_F7DC0125.初始目录 ＝ 初始目录
    变量_F7DC0125.默认扩展名 ＝ 默认文件后缀
    变量_F7DC0125.标题 ＝ 标题
    变量_F7DC0125.文件名最大长度 ＝ 255
    变量_F5E20125 ＝ 524288
    .如果真 (创建时提示)
        变量_F5E20125 ＝ 位或 (变量_F5E20125, 8192)
    .如果真结束
    .如果真 (文件必须存在)
        变量_F5E20125 ＝ 位或 (变量_F5E20125, 4096)
    .如果真结束
    .如果真 (目录必须存在)
        变量_F5E20125 ＝ 位或 (变量_F5E20125, 2048)
    .如果真结束
    .如果真 (不改变目录)
        变量_F5E20125 ＝ 位或 (变量_F5E20125, 8)
    .如果真结束
    变量_F7DC0125.标志 ＝ 变量_F5E20125
    .如果 (是否为空 (易样式) 或 易样式 ＝ 假)
        变量_F8DC0125 ＝ GetOpenFileNameA (变量_F7DC0125)
    .否则
        变量_F8DC0125 ＝ DLL_GetOpenFileNamePreview (变量_F7DC0125)
    .如果结束
    返回 (选择 (变量_F8DC0125, 到文本 (变量_F7DC0125.文件名), “”))

.子程序 保存文件, 文本型, 公开, 与支持库通用对话框功能一样，成功返回一个通用对话框文件名，失败返回空。
    .参数 易样式, 逻辑型, 可空, 是否使用易语言样式。可为空，默认不使用。
    .参数 标题, 文本型, 可空, 仅适用于打开文件和保存文件对话框。
    .参数 文件名, 文本型, 可空, 从本属性中读取的文件名包括驱动器符和全路径目录，同时本属性也用作初始对话框中的文件名编辑框。
    .参数 过滤器, 文本型, 可空, 格式：“MP3文件(*.mp3)|*.mp3|媒体文件(*.mpg)|*.mpg”
    .参数 初始目录, 文本型, 可空, 指定当打开对话框时所自动跳转到的目录。
    .参数 默认文件后缀, 文本型, 可空, 指定当用户没有输入文件的后缀名称时所自动使用的文件后缀名称。
    .参数 文件覆盖提示, 逻辑型, 可空, 当类型为保存文件对话框时，如果用户指定了一个已经存在的文件，是否询问用户确定覆盖此文件。
    .参数 目录必须存在, 逻辑型, 可空, 是否允许用户指定一个不存在的目录。
    .参数 不改变目录, 逻辑型, 可空, 在对话框关闭后是否自动返回到进入对话框时的文件目录。
    .局部变量 变量_FFDC0125, OPENFILENAME
    .局部变量 变量_00DD0125, 逻辑型
    .局部变量 变量_0FE30125, 整数型

    变量_FFDC0125.结构大小 ＝ 76
    变量_FFDC0125.窗口句柄 ＝ DLL_GetActiveWindow ()
    变量_FFDC0125.文件标题 ＝ “Save a file”
    变量_FFDC0125.过滤器 ＝ 子字节集替换 (到字节集 (过滤器), { 124 }, { 0 }, , ) ＋ { 0 } ＋ { 0 }
    变量_FFDC0125.文件名 ＝ 取空白字节集 (255)
    DLL_lstrcpyA (变量_FFDC0125.文件名, 到字节集 (文件名) ＋ { 0, 0 })
    变量_FFDC0125.初始目录 ＝ 初始目录
    变量_FFDC0125.默认扩展名 ＝ 默认文件后缀
    变量_FFDC0125.标题 ＝ 标题
    变量_FFDC0125.文件名最大长度 ＝ 255
    变量_0FE30125 ＝ 524288
    .如果真 (文件覆盖提示)
        变量_0FE30125 ＝ 位或 (变量_0FE30125, 2)
    .如果真结束
    .如果真 (目录必须存在)
        变量_0FE30125 ＝ 位或 (变量_0FE30125, 2048)
    .如果真结束
    .如果真 (不改变目录)
        变量_0FE30125 ＝ 位或 (变量_0FE30125, 8)
    .如果真结束
    变量_FFDC0125.标志 ＝ 变量_0FE30125
    .如果 (是否为空 (易样式) 或 易样式 ＝ 假)
        变量_00DD0125 ＝ GetSaveFileNameA (变量_FFDC0125)
    .否则
        变量_00DD0125 ＝ DLL_GetSaveFileNamePreviewA (变量_FFDC0125)
    .如果结束
    返回 (选择 (变量_00DD0125, 到文本 (变量_FFDC0125.文件名), “”))

.子程序 多选文件, 文本型, 公开, 显示一个文件打开对话框，允许用户选择或输入多个所需要打开的已存在文件，返回用户所选择或输入后的结果文本型。
    .参数 易样式, 逻辑型, 可空, 是否使用易语言样式。可为空，默认不使用。
    .参数 标题, 文本型, 可空, 可以被省略。指定文件打开对话框的标题，如果被省略，则默认为“请输入欲打开的文件：”。
    .参数 过滤器, 文本型, 可空, 可以被省略。过滤器文本由单个或多个成对的文本串组成，每对文本串的第一个描述显示形式，如：“文本文件（*.txt）”；
    .参数 初始目录, 文本型, 可空, 可以被省略。指定当打开对话框时所自动跳转到的目录，如果被省略，则默认为当前目录。
    .局部变量 变量_05DD0125, OPENFILENAME
    .局部变量 变量_06DD0125, 字节集
    .局部变量 变量_07DD0125, 文本型, , "0"
    .局部变量 变量_08DD0125, 整数型
    .局部变量 变量_09DD0125, 文本型
    .局部变量 变量_0ADD0125, 逻辑型

    处理事件 ()
    变量_05DD0125.结构大小 ＝ 76
    变量_05DD0125.窗口句柄 ＝ DLL_GetActiveWindow ()
    变量_05DD0125.过滤器 ＝ 子字节集替换 (到字节集 (过滤器), { 124 }, { 0 }, , ) ＋ { 0 } ＋ { 0 }
    变量_05DD0125.文件名 ＝ 取空白字节集 (4096)
    变量_05DD0125.文件名最大长度 ＝ 4096
    
    变量_05DD0125.文件标题最大长度 ＝ 4096
    变量_05DD0125.初始目录 ＝ 初始目录
    变量_05DD0125.标题 ＝ 标题
    变量_05DD0125.标志 ＝ 524800 ＋ 8
    
    .如果 (是否为空 (易样式) 或 易样式 ＝ 假)
        变量_0ADD0125 ＝ GetOpenFileNameA (变量_05DD0125)
    .否则
        变量_0ADD0125 ＝ DLL_GetOpenFileNamePreview (变量_05DD0125)
    .如果结束
    
    .如果 (变量_0ADD0125)
        变量_06DD0125 ＝ 变量_05DD0125.文件名
        变量_06DD0125 ＝ 取字节集左边 (变量_06DD0125, 寻找字节集 (变量_06DD0125, { 0, 0 }, ) － 1)
        .如果 (寻找字节集 (变量_06DD0125, { 0 }, ) ≠ -1)
            变量_07DD0125 ＝ 分割文本 (到文本 (子字节集替换 (变量_06DD0125, { 0 }, { 124 }, , )), “|”, )
            .如果真 (取文本右边 (变量_07DD0125 [1], 1) ≠ “\”)
                变量_07DD0125 [1] ＝ 变量_07DD0125 [1] ＋ “\”
            .如果真结束
            .计次循环首 (取数组成员数 (变量_07DD0125) － 1, 变量_08DD0125)
                .如果 (取数组成员数 (变量_07DD0125) － 1 ≠ 变量_08DD0125)
                    变量_09DD0125 ＝ 变量_09DD0125 ＋ 变量_07DD0125 [1] ＋ 变量_07DD0125 [变量_08DD0125 ＋ 1] ＋ #换行符
                .否则
                    变量_09DD0125 ＝ 变量_09DD0125 ＋ 变量_07DD0125 [1] ＋ 变量_07DD0125 [变量_08DD0125 ＋ 1]
                .如果结束
                处理事件 ()
            .计次循环尾 ()
            返回 (变量_09DD0125)
        .否则
            返回 (到文本 (变量_06DD0125))
        .如果结束
        
    .否则
        返回 (“”)
    .如果结束
    

.子程序 选择字体, 字体, 公开, 打开选择字体对话框，成功返回字体相关信息，调用格式如； 编辑框.字体=选择字体()
    .参数 字体名称, 文本型, 可空
    .参数 字体大小, 整数型, 可空
    .参数 字体颜色, 整数型, 可空
    .参数 加粗, 逻辑型, 可空
    .参数 倾斜, 逻辑型, 可空
    .参数 删除线, 逻辑型, 可空
    .参数 下划线, 逻辑型, 可空
    .参数 lRes, 逻辑型, 参考 可空, 如果用户单击对话框的OK按钮，则返回值为真。
    .局部变量 变量_0CB00225, 自定义_4DE30141
    .局部变量 变量_0DB00225, LOGFONT
    .局部变量 变量_0EB00225, 整数型
    .局部变量 变量_0FB00225, 字体
    .局部变量 变量_D4E20225, 整数型

    DLL_lstrcpyA4 (变量_0DB00225.lfFaceName, 字体名称)
    变量_D4E20225 ＝ GetDC (0)
    变量_0DB00225.lfHeight ＝ －DLL_MulDiv (字体大小, GetDeviceCaps (变量_D4E20225, 90), 72)
    变量_0DB00225.lfWeight ＝ 选择 (是否为空 (加粗) 或 加粗 ＝ 假, 400, 700)
    变量_0DB00225.lfUnderline ＝ 选择 (是否为空 (下划线) 或 下划线 ＝ 假, 0, 1)
    变量_0DB00225.lfItalic ＝ 选择 (是否为空 (倾斜) 或 倾斜 ＝ 假, 0, 1)
    变量_0DB00225.lfStrikeOut ＝ 选择 (是否为空 (删除线) 或 删除线 ＝ 假, 0, 1)
    变量_0DB00225.lfCharSet ＝ 1
    变量_0EB00225 ＝ GlobalAlloc (64, 60)
    DLL_RtlMoveMemory28 (变量_0EB00225, 变量_0DB00225, 60)
    变量_0CB00225.成员_4FE30135 ＝ 60
    变量_0CB00225.成员_50E30135 ＝ DLL_GetActiveWindow ()
    变量_0CB00225.成员_52E30135 ＝ 变量_0EB00225
    变量_0CB00225.成员_54E30135 ＝ 位或 (3, 256, 65536, 64, 8192)
    变量_0CB00225.成员_55E30135 ＝ 字体颜色
    变量_0CB00225.成员_5BE30135 ＝ 1024
    变量_0CB00225.成员_5DE30135 ＝ 8
    变量_0CB00225.成员_5EE30135 ＝ 72
    lRes ＝ DLL_ChooseFontA (变量_0CB00225)
    .如果真 (lRes)
        DLL_RtlMoveMemory29 (变量_0DB00225, 变量_0EB00225, 60)
        变量_0FB00225.字体名称 ＝ 到文本 (变量_0DB00225.lfFaceName)
        变量_0FB00225.字体大小 ＝ 变量_0CB00225.成员_53E30135 ÷ 10
        变量_0FB00225.倾斜 ＝ 变量_0DB00225.lfItalic ≠ 0
        变量_0FB00225.下划线 ＝ 变量_0DB00225.lfUnderline ＝ 1
        变量_0FB00225.加粗 ＝ 变量_0DB00225.lfWeight ＝ 700
        变量_0FB00225.删除线 ＝ 变量_0DB00225.lfStrikeOut ＝ 1
        变量_0FB00225.角度 ＝ 变量_0DB00225.lfEscapement
    .如果真结束
    GlobalFree (变量_0EB00225)
    返回 (变量_0FB00225)

.子程序 SetOpenFileNameWHook, 逻辑型, 公开
    hComdlg32 ＝ LoadLibraryA (“Comdlg32.dll”)
    .如果真 (hComdlg32 ≠ #NULL)
        pOFNProc ＝ GetProcAddress (hComdlg32, “GetOpenFileNameW”)
        
        .如果真 (pOFNProc ≠ #NULL)
            .如果真 (VirtualProtectEx (#INVALID_HANDLE_VALUE, pOFNProc, 8, #PAGE_EXECUTE_READWRITE, pflOldProtect) ＝ 1)
                aryOldAddr ＝ 取空白字节集 (8)
                ReadProcessMemory_字节集 (#INVALID_HANDLE_VALUE, pOFNProc, aryOldAddr, 8, #NULL)
                pNewOFNProc ＝ 类回调_取类地址 (9, 1, , )
                pOFNHookProc ＝ 类回调_取类地址 (10, 4, , )
                aryNewAddr ＝ { 184 } ＋ 到字节集 (pNewOFNProc) ＋ { 255, 224, 0 }
                
                
                WriteProcessMemory_字节集 (#INVALID_HANDLE_VALUE, pOFNProc, aryNewAddr, 8, #NULL)
                返回 (真)
            .如果真结束
            
        .如果真结束
        .如果真 (pOFNProc ＝ #NULL 或 pflOldProtect ＝ #NULL)
            FreeLibrary (hComdlg32)
            连续赋值 (#NULL, pOFNProc, pflOldProtect, hComdlg32)
        .如果真结束
        
    .如果真结束
    返回 (假)

.子程序 RemoveOpenFileNameWHook, , 公开
    .如果真 (aryOldAddr ≠ { })
        WriteProcessMemory_字节集 (#INVALID_HANDLE_VALUE, pOFNProc, aryOldAddr, 8, #NULL)
        aryOldAddr ＝ { }
    .如果真结束
    .如果真 (pOFNProc ≠ #NULL 且 pflOldProtect ≠ #NULL)
        VirtualProtectEx (#INVALID_HANDLE_VALUE, pOFNProc, 8, #PAGE_EXECUTE_READWRITE, pflOldProtect)
        连续赋值 (#NULL, pOFNProc, pflOldProtect)
    .如果真结束
    .如果真 (pOFNHookProc ≠ #NULL)
        类回调_释放回调 (pOFNHookProc)
        pOFNHookProc ＝ #NULL
    .如果真结束
    .如果真 (hComdlg32 ≠ #NULL)
        FreeLibrary (hComdlg32)
        hComdlg32 ＝ #NULL
    .如果真结束
    

.子程序 NewOFNProc, 整数型
    .参数 变量_2C070325, 整数型
    .局部变量 变量_39070325, 整数型
    .局部变量 变量_46070325, 整数型

    WriteProcessMemory_字节集 (#INVALID_HANDLE_VALUE, pOFNProc, aryOldAddr, 8, #NULL)
    .如果真 (变量_2C070325 ≠ #NULL)
        变量_39070325 ＝ __get (变量_2C070325, 52)
        .如果真 (位与 (变量_39070325, #<?未知本地类型?>) ＝ 0)
            变量_39070325 ＝ 位或 (变量_39070325, #<?未知本地类型?>)
        .如果真结束
        变量_39070325 ＝ 位或 (变量_39070325, #<?未知本地类型?>)
        __set (变量_2C070325, 52, 变量_39070325)
        __set (变量_2C070325, 68, pOFNHookProc)
        变量_46070325 ＝ 调用子程序_ (pOFNProc, 变量_2C070325, , , , , , , , , , , , , , )
    .如果真结束
    WriteProcessMemory_字节集 (#INVALID_HANDLE_VALUE, pOFNProc, aryNewAddr, 8, #NULL)
    返回 (变量_46070325)

.子程序 OFNHookProc, 整数型
    .参数 变量_48070325, 整数型
    .参数 变量_49070325, 整数型
    .参数 变量_4A070325, 整数型
    .参数 变量_4B070325, 整数型
    .局部变量 变量_4C070325, 整数型
    .局部变量 变量_4D070325, 整数型
    .局部变量 变量_4E070325, 整数型
    .局部变量 变量_4F070325, 整数型
    .局部变量 变量_50070325, 整数型

    .如果真 (变量_49070325 ＝ #WM_NOTIFY)
        变量_4C070325 ＝ __get (变量_4B070325, 8)
        .如果真 (变量_4C070325 ＝ #<?未知本地类型?>)
            变量_4D070325 ＝ __get (变量_4B070325, 12)
            变量_4E070325 ＝ __get (变量_4D070325, 32)
            变量_4F070325 ＝ __get (变量_4D070325, 28)
            变量_50070325 ＝ 取字节集长度 (wszFilePath)
            .如果真 (变量_50070325 ＞ 0 且 变量_50070325 ≤ 变量_4E070325)
                WriteProcessMemory_字节集 (#INVALID_HANDLE_VALUE, 变量_4F070325, wszFilePath, 变量_50070325, #NULL)
                
            .如果真结束
            DLL_EndDialog (GetParent (变量_48070325), 1)
        .如果真结束
        
    .如果真结束
    返回 (0)

.子程序 置初始化文件名W, , 公开
    .参数 文件路径, 字节集

    wszFilePath ＝ 文件路径

