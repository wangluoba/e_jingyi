.版本 2

.程序集 类_POST数据类, , 公开
.程序集变量 _keys, 文本型, , "0"
.程序集变量 _values, 文本型, , "0"

.子程序 添加, , 公开, 添加指定键名与键值
    .参数 key, 文本型
    .参数 value, 文本型, , 当前值会进行utf-8的编码
    .参数 转码, 逻辑型, 可空, 可空，是否对[值]进行进行utf-8编码，默认为 假=不转码，真=转码

    .如果 (转码)
        加入成员 (_keys, 编码_gb2312到utf8 (key))
        加入成员 (_values, 编码_gb2312到utf8 (value))
    .否则
        加入成员 (_keys, key)
        加入成员 (_values, value)
    .如果结束
    

.子程序 添加_批量, , 公开, 批量加入[带转码]
    .参数 文本, 文本型, , 如：a=123&b=456
    .参数 转码, 逻辑型, 可空, 可空，是否对[值]进行进行utf-8编码，默认为 假=不转码，真=转码
    .局部变量 变量_1A7C0225, 文本型, , "0"
    .局部变量 变量_1B7C0225, 整数型

    变量_1A7C0225 ＝ 分割文本 (文本, “&”, )
    .计次循环首 (取数组成员数 (变量_1A7C0225), 变量_1B7C0225)
        添加 (文本_取左边 (变量_1A7C0225 [变量_1B7C0225], “=”, , ), 文本_取右边 (变量_1A7C0225 [变量_1B7C0225], “=”, , ), 转码)
    .计次循环尾 ()

.子程序 取值, 文本型, 公开, 取指定键名的值
    .参数 key, 文本型
    .局部变量 变量_1D7C0225, 整数型

    .计次循环首 (取数组成员数 (_keys), 变量_1D7C0225)
        .如果真 (_keys [变量_1D7C0225] ＝ key)
            返回 (_values [变量_1D7C0225])
        .如果真结束
        
    .计次循环尾 ()
    返回 (“”)

.子程序 置值, , 公开, 置指定键名的键值
    .参数 key, 文本型
    .参数 value, 文本型
    .局部变量 变量_207C0225, 整数型

    .计次循环首 (取数组成员数 (_keys), 变量_207C0225)
        .如果真 (_keys [变量_207C0225] ＝ key)
            _values [变量_207C0225] ＝ value
            返回 ()
        .如果真结束
        
    .计次循环尾 ()
    添加 (key, value)

.子程序 获取Post数据, 文本型, 公开, 将添加的数据以数据包格式返回  键名=键值&键名=键值
    .参数 是否URL编码, 逻辑型, 可空, 默认为假=不编码，真=URL编码
    .局部变量 变量_227C0225, 整数型
    .局部变量 变量_237C0225, 文本型
    .局部变量 变量_247C0225, 文本型

    .计次循环首 (取数组成员数 (_keys), 变量_227C0225)
        .如果 (是否URL编码)
            变量_247C0225 ＝ 变量_247C0225 ＋ 编码_URL编码 (_keys [变量_227C0225], 真, ) ＋ “=” ＋ 编码_URL编码 (_values [变量_227C0225], 真, ) ＋ “&”
        .否则
            变量_247C0225 ＝ 变量_247C0225 ＋ _keys [变量_227C0225] ＋ “=” ＋ _values [变量_227C0225] ＋ “&”
        .如果结束
        
    .计次循环尾 ()
    变量_247C0225 ＝ 取文本左边 (变量_247C0225, 取文本长度 (变量_247C0225) － 1)
    返回 (变量_247C0225)

.子程序 获取协议头数据, 文本型, 公开, 将添加的数据以协议头格式返回  键名:键值
    .参数 是否URL编码, 逻辑型, 可空, 默认为假=不编码，真=URL编码
    .局部变量 变量_997D0225, 整数型
    .局部变量 变量_9A7D0225, 文本型
    .局部变量 变量_9B7D0225, 文本型

    .计次循环首 (取数组成员数 (_keys), 变量_997D0225)
        .如果 (是否URL编码)
            变量_9B7D0225 ＝ 变量_9B7D0225 ＋ _keys [变量_997D0225] ＋ “: ” ＋ 编码_URL编码 (_values [变量_997D0225], 真, ) ＋ 字符 (13) ＋ 字符 (10)
        .否则
            变量_9B7D0225 ＝ 变量_9B7D0225 ＋ _keys [变量_997D0225] ＋ “: ” ＋ _values [变量_997D0225] ＋ 字符 (13) ＋ 字符 (10)
        .如果结束
        
    .计次循环尾 ()
    变量_9B7D0225 ＝ 取文本左边 (变量_9B7D0225, 取文本长度 (变量_9B7D0225) － 2)
    返回 (变量_9B7D0225)

.子程序 获取Key数组, , 公开
    .参数 arr, 文本型, 参考 数组

    arr ＝ _keys

.子程序 获取Value数组, , 公开
    .参数 arr, 文本型, 参考 数组

    arr ＝ _values

.子程序 清空, , 公开
    清除数组 (_keys)
    清除数组 (_values)
    

.子程序 删除, , 公开, 删除键值队  删除一个
    .参数 key, 文本型
    .局部变量 变量_A6A20225, 整数型

    .计次循环首 (取数组成员数 (_keys), 变量_A6A20225)
        .如果真 (_keys [变量_A6A20225] ＝ key)
            删除成员 (_keys, 变量_A6A20225, 1)
            删除成员 (_values, 变量_A6A20225, 1)
            返回 ()
        .如果真结束
        
    .计次循环尾 ()

.子程序 获取JSON文本, 文本型, 公开, 将添加的数据以JSON格式返回    ｛键名:键值｝
    .局部变量 变量_277C0225, 整数型
    .局部变量 变量_287C0225, 文本型

    变量_287C0225 ＝ “{”
    .计次循环首 (取数组成员数 (_keys), 变量_277C0225)
        变量_287C0225 ＝ 变量_287C0225 ＋ #引号 ＋ _keys [变量_277C0225] ＋ #引号 ＋ “:” ＋ #引号 ＋ 处理元字符 (_values [变量_277C0225]) ＋ #引号 ＋ “,”
    .计次循环尾 ()
    变量_287C0225 ＝ rtrim (变量_287C0225, “,”) ＋ “}”
    返回 (变量_287C0225)

.子程序 处理元字符, 文本型
    .参数 变量_297C0225, 文本型
    .局部变量 变量_2A7C0225, 文本型

    变量_2A7C0225 ＝ 文本_替换 (变量_297C0225, , , , #引号, “\” ＋ #引号, , , , , , , , )
    返回 (变量_2A7C0225)
    

.子程序 rtrim, 文本型
    .参数 变量_1E7D0225, 文本型
    .参数 变量_1F7D0225, 文本型

    .如果真 (取文本右边 (变量_1E7D0225, 取文本长度 (变量_1F7D0225)) ＝ 变量_1F7D0225)
        变量_1E7D0225 ＝ 取文本左边 (变量_1E7D0225, 取文本长度 (变量_1E7D0225) － 取文本长度 (变量_1F7D0225))
    .如果真结束
    
    .如果真 (取文本左边 (变量_1E7D0225, 取文本长度 (变量_1F7D0225)) ＝ 变量_1F7D0225)
        变量_1E7D0225 ＝ 取文本右边 (变量_1E7D0225, 取文本长度 (变量_1E7D0225) － 取文本长度 (变量_1F7D0225))
    .如果真结束
    返回 (变量_1E7D0225)

