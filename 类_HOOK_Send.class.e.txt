.版本 2

.程序集 类_HOOK_Send, , 公开
.程序集变量 集_函数地址, 整数型
.程序集变量 集_原保护值, 整数型
.程序集变量 集_原字节, 字节集
.程序集变量 集_原地址, 整数型
.程序集变量 集_操作句柄, 整数型
.程序集变量 集_已经提升, 逻辑型
.程序集变量 集_新字节, 字节集

.子程序 _初始化
    

.子程序 _销毁
    

.子程序 安装, 逻辑型
    .参数 变量_FAC40225, 文本型
    .参数 变量_FBC40225, 文本型
    .参数 变量_FCC40225, 整数型
    .局部变量 变量_FDC40225, 整数型

    .如果真 (集_函数地址 ≠ 0)
        返回 (真)
    .如果真结束
    变量_FDC40225 ＝ GetModuleHandleA (变量_FAC40225)
    .如果真 (变量_FDC40225 ＝ 0)
        变量_FDC40225 ＝ LoadLibraryA (变量_FAC40225)
    .如果真结束
    .如果真 (变量_FDC40225 ＝ 0)
        返回 (假)
    .如果真结束
    集_函数地址 ＝ GetProcAddress (变量_FDC40225, 变量_FBC40225)
    .如果真 (集_函数地址 ＝ 0)
        返回 (假)
    .如果真结束
    .如果真 (VirtualProtect (集_函数地址, 5, #PAGE_EXECUTE_READWRITE, 集_原保护值) ＝ 假)
        返回 (假)
    .如果真结束
    集_原字节 ＝ 指针到字节集 (集_函数地址, 5)
    集_新字节 ＝ { 233 } ＋ 到字节集 (到整数 (变量_FCC40225 － (集_函数地址 ＋ 5)))
    写到内存 (集_新字节, 集_函数地址, 5)
    集_原字节 ＝ 集_原字节 ＋ { 233, 0, 0, 0, 0 }
    集_原地址 ＝ DLL_lstrcpynA (集_原字节, 集_原字节, 0)
    写到内存 (到整数 (集_函数地址 ＋ 5 － (集_原地址 ＋ 10)), 集_原地址 ＋ 6, 4)
    FreeLibrary (变量_FDC40225)
    返回 (真)
    

.子程序 安装send, 逻辑型, 公开, 安装send     
    .参数 新函数地址, 子程序指针, , 回调子程序指针  该子程序有三个整型参数与一个整型返回值,封包接口(套接字,数据指针,长度指针) 返回 0=放行,-1=拦截

    返回 (安装 (“ws2_32.dll”, “send”, 到整数 (新函数地址)))

.子程序 继续send, , 公开, 取消暂停,继续进行拦截send
    写到内存 (集_新字节, 集_函数地址, 5)
    

.子程序 暂停send, , 公开, 暂停现在的拦截send
    写到内存 (集_原字节, 集_函数地址, 5)
    

.子程序 发送send, 整数型, 公开
    .参数 参_套接字, 整数型
    .参数 参_数据地址, 整数型
    .参数 参_数据长度, 整数型

    返回 (send (参_套接字, 参_数据地址, 参_数据长度, 0))

.子程序 取地址, 整数型, 公开, 取原始数据地址,回调原指针时使用
    返回 (集_原地址)

.子程序 卸载send, 逻辑型, 公开, 卸载send (本命令会在类变量被销毁时自动被调用)
    .局部变量 变量_34C50225, 整数型

    .如果真 (集_函数地址 ＝ 0)
        返回 (假)
    .如果真结束
    写到内存 (集_原字节, 集_函数地址, 5)
    VirtualProtect (集_函数地址, 5, 集_原保护值, 变量_34C50225)
    集_函数地址 ＝ 0
    集_原字节 ＝ { }
    集_原地址 ＝ 0
    返回 (真)

