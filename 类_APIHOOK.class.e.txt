.版本 2

.程序集 类_APIHOOK, , 公开
.程序集变量 集_HOOK, 自定义_347D0141, , "0"

.子程序 _初始化
    清除数组 (集_HOOK)

.子程序 _销毁
    卸载全部 ()

.子程序 安装, 逻辑型, 公开
    .参数 动态链接库名, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
    .参数 API命令名, 文本型, , 要拦截的函数名，如：FindWindowA
    .参数 现子程序指针, 子程序指针, , 回调子程序
    .局部变量 变量_B0820125, 整数型
    .局部变量 变量_B1820125, 整数型
    .局部变量 变量_B2820125, 整数型
    .局部变量 变量_CA820125, 自定义_347D0141

    动态链接库名 ＝ 选择 (取文本右边 (到小写 (动态链接库名), 3) ≠ “dll”, 动态链接库名 ＋ “.dll”, 动态链接库名)
    变量_B2820125 ＝ 取数组成员数 (集_HOOK)
    .计次循环首 (变量_B2820125, 变量_B1820125)
        .如果真 (到小写 (集_HOOK [变量_B1820125].成员_357D0135) ＝ 到小写 (动态链接库名 ＋ API命令名))
            继续 (动态链接库名, API命令名)
            返回 (真)
        .如果真结束
        
    .计次循环尾 ()
    
    变量_B0820125 ＝ GetModuleHandleA (动态链接库名)
    .如果真 (变量_B0820125 ＝ 0)
        变量_B0820125 ＝ LoadLibraryA (动态链接库名)
    .如果真结束
    .如果真 (变量_B0820125 ＝ 0)
        返回 (假)
    .如果真结束
    
    变量_CA820125.成员_FB820135 ＝ 到小写 (动态链接库名 ＋ API命令名)
    变量_CA820125.成员_367D0135 ＝ GetProcAddress (变量_B0820125, API命令名)
    
    变量_CA820125.成员_387D0135 ＝ 指针到字节集 (变量_CA820125.成员_367D0135, 8)
    变量_CA820125.成员_FE820135 ＝ 到字节集 (到整数 (现子程序指针))
    .如果 (修改虚拟保护 (真, 变量_CA820125))
        变量_CA820125.成员_A8820135 ＝ “继续”
        加入成员 (集_HOOK, 变量_CA820125)
        返回 (真)
    .否则
        返回 (假)
    .如果结束
    返回 (真)

.子程序 修改虚拟保护, 逻辑型
    .参数 变量_02830125, 逻辑型
    .参数 变量_03830125, 自定义_347D0141, 参考
    .局部变量 变量_04830125, 字节集
    .局部变量 变量_19830125, 精易_内存属性
    .局部变量 变量_1A830125, 逻辑型
    .局部变量 变量_1D830125, 整数型

    .如果真 (变量_03830125.成员_367D0135 ＝ 0)
        返回 (假)
    .如果真结束
    .如果 (变量_02830125)
        变量_1D830125 ＝ VirtualQueryEx (-1, 变量_03830125.成员_367D0135, 变量_19830125, 28)
        .如果真 (变量_1D830125 ＝ 0)
            返回 (假)
        .如果真结束
        .如果真 (VirtualProtectEx (-1, 变量_19830125.区域地址, 8, 64, 变量_19830125.当前属性) ＝ 0)
            返回 (假)
        .如果真结束
        变量_03830125.成员_377D0135 ＝ 变量_19830125.当前属性
        变量_03830125.成员_FD820135 ＝ 变量_19830125.区域地址
        变量_04830125 ＝ { 184 } ＋ 变量_03830125.成员_FE820135 ＋ { 255, 224 }
        变量_1A830125 ＝ WriteProcessMemory_字节集 (-1, 变量_03830125.成员_367D0135, 变量_04830125, 取字节集长度 (变量_04830125), 0)
    .否则
        变量_1A830125 ＝ WriteProcessMemory_字节集 (-1, 变量_03830125.成员_367D0135, 变量_03830125.成员_387D0135, 取字节集长度 (变量_03830125.成员_387D0135), 0)
    .如果结束
    返回 (变量_1A830125)

.子程序 继续, 逻辑型, 公开, 继续拦截指定的函数名，成功返回真，失败返回假。
    .参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
    .参数 函数名, 文本型, , 要继续HOOK的函数名 如：FindWindowA
    .局部变量 变量_4B7D0125, 整数型

    动态链接库 ＝ 选择 (取文本右边 (到小写 (动态链接库), 3) ≠ “dll”, 动态链接库 ＋ “.dll”, 动态链接库)
    .计次循环首 (取数组成员数 (集_HOOK), 变量_4B7D0125)
        .如果真 (到小写 (集_HOOK [变量_4B7D0125].成员_FB820135) ＝ 到小写 (动态链接库 ＋ 函数名))
            .如果真 (集_HOOK [变量_4B7D0125].成员_A8820135 ＝ “继续”)
                返回 (真)
            .如果真结束
            修改虚拟保护 (真, 集_HOOK [变量_4B7D0125])
            集_HOOK [变量_4B7D0125].成员_A8820135 ＝ “继续”
            返回 (真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (假)

.子程序 是否已安装, 逻辑型, 公开, 判断此HOOK函数是否已安装，真=已安装，假=未安装。
    .参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
    .参数 函数名, 文本型, , 要暂停HOOK的函数名 如：FindWindowA
    .局部变量 变量_E7BE0125, 整数型

    动态链接库 ＝ 选择 (取文本右边 (到小写 (动态链接库), 3) ≠ “dll”, 动态链接库 ＋ “.dll”, 动态链接库)
    .计次循环首 (取数组成员数 (集_HOOK), 变量_E7BE0125)
        .如果真 (到小写 (集_HOOK [变量_E7BE0125].成员_FB820135) ＝ 到小写 (动态链接库 ＋ 函数名))
            返回 (真)
        .如果真结束
        
    .计次循环尾 ()
    返回 (假)

.子程序 暂停, 逻辑型, 公开, 暂停拦截指定的函数名，成功返回真，失败返回假。
    .参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
    .参数 函数名, 文本型, , 要暂停HOOK的函数名 如：FindWindowA
    .局部变量 变量_4E7D0125, 整数型

    动态链接库 ＝ 选择 (取文本右边 (到小写 (动态链接库), 3) ≠ “dll”, 动态链接库 ＋ “.dll”, 动态链接库)
    .计次循环首 (取数组成员数 (集_HOOK), 变量_4E7D0125)
        .如果真 (到小写 (集_HOOK [变量_4E7D0125].成员_FB820135) ＝ 到小写 (动态链接库 ＋ 函数名))
            .如果真 (集_HOOK [变量_4E7D0125].成员_A8820135 ＝ “暂停”)
                返回 (真)
            .如果真结束
            修改虚拟保护 (假, 集_HOOK [变量_4E7D0125])
            集_HOOK [变量_4E7D0125].成员_A8820135 ＝ “暂停”
            返回 (真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (假)

.子程序 取地址, 整数型, 公开, 取指定函数名原始数据地址，回调原指针时使用。成功返回地址，失败返回-1。
    .参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
    .参数 函数名, 文本型, , 要取出地址的函数名 如：FindWindowA
    .局部变量 变量_507D0125, 整数型
    .局部变量 变量_517D0125, 整数型

    动态链接库 ＝ 选择 (取文本右边 (到小写 (动态链接库), 3) ≠ “dll”, 动态链接库 ＋ “.dll”, 动态链接库)
    变量_507D0125 ＝ 取数组成员数 (集_HOOK)
    .计次循环首 (变量_507D0125, 变量_517D0125)
        .如果真 (到小写 (集_HOOK [变量_517D0125].成员_FB820135) ＝ 到小写 (动态链接库 ＋ 函数名))
            返回 (集_HOOK [变量_517D0125].成员_FD820135)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (-1)

.子程序 卸载, 逻辑型, 公开, 卸载指定的函数名的APIHOOK，成功返回真，失败返回假。
    .参数 动态链接库, 文本型, , 要拦截的【函数名】所在【动态链接库】的路径，如：user32.dll
    .参数 函数名, 文本型, , 要卸载HOOK的函数名 如：FindWindowA
    .局部变量 变量_557D0125, 整数型

    动态链接库 ＝ 选择 (取文本右边 (到小写 (动态链接库), 3) ≠ “dll”, 动态链接库 ＋ “.dll”, 动态链接库)
    .计次循环首 (取数组成员数 (集_HOOK), 变量_557D0125)
        .如果真 (到小写 (集_HOOK [变量_557D0125].成员_FB820135) ＝ 到小写 (动态链接库 ＋ 函数名))
            WriteProcessMemory_字节集 (-1, 集_HOOK [变量_557D0125].成员_367D0135, 集_HOOK [变量_557D0125].成员_387D0135, 取字节集长度 (集_HOOK [变量_557D0125].成员_387D0135), 0)
            VirtualProtectEx (-1, 集_HOOK [变量_557D0125].成员_FD820135, 8, 32, 集_HOOK [变量_557D0125].成员_377D0135)
            删除成员 (集_HOOK, 变量_557D0125, 1)
            返回 (真)
            跳出循环 ()
        .如果真结束
        
    .计次循环尾 ()
    返回 (假)

.子程序 卸载全部, , 公开, 卸载全部的HOOK，程序关闭时，本命令会被自动调用
    .局部变量 变量_577D0125, 整数型

    ' .计次循环首 (取数组成员数 (集_HOOK), 变量_577D0125)
        
        
        
    ' .计次循环尾 ()
    .变量循环首 (取数组成员数 (集_HOOK), 1, -1, 变量_577D0125)
        WriteProcessMemory_字节集 (-1, 集_HOOK [变量_577D0125].成员_367D0135, 集_HOOK [变量_577D0125].成员_387D0135, 取字节集长度 (集_HOOK [变量_577D0125].成员_387D0135), 0)
        VirtualProtectEx (-1, 集_HOOK [变量_577D0125].成员_FD820135, 8, 32, 集_HOOK [变量_577D0125].成员_377D0135)
        删除成员 (集_HOOK, 变量_577D0125, 1)
    .变量循环尾 ()

