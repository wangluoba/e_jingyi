.版本 2

.程序集 集_音乐音量
.子程序 音乐_时长, 整数型, 公开, 获取音乐文件时长，获取总毫秒数
    .参数 文件路径, 文本型, , 音乐文件的完整路径
    .局部变量 变量_7C7E0225, 文本型

    变量_7C7E0225 ＝ 取空白文本 (255)
    DLL_mciSendStringA2 (“open ” ＋ #引号 ＋ 文件路径 ＋ #引号 ＋ “ alias tmpMusiczxczzcx”, 字符 (0), 0, 0)
    DLL_mciSendStringA2 (“status ” ＋ “tmpMusiczxczzcx” ＋ “ length”, 变量_7C7E0225, 128, 0)
    DLL_mciSendStringA2 (“close ” ＋ “tmpMusiczxczzcx”, 字符 (0), 0, 0)
    返回 (到整数 (变量_7C7E0225))

.子程序 音乐_进度, 整数型, 公开, 播放后用线程或者时钟 实时获取当前播放长度
    .参数 标识, 文本型
    .局部变量 变量_867E0225, 文本型

    变量_867E0225 ＝ 取空白文本 (255)
    DLL_mciSendStringA2 (“status ” ＋ 标识 ＋ “ position”, 变量_867E0225, 256, 0)
    返回 (到整数 (变量_867E0225))

.子程序 音乐_置进度, , 公开, 移动到指定位置并开始播放
    .参数 标识, 文本型, , 音乐_播放中使用的标识
    .参数 位置, 整数型

    DLL_mciSendStringA2 (“seek ” ＋ 标识 ＋ “ to ” ＋ 到文本 (位置), “0”, 0, 0)
    DLL_mciSendStringA2 (“play ” ＋ 标识, “0”, 0, 0)

.子程序 音乐_播放, 逻辑型, 公开, 真=播放成功,假=播放失败。可用于同时播放多首音乐，只要标识不同
    .参数 文件名, 文本型, , 支持格式:mp3,wav,其他格式没有测试..也可以是网络地址
    .参数 标识, 文本型, , 不可以含有空格，用于标识播放了哪个歌曲,可用来控制该音乐。比如:mysong
    .参数 是否等待播放完毕, 逻辑型, 可空, 默认为假，不等待播放完毕直接返回，如果为真，则等待播放完毕后才会返回。
    .参数 是否重新开始, 逻辑型, 可空, 默认为假

    .如果真 (是否重新开始)
        DLL_mciSendStringA2 (“close ” ＋ 标识, “0”, 0, 0)
    .如果真结束
    DLL_mciSendStringA2 (“open ” ＋ #引号 ＋ 文件名 ＋ #引号 ＋ “ alias ” ＋ 标识, “0”, 0, 0)
    返回 (DLL_mciSendStringA2 (“play ” ＋ 标识 ＋ 选择 (是否等待播放完毕 ＝ 真, “ wait”, “”), “0”, 0, 0) ＝ 0)

.子程序 音乐_暂停, 逻辑型, 公开, 暂时后，可调用 音乐_播放() 继续播放
    .参数 标识, 文本型, , 音乐_播放中使用的标识

    返回 (DLL_mciSendStringA2 (“pause ” ＋ 标识, “0”, 0, 0) ＝ 0)

.子程序 音乐_停止, 逻辑型, 公开, 禁止指定标识正在播放的音乐
    .参数 标识, 文本型, , 音乐_播放中使用的标识，即使播放完毕也记得调用一次

    返回 (DLL_mciSendStringA2 (“close ” ＋ 标识, “0”, 0, 0) ＝ 0)

.子程序 音量_置声道, , 公开, 设置左右声道的音量，从0～100
    .参数 左声道音量, 整数型, , 0～100
    .参数 右声道音量, 整数型, , 0～100
    .局部变量 变量_CDC70125, 整数型
    .局部变量 变量_CEC70125, 整数型
    .局部变量 变量_CFC70125, 整数型

    变量_CEC70125 ＝ (100 － 左声道音量) ÷ 100 × 256
    变量_CFC70125 ＝ (100 － 右声道音量) ÷ 100 × 256
    变量_CDC70125 ＝ (257 － 变量_CEC70125) × 255 ＋ 16711680 × (257 － 变量_CFC70125)
    waveOutSetVolume (0, 变量_CDC70125)

.子程序 音量_取声道, , 公开, 取出左右声道的音量，用参考变量，0～100
    .参数 左声道音量, 整数型, 参考, 装载左声道音量的变量
    .参数 右声道音量, 整数型, 参考, 装载右声道音量的变量
    .局部变量 变量_D2C70125, 整数型

    .如果真 (waveOutGetVolume (0, 变量_D2C70125) ＝ 0)
        左声道音量 ＝ 位与 (位或 (变量_D2C70125, 4294901760), 65535) ＼ 256
        左声道音量 ＝ 左声道音量 × 100 ÷ 256
        右声道音量 ＝ 位与 (位或 (变量_D2C70125, 65535), 4294901760) ÷ 65536 ＼ 256
        右声道音量 ＝ 右声道音量 × 100 ÷ 256
        .如果真 (右声道音量 ＜ 0)
            .如果真 (右声道音量 ＝ -50)
                右声道音量 ＝ 0
            .如果真结束
            右声道音量 ＝ 49 ＋ 取绝对值 (50 ＋ 右声道音量)
        .如果真结束
        
    .如果真结束
    

.子程序 音量_静音, , 公开, 设置静音或解除静音,如果已经静音就解除，否则静音
    .参数 窗口句柄, 整数型, , 可以通过“取窗口句柄（）”获得

    SendMessageA (窗口句柄, 793, 2100912, 524288)

.子程序 音量_增加, , 公开, 控制声卡方式增加音量
    .参数 窗口句柄, 整数型, , 可以通过“取窗口句柄（）”获得

    SendMessageA (窗口句柄, 793, 197266, 655360)

.子程序 音量_减少, , 公开, 控制声卡方式减少音量
    .参数 窗口句柄, 整数型, , 可以通过“取窗口句柄（）”获得

    SendMessageA (窗口句柄, 793, 197266, 589824)

.子程序 GetRenderSimpleVol, 整数型
    .局部变量 变量_E8F40225, 整数型
    .局部变量 变量_EBF40225, 整数型
    .局部变量 变量_ECF40225, 整数型
    .局部变量 变量_EEF40225, 整数型
    .局部变量 变量_EFF40225, 整数型

    变量_E8F40225 ＝ DLL_CoCreateInstance3 (取指针_字节集型 (#图片资源_27FB0228), #NULL, #CLSCTX_INPROC_SERVER, 取指针_字节集型 (#图片资源_28FB0228), 变量_EBF40225)
    .如果真 (变量_E8F40225 ＝ #<?未知本地类型?> 且 变量_EBF40225 ≠ #NULL)
        变量_E8F40225 ＝ CallObject (变量_EBF40225, #<?未知本地类型?>, 0, 0, 取指针整数_ (变量_ECF40225), , , , , , )
        SafeRelease (变量_EBF40225)
        .如果真 (变量_E8F40225 ＝ #<?未知本地类型?> 且 变量_ECF40225 ≠ #NULL)
            变量_E8F40225 ＝ CallObject (变量_ECF40225, #<?未知本地类型?>, 取指针_字节集型 (#图片资源_29FB0228), #CLSCTX_INPROC_SERVER, #NULL, 取指针整数_ (变量_EEF40225), , , , , )
            SafeRelease (变量_ECF40225)
            .如果真 (变量_E8F40225 ＝ #<?未知本地类型?> 且 变量_EEF40225 ≠ #NULL)
                变量_E8F40225 ＝ CallObject (变量_EEF40225, #<?未知本地类型?>, #NULL, 0, 取指针整数_ (变量_EFF40225), , , , , , )
                SafeRelease (变量_EEF40225)
                .如果真 (变量_E8F40225 ＝ #<?未知本地类型?> 且 变量_EFF40225 ≠ #NULL)
                    返回 (变量_EFF40225)
                .如果真结束
                
            .如果真结束
            
        .如果真结束
        
    .如果真结束
    返回 (#NULL)

.子程序 音量_设置当前程序音量, 逻辑型, 公开, 设置当前程序在音量合成器中与扬声器的音量比
    .参数 音量, 整数型, , 0-100
    .局部变量 变量_DDF40225, 整数型
    .局部变量 变量_F0F40225, 整数型
    .局部变量 变量_DEF40225, 小数型

    变量_DDF40225 ＝ GetRenderSimpleVol ()
    .如果真 (变量_DDF40225 ≠ #NULL)
        .判断开始 (音量 ≥ 100)
            变量_DEF40225 ＝ 1
        .判断 (音量 ≤ 0)
            变量_DEF40225 ＝ 0
        .默认
            变量_DEF40225 ＝ 音量 ÷ 100
        .判断结束
        变量_F0F40225 ＝ CallObject (变量_DDF40225, #<?未知本地类型?>, 指针_到整数 (取指针地址_小数型 (变量_DEF40225)), #NULL, , , , , , , )
        SafeRelease (变量_DDF40225)
        返回 (变量_F0F40225 ＝ #<?未知本地类型?>)
    .如果真结束
    返回 (假)

.子程序 音量_取当前程序音量, 整数型, 公开, 取当前程序在音量合成器中与扬声器的音量比
    .局部变量 变量_2DF50225, 整数型
    .局部变量 变量_2EF50225, 整数型
    .局部变量 变量_30F50225, 小数型

    变量_2DF50225 ＝ GetRenderSimpleVol ()
    .如果真 (变量_2DF50225 ≠ #NULL)
        变量_2EF50225 ＝ CallObject (变量_2DF50225, #<?未知本地类型?>, 取指针地址_小数型 (变量_30F50225), , , , , , , , )
        SafeRelease (变量_2DF50225)
        .如果真 (变量_2EF50225 ＝ #<?未知本地类型?>)
            返回 (到整数 (四舍五入 (变量_30F50225 × 100, 0)))
        .如果真结束
        
    .如果真结束
    返回 (-1)

.子程序 音量_设置当前程序静音, 逻辑型, 公开, 设置当前程序在音量合成器中静音或取消静音
    .参数 是否静音, 逻辑型, , 为真静音，为假取消静音
    .局部变量 变量_00F50225, 整数型
    .局部变量 变量_09F50225, 整数型

    变量_00F50225 ＝ GetRenderSimpleVol ()
    .如果真 (变量_00F50225 ≠ #NULL)
        变量_09F50225 ＝ CallObject (变量_00F50225, #<?未知本地类型?>, 到整数 (是否静音), #NULL, , , , , , , )
        SafeRelease (变量_00F50225)
        返回 (变量_09F50225 ＝ #<?未知本地类型?>)
    .如果真结束
    返回 (假)

.子程序 音量_当前程序是否静音, 逻辑型, 公开, 取当前程序在音量合成器中是否静音
    .局部变量 变量_14F50225, 整数型
    .局部变量 变量_1DF50225, 整数型
    .局部变量 变量_22F50225, 逻辑型

    变量_14F50225 ＝ GetRenderSimpleVol ()
    .如果真 (变量_14F50225 ≠ #NULL)
        变量_1DF50225 ＝ CallObject (变量_14F50225, #<?未知本地类型?>, 取指针_通用型 (变量_22F50225), , , , , , , , )
        SafeRelease (变量_14F50225)
        .如果真 (变量_1DF50225 ＝ #<?未知本地类型?>)
            返回 (变量_22F50225)
        .如果真结束
        
    .如果真结束
    返回 (假)

